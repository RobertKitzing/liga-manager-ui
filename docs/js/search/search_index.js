var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,0.73,1,3.074]],["body/interfaces/AddMatchData.html",[0,1.22,1,5.564,2,3.047,3,0.147,4,0.147,5,0.133,6,4.455,7,0.413,8,0.791,9,2.293,10,6.188,11,1.811,12,0.569,13,0.01,14,1.193,15,0.219,16,4.042,17,3.578,18,2.119,19,0.721,20,1.977,21,3.287,22,0.133,23,4.057,24,3.751,25,5.932,26,3.578,27,3.578,28,3.162,29,3.337,30,2.941,31,3.916,32,2.583,33,2.583,34,2.993,35,2.299,36,1.36,37,1.977,38,1.977,39,1.884,40,1.884,41,2.237,42,2.583,43,2.583,44,0.18,45,5.138,46,2.194,47,1.981,48,2.194,49,1.608,50,1.533,51,4.801,52,1.608,53,4.801,54,0.147,55,1.57,56,1.496,57,1.608,58,4.801,59,2.237,60,3.287,61,4.801,62,1.754,63,4.801,64,1.178,65,2.528,66,4.455,67,1.992,68,3.162,69,4.801,70,4.178,71,3.578,72,2.299,73,4.455,74,4.455,75,3.948,76,4.455,77,1.608,78,4.801,79,4.455,80,6.393,81,6.393,82,4.801,83,5.138,84,4.801,85,4.801,86,4.801,87,1.533,88,4.801,89,1.96,90,4.801,91,2.75,92,2.583,93,4.801,94,1.688,95,5.904,96,1.688,97,5.904,98,5.904,99,4.801,100,1.688,101,4.801,102,1.688,103,4.801,104,1.688,105,4.801,106,3.425,107,1.713,108,4.455,109,4.801,110,1.426,111,1.266,112,3.425,113,3.948,114,2.583,115,2.119,116,4.455,117,4.801,118,4.4,119,4.801,120,0.006,121,0.007,122,0.006]],["title/injectables/AddTeamToSeasonGQL.html",[123,0.316,124,1.242]],["body/injectables/AddTeamToSeasonGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,1.127,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,1.213,133,2.315,134,1.213,135,2.099,136,0.288,137,2.518,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73]],["title/components/AddUserComponent.html",[19,0.431,331,1.212]],["body/components/AddUserComponent.html",[3,0.117,4,0.117,5,0.106,7,0.329,8,0.684,12,0.664,13,0.01,14,0.953,15,0.211,18,1.69,19,0.702,20,1.924,22,0.106,23,4.376,24,2.992,31,4.106,32,2.06,33,2.06,41,1.784,44,0.117,49,2.489,50,2.372,52,1.71,54,0.117,55,1.252,56,1.592,59,3.059,60,3.496,64,1.253,65,2.263,67,1.791,72,2.935,77,2.053,89,2.681,91,2.925,92,2.748,111,1.01,112,2.732,114,2.748,115,2.254,118,2.854,120,0.005,121,0.006,122,0.005,128,1.347,129,1.284,136,1.011,146,2.353,163,1.956,170,0.725,179,1.314,180,1.314,187,2.263,188,2.004,189,1.38,190,1.414,191,1.111,227,0.914,231,0.609,241,0.661,251,0.661,305,2.357,331,2.103,332,1.886,333,1.486,334,1.45,335,1.45,336,7.843,337,7.152,338,4.2,339,1.45,340,2.515,341,1.84,342,7.144,343,6.349,344,6.301,345,6.301,346,7.144,347,1.554,348,6.349,349,7.62,350,3.83,351,3.934,352,4.568,353,3.934,354,3.2,355,6.349,356,1.592,357,1.517,358,4.761,359,1.865,360,4.761,361,1.886,362,6.349,363,6.13,364,4.761,365,4.761,366,5.559,367,4.761,368,4.761,369,4.761,370,4.761,371,4.761,372,4.761,373,4.761,374,3.149,375,2.43,376,2.43,377,1.67,378,3.333,379,4.739,380,3.553,381,4.761,382,5.04,383,4.2,384,4.761,385,4.761,386,4.761,387,4.2,388,6.349,389,4.761,390,4.761,391,4.761,392,4.761,393,4.761,394,4.761,395,4.788,396,4.196,397,4.761,398,4.788,399,5.321,400,4.2,401,3.241,402,4.761,403,4.2,404,4.761,405,4.2,406,4.2,407,6.349,408,6.349,409,6.349,410,5.601,411,4.739,412,4.739,413,3.643,414,6.349,415,2.855,416,6.349,417,1.085,418,1.933,419,1.933,420,1.45,421,2.32,422,1.45,423,1.314,424,1.45,425,1.45,426,1.45,427,1.283,428,1.45,429,1.314,430,1.45,431,1.314,432,1.45,433,1.314,434,1.45,435,1.283,436,1.45,437,1.314,438,1.45,439,1.314,440,1.45,441,1.314,442,1.45,443,1.314,444,1.45,445,1.283,446,1.45,447,1.314,448,1.45,449,1.314,450,1.45,451,1.314,452,1.45,453,1.314,454,1.45,455,1.314,456,1.45,457,1.283,458,1.45,459,1.252,460,1.45,461,1.283,462,1.45,463,1.314,464,1.45,465,1.314,466,1.414,467,1.45,468,1.314,469,1.45,470,1.45,471,1.283,472,1.45,473,1.283,474,1.45,475,1.314,476,1.45,477,1.283,478,1.45,479,1.314,480,1.38,481,1.45,482,1.45]],["title/components/AddteamComponent.html",[19,0.431,423,1.212]],["body/components/AddteamComponent.html",[3,0.137,4,0.137,5,0.125,7,0.387,8,0.759,12,0.647,13,0.01,14,1.159,15,0.205,18,1.985,19,0.758,20,2.079,22,0.125,23,4.51,24,3.514,36,1.758,41,2.095,44,0.137,47,1.844,49,2.511,50,2.393,52,1.899,54,0.137,55,1.471,56,1.767,64,1.391,67,2.137,72,2.154,77,2.183,79,5.26,89,2.8,91,2.576,92,2.42,114,2.42,115,1.985,120,0.006,121,0.007,122,0.006,136,0.974,170,0.795,227,0.716,231,0.716,241,0.776,251,0.776,331,1.543,332,2.093,333,1.745,334,1.702,335,1.702,339,1.702,340,1.661,341,2.042,347,1.725,350,4.498,356,1.934,357,1.844,359,1.889,361,1.661,377,1.471,401,2.854,413,4.044,415,2.641,417,1.274,418,2.146,419,2.146,420,1.702,421,2.467,422,1.702,423,2.236,424,1.702,425,1.702,426,1.702,427,1.506,428,1.702,429,1.543,430,1.702,431,1.543,432,1.702,433,1.543,434,1.702,435,1.506,436,1.702,437,1.543,438,1.702,439,1.543,440,1.702,441,1.543,442,1.702,443,1.543,444,1.702,445,1.506,446,1.702,447,1.543,448,1.702,449,1.543,450,1.702,451,1.543,452,1.702,453,1.543,454,1.702,455,1.543,456,1.702,457,1.506,458,1.702,459,1.471,460,1.702,461,1.506,462,1.702,463,1.543,464,1.702,465,1.945,466,2.093,467,1.702,468,1.543,469,1.702,470,1.702,471,1.506,472,1.702,473,1.506,474,1.702,475,1.543,476,1.702,477,1.506,478,1.702,479,1.543,480,1.62,481,1.702,482,1.702,483,4.932,484,7.717,485,7.047,486,6.233,487,6.216,488,7.047,489,6.233,490,5.592,491,6.216,492,5.592,493,4.932,494,5.592,495,7.047,496,5.592,497,5.592,498,5.592,499,4.173,500,4.932,501,5.592,502,5.592,503,5.592,504,5.592,505,5.26,506,7.047]],["title/components/AddtournamentroundComponent.html",[19,0.431,55,1.155]],["body/components/AddtournamentroundComponent.html",[0,1.034,1,5.501,3,0.113,4,0.113,5,0.103,6,3.448,7,0.319,8,0.67,9,2.028,10,3.448,11,1.053,12,0.683,13,0.01,14,0.694,15,0.209,16,4.327,17,2.769,18,1.64,19,0.691,20,1.895,21,2.544,22,0.103,23,4.396,24,2.903,25,6.174,26,2.769,27,2.769,28,2.447,29,3.473,30,2.276,31,4.075,32,1.999,33,1.999,34,2.869,35,1.779,36,1.053,37,2.028,38,2.028,39,1.933,40,1.933,41,1.731,42,1.999,43,1.999,44,0.153,45,4.925,46,2.169,47,1.934,48,2.169,49,2.484,50,2.367,51,5.005,52,1.676,53,5.005,54,0.113,55,1.98,56,1.56,57,1.895,58,5.659,59,2.331,60,3.427,61,5.659,62,1.799,63,5.659,64,1.228,65,2.334,66,4.644,67,2.136,68,4.162,69,5.659,70,4.925,71,3.73,72,3.027,73,3.448,74,3.448,75,3.056,76,3.448,77,2.028,78,3.716,79,5.618,80,5.659,81,5.659,82,3.716,83,4.356,84,5.005,85,3.716,86,3.716,87,1.186,88,5.005,89,2.31,90,6.055,91,2.129,92,1.999,93,3.716,94,1.306,95,5.005,96,1.306,97,5.005,98,5.005,99,3.716,100,1.306,101,3.716,102,1.306,103,3.716,104,1.306,105,3.716,106,2.651,107,1.452,108,3.448,109,3.716,110,1.104,111,0.98,112,2.651,113,3.056,114,1.999,115,1.64,116,3.448,117,5.005,118,3.73,119,5.005,120,0.005,121,0.006,122,0.005,128,0.98,129,0.934,136,1.021,170,0.77,191,1.452,227,0.591,231,0.591,241,0.641,251,0.641,331,1.275,332,1.848,334,1.406,335,1.406,339,1.406,340,1.372,347,1.523,356,1.887,357,1.799,359,1.981,361,2.334,377,1.215,413,4.32,415,3.28,417,1.053,418,1.894,419,1.894,420,1.406,421,2.292,422,1.406,423,1.275,424,1.406,425,1.406,426,1.406,427,1.245,428,1.406,429,1.275,430,1.406,431,1.275,432,1.406,433,1.275,434,1.406,435,1.245,436,1.406,437,1.275,438,1.406,439,1.275,440,1.406,441,1.275,442,1.406,443,1.275,444,1.406,445,1.245,446,1.406,447,1.275,448,1.406,449,1.275,450,1.406,451,1.275,452,1.406,453,1.275,454,1.406,455,1.275,456,1.406,457,1.245,458,1.406,459,1.215,460,1.406,461,1.245,462,1.406,463,1.275,464,1.406,465,1.275,466,1.372,467,1.406,468,1.275,469,1.406,470,1.406,471,1.245,472,1.406,473,1.245,474,1.406,475,1.275,476,1.406,477,1.245,478,1.406,479,1.275,480,1.339,481,1.406,482,1.406,507,6.222,508,6.222,509,6.222,510,4.62,511,6.222,512,4.62,513,4.62,514,4.62,515,4.62,516,4.62,517,4.62,518,4.62,519,2.903,520,4.62,521,4.62,522,4.62,523,4.62,524,4.62,525,4.62,526,4.62,527,6.222,528,6.222,529,6.222,530,6.222,531,6.222,532,5.618,533,6.222,534,6.222]],["title/components/AdminComponent.html",[19,0.431,427,1.183]],["body/components/AdminComponent.html",[3,0.15,4,0.15,5,0.137,7,0.423,13,0.009,15,0.183,19,0.789,20,2.165,22,0.137,23,3.125,24,3.847,44,0.15,49,2.523,50,2.404,52,2.008,54,0.15,55,1.61,56,1.868,64,1.586,77,2.253,120,0.006,121,0.008,122,0.006,136,0.852,147,2.057,170,0.709,227,0.783,231,0.783,241,0.85,251,0.85,331,1.69,332,2.214,333,1.911,334,1.864,335,1.864,339,1.864,340,1.818,341,2.16,347,1.824,359,1.498,361,1.818,377,1.61,417,1.395,418,2.269,419,2.269,420,1.864,421,2.546,422,1.864,423,1.69,424,1.864,425,1.864,426,1.864,427,2.253,428,1.864,429,1.69,430,1.864,431,1.69,432,1.864,433,1.69,434,1.864,435,1.649,436,1.864,437,1.69,438,1.864,439,1.69,440,1.864,441,1.69,442,1.864,443,1.69,444,1.864,445,1.649,446,1.864,447,1.69,448,1.864,449,1.69,450,1.864,451,1.69,452,1.864,453,1.69,454,1.864,455,1.69,456,1.864,457,1.649,458,1.864,459,1.61,460,1.864,461,1.649,462,1.864,463,1.69,464,1.864,465,1.69,466,1.818,467,1.864,468,1.69,469,1.864,470,1.864,471,1.649,472,1.864,473,1.649,474,1.864,475,1.69,476,1.864,477,1.649,478,1.864,479,1.69,480,1.774,481,1.864,482,1.864,535,5.4,536,8.037,537,7.454,538,6.122,539,6.122]],["title/guards/AdminGuard.html",[540,3.533,541,3.074]],["body/guards/AdminGuard.html",[3,0.167,4,0.167,5,0.152,7,0.471,12,0.528,13,0.009,15,0.207,22,0.152,44,0.167,54,0.167,56,1.709,64,1.568,65,2.025,120,0.007,121,0.008,122,0.007,123,0.571,136,0.961,170,0.649,266,1.517,267,1.481,347,1.945,353,4.377,354,3.639,356,1.709,357,1.629,359,1.945,376,3.48,541,5.563,542,5.484,543,6.013,544,7.187,545,7.187,546,4.284,547,6.817,548,6.817,549,6.817,550,3.043,551,2.898,552,7.948]],["title/modules/AdminModule.html",[553,1.212,554,3.278]],["body/modules/AdminModule.html",[3,0.149,4,0.149,5,0.136,13,0.01,15,0.225,22,0.136,44,0.149,54,0.149,55,2.34,120,0.006,121,0.008,122,0.006,147,1.68,331,2.403,337,4.895,417,1.387,423,2.403,427,2.346,449,2.403,451,2.403,453,2.403,459,2.29,465,2.456,479,2.403,499,4.542,500,5.368,553,1.68,554,6.979,555,2.105,556,2.898,557,3.817,558,2.998,559,2.998,560,2.898,561,5.368,562,5.368,563,5.368,564,6.095,565,6.095,566,4.444,567,3.791,568,3.106,569,3.106,570,6.086,571,5.974,572,2.861,573,2.783,574,5.368,575,3.492,576,3.824,577,6.086,578,6.086,579,6.086,580,6.086,581,6.086,582,6.086,583,4.26,584,6.086,585,6.086,586,6.086,587,6.086,588,4.895,589,6.086,590,6.086,591,4.895]],["title/modules/AdminRoutingModule.html",[553,1.212,564,3.074]],["body/modules/AdminRoutingModule.html",[3,0.171,4,0.171,5,0.156,13,0.01,15,0.214,19,0.686,22,0.156,44,0.171,54,0.171,120,0.007,121,0.008,122,0.007,255,1.132,427,2.171,541,4.887,550,3.116,555,2.414,564,5.641,572,2.689,573,3.019,574,6.158,592,6.982,593,4.006,594,4.336,595,4.006,596,6.982,597,4.006,598,4.185]],["title/injectables/AllSeasonsListGQL.html",[123,0.316,319,1.242]],["body/injectables/AllSeasonsListGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.849,37,0.679,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.055,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.675,132,0.767,133,2.248,134,0.767,135,2.025,136,0.288,138,2.625,139,0.617,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.679,147,1.1,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.1,154,1.841,155,1.841,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.041,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.816,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.135,180,2.135,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.478,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.155,197,0.647,198,2,199,0.73,200,1.1,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.711,216,0.748,217,1.213,218,1.669,219,0.748,220,1.398,221,1.669,222,1.468,223,1.155,224,1.468,225,1.914,226,0.748,227,0.905,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.155,243,1.183,244,0.73,245,1.155,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.841,258,1.432,259,1.127,260,1.432,261,1.155,262,1.155,263,1.432,264,1.432,265,0.73,266,1.922,267,1.876,268,0.712,269,2.443,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.679,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.679,314,0.767,315,1.213,316,0.712,317,0.679,318,0.767,319,1.127,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,599,2.519]],["title/injectables/AllTeamsGQL.html",[123,0.316,320,1.242]],["body/injectables/AllTeamsGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.554,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.866,37,0.679,38,1.074,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.837,62,1.182,87,0.647,94,1.589,96,1.589,100,1.589,102,0.713,104,0.713,107,2.055,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.511,131,2.675,132,0.767,133,2.248,134,0.767,135,2.025,136,0.288,138,2.625,139,0.617,140,1.589,141,1.213,142,0.73,143,1.184,144,1.184,145,1.184,146,0.679,147,1.1,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.669,162,0.767,163,2.041,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.184,170,0.812,171,1.184,172,1.184,173,1.505,174,1.669,175,1.184,176,1.751,177,0.767,178,1.669,179,2.135,180,2.135,181,1.887,182,1.184,183,1.669,184,1.184,185,1.213,186,1.213,187,1.669,188,1.478,189,1.887,190,1.669,191,1.698,192,1.184,193,0.767,194,1.669,195,1.933,196,1.155,197,0.647,198,2,199,0.73,200,1.1,201,1.433,202,1.074,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.711,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.184,223,1.155,224,1.468,225,1.914,226,0.748,227,0.905,228,1.468,229,1.184,230,1.774,231,0.783,232,2.223,233,1.184,234,1.184,235,1.869,236,1.671,237,0.632,238,1.184,239,1.184,240,1.184,241,1.073,242,1.155,243,1.184,244,0.73,245,1.155,246,1.398,247,1.184,248,0.73,249,1.69,250,1.365,251,0.553,252,1.127,253,0.713,254,0.767,255,1.208,256,1.433,257,1.928,258,1.433,259,1.127,260,1.433,261,1.155,262,1.155,263,1.433,264,1.433,265,0.73,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.505,272,0.713,273,0.767,274,0.767,275,0.713,276,0.767,277,0.767,278,0.663,279,0.767,280,0.767,281,0.679,282,0.767,283,0.767,284,0.713,285,0.767,286,0.767,287,0.713,288,0.767,289,0.767,290,0.713,291,0.767,292,0.713,293,0.767,294,0.767,295,0.713,296,0.767,297,0.767,298,0.713,299,0.713,300,0.767,301,0.767,302,0.713,303,0.767,304,0.767,305,0.713,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.679,314,0.767,315,1.213,316,0.713,317,0.679,318,0.767,319,0.713,320,1.127,321,0.767,322,0.767,323,0.663,324,0.713,325,0.73,326,1.048,327,1.127,328,1.127,329,0.713,330,0.73,600,2.52]],["title/injectables/AllTournamentListGQL.html",[39,1.128,123,0.316]],["body/injectables/AllTournamentListGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.554,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.849,37,0.679,38,1.074,39,1.023,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.182,87,0.647,94,1.589,96,1.589,100,1.589,102,0.713,104,0.713,107,2.055,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.511,131,2.675,132,0.767,133,2.248,134,0.767,135,2.025,136,0.288,138,2.625,139,0.617,140,1.589,141,1.213,142,0.73,143,1.184,144,1.184,145,1.184,146,0.679,147,1.1,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.669,162,0.767,163,2.041,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.184,170,0.816,171,1.184,172,1.184,173,1.505,174,1.669,175,1.184,176,1.751,177,0.767,178,1.669,179,2.135,180,2.135,181,1.887,182,1.184,183,1.669,184,1.184,185,1.213,186,1.213,187,1.669,188,1.478,189,1.887,190,1.669,191,1.698,192,1.184,193,0.767,194,1.669,195,1.933,196,1.155,197,0.647,198,2,199,0.73,200,1.1,201,1.433,202,1.074,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.711,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.184,223,1.433,224,1.669,225,1.914,226,0.748,227,0.905,228,1.468,229,1.184,230,1.774,231,0.783,232,2.223,233,1.184,234,1.184,235,1.869,236,1.671,237,0.632,238,1.184,239,1.184,240,1.184,241,1.073,242,1.155,243,1.184,244,0.73,245,1.155,246,1.398,247,1.184,248,0.73,249,1.69,250,1.365,251,0.553,252,1.127,253,0.713,254,0.767,255,1.208,256,1.433,257,1.841,258,1.433,259,1.127,260,1.433,261,1.155,262,1.155,263,1.433,264,1.433,265,0.73,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.505,272,0.713,273,0.767,274,0.767,275,0.713,276,0.767,277,0.767,278,0.663,279,0.767,280,0.767,281,0.679,282,0.767,283,0.767,284,0.713,285,0.767,286,0.767,287,0.713,288,0.767,289,0.767,290,0.713,291,0.767,292,0.713,293,0.767,294,0.767,295,0.713,296,0.767,297,0.767,298,0.713,299,0.713,300,0.767,301,0.767,302,0.713,303,0.767,304,0.767,305,0.713,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.679,314,0.767,315,1.213,316,0.713,317,0.679,318,0.767,319,0.713,320,0.713,321,0.767,322,0.767,323,0.663,324,0.713,325,0.73,326,1.048,327,1.127,328,1.127,329,0.713,330,0.73,601,2.52]],["title/injectables/AllUsersGQL.html",[123,0.316,324,1.242]],["body/injectables/AllUsersGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.554,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.849,37,0.679,38,1.074,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.182,87,0.647,94,1.589,96,1.589,100,1.589,102,0.713,104,0.713,107,2.055,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.511,131,2.675,132,0.767,133,2.248,134,0.767,135,2.025,136,0.288,138,2.625,139,0.617,140,1.589,141,1.213,142,0.73,143,1.184,144,1.184,145,1.184,146,0.679,147,1.1,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.669,162,0.767,163,2.041,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.184,170,0.812,171,1.184,172,1.184,173,1.505,174,1.669,175,1.184,176,1.751,177,0.767,178,1.669,179,2.135,180,2.135,181,1.887,182,1.184,183,1.669,184,1.184,185,1.213,186,1.213,187,1.669,188,1.478,189,1.887,190,1.669,191,1.698,192,1.184,193,0.767,194,1.669,195,1.933,196,1.155,197,0.647,198,2,199,0.73,200,1.1,201,1.433,202,1.074,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.711,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.184,223,1.155,224,1.468,225,1.914,226,0.748,227,0.931,228,1.468,229,1.184,230,1.976,231,0.783,232,2.223,233,1.184,234,1.184,235,1.869,236,1.671,237,0.632,238,1.184,239,1.184,240,1.184,241,1.073,242,1.155,243,1.184,244,0.73,245,1.155,246,1.398,247,1.184,248,0.73,249,1.69,250,1.365,251,0.553,252,1.127,253,0.713,254,0.767,255,1.208,256,1.433,257,1.841,258,1.433,259,1.127,260,1.433,261,1.155,262,1.155,263,1.629,264,1.433,265,0.73,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.505,272,0.713,273,0.767,274,0.767,275,0.713,276,0.767,277,0.767,278,0.663,279,0.767,280,0.767,281,0.679,282,0.767,283,0.767,284,0.713,285,0.767,286,0.767,287,0.713,288,0.767,289,0.767,290,0.713,291,0.767,292,0.713,293,0.767,294,0.767,295,0.713,296,0.767,297,0.767,298,0.713,299,0.713,300,0.767,301,0.767,302,0.713,303,0.767,304,0.767,305,0.713,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.679,314,0.767,315,1.213,316,0.713,317,0.679,318,0.767,319,0.713,320,0.713,321,0.767,322,0.767,323,0.663,324,1.127,325,0.73,326,1.048,327,1.127,328,1.127,329,0.713,330,0.73,602,2.52]],["title/components/AppComponent.html",[19,0.431,429,1.212]],["body/components/AppComponent.html",[3,0.121,4,0.121,5,0.11,7,0.34,8,0.698,12,0.622,13,0.01,14,1.09,15,0.209,18,1.745,19,0.713,20,1.955,22,0.11,29,3.657,30,2.421,44,0.121,49,2.494,50,2.376,52,1.747,54,0.121,55,1.292,56,1.625,64,1.28,65,1.926,67,2.163,75,3.25,77,2.079,89,2.383,120,0.005,121,0.007,122,0.005,136,0.986,170,0.734,227,0.629,231,0.629,241,0.682,251,0.682,253,1.39,255,1.051,267,1.408,331,1.356,332,1.926,333,1.534,334,1.496,335,1.496,339,1.496,340,1.46,341,1.879,347,1.587,351,4.417,352,4.809,353,4.249,354,3.368,356,1.625,357,1.55,359,1.963,361,2.292,376,2.508,377,1.292,415,3.087,417,1.12,418,1.974,419,1.974,420,1.496,421,2.349,422,1.496,423,1.356,424,1.496,425,1.496,426,1.496,427,1.324,428,1.496,429,2.13,430,1.496,431,1.79,432,1.496,433,1.356,434,1.496,435,1.324,436,1.496,437,1.356,438,1.496,439,1.356,440,1.496,441,1.356,442,1.496,443,1.356,444,1.496,445,1.324,446,1.496,447,1.79,448,1.496,449,1.356,450,1.496,451,1.356,452,1.496,453,1.356,454,1.496,455,1.356,456,1.496,457,1.324,458,1.496,459,1.292,460,1.496,461,1.324,462,1.496,463,1.356,464,1.496,465,1.356,466,1.46,467,1.496,468,1.356,469,1.496,470,1.496,471,1.324,472,1.496,473,1.324,474,1.496,475,1.356,476,1.496,477,1.324,478,1.496,479,1.356,480,1.424,481,1.496,482,1.496,486,5.416,489,5.759,546,3.088,603,4.335,604,7.257,605,6.484,606,7.717,607,6.484,608,7.717,609,7.717,610,7.257,611,5.104,612,4.914,613,4.914,614,4.914,615,6.484,616,4.914,617,4.914,618,4.914,619,4.914,620,4.914,621,4.914,622,4.335,623,4.335,624,3.668,625,4.914,626,3.668,627,4.335,628,4.914,629,4.335,630,4.335,631,4.914,632,4.914,633,4.914,634,6.484,635,4.914,636,4.914,637,4.914,638,4.914,639,4.914,640,4.914,641,4.914,642,4.914,643,4.914,644,4.914,645,4.914,646,4.914,647,6.484,648,6.484,649,6.484,650,6.484,651,6.484,652,6.484,653,5.719,654,6.484,655,6.484,656,5.719,657,6.484,658,6.484,659,6.484,660,6.484,661,6.484,662,7.257,663,7.257,664,6.401,665,4.914,666,6.401,667,4.914,668,7.257,669,4.914,670,4.938,671,4.914,672,4.914,673,4.914,674,5.719,675,7.717,676,6.484,677,6.484,678,4.914,679,6.484,680,6.484,681,5.719,682,6.484,683,6.484,684,6.484,685,8.239,686,6.484,687,6.484,688,4.914,689,6.484,690,4.914,691,6.484,692,6.484,693,4.914,694,4.914,695,4.914,696,4.914,697,4.914]],["title/modules/AppCoreModule.html",[553,1.212,698,2.905]],["body/modules/AppCoreModule.html",[3,0.172,4,0.172,5,0.156,13,0.009,15,0.214,22,0.156,26,4.189,27,4.189,28,3.701,32,3.024,33,3.024,44,0.172,54,0.172,120,0.007,121,0.008,122,0.007,555,2.416,559,3.442,572,2.691,573,3.021,698,5.332,699,5.62,700,6.987,701,7.111,702,6.017,703,6.987,704,5.62,705,6.987,706,5.62,707,6.163]],["title/modules/AppModule.html",[553,1.212,708,3.278]],["body/modules/AppModule.html",[3,0.144,4,0.144,5,0.131,13,0.01,15,0.227,18,2.084,22,0.131,29,3.312,30,2.891,32,2.54,33,2.54,44,0.178,50,1.507,54,0.144,120,0.006,121,0.007,122,0.006,354,3.624,375,2.996,376,2.996,377,2.075,417,1.337,429,2.5,431,2.439,447,2.439,551,2.14,553,1.62,555,2.03,556,2.795,557,3.756,558,3.886,559,3.886,560,2.795,567,3.708,568,2.996,569,2.996,571,5.843,572,2.798,573,2.722,575,3.368,622,5.177,623,5.177,704,4.721,706,6.345,707,5.177,708,6.906,709,5.177,710,5.177,711,5.177,712,5.177,713,5.177,714,6.042,715,6.042,716,5.709,717,6.042,718,4.721,719,7.264,720,6.407,721,4.721,722,7.264,723,7.264,724,5.869,725,5.869,726,7.264,727,5.177,728,5.177,729,5.177,730,7.264,731,7.264,732,3.882,733,5.869,734,6.407,735,6.407,736,5.869,737,3.518,738,5.869,739,5.869,740,7.264,741,5.177,742,5.869,743,5.869,744,5.177,745,5.177,746,5.869,747,5.869,748,5.177,749,4.721,750,5.177,751,7.264,752,4,753,5.869,754,5.177,755,5.869]],["title/modules/AppRoutingModule.html",[553,1.212,714,3.074]],["body/modules/AppRoutingModule.html",[3,0.163,4,0.163,5,0.148,13,0.01,15,0.211,22,0.148,44,0.192,54,0.163,120,0.007,121,0.008,122,0.007,147,1.834,197,2.01,225,1.747,255,1.077,541,5.827,544,6.695,545,6.695,550,2.966,555,2.298,560,3.164,572,2.559,573,2.934,593,3.813,594,3.996,595,4.492,597,5.186,699,5.345,714,5.48,756,6.645,757,6.543,758,6.645,759,6.645,760,6.645,761,6.645,762,5.861,763,4.959,764,8.972,765,6.645,766,6.645,767,6.645,768,4.175,769,6.645,770,5.861,771,6.645,772,6.645,773,5.345,774,6.645,775,6.645]],["title/interceptors/AuthInterceptor.html",[717,3.074,776,3.874]],["body/interceptors/AuthInterceptor.html",[3,0.164,4,0.164,5,0.149,7,0.462,12,0.608,13,0.01,15,0.211,22,0.149,34,3.401,35,2.572,44,0.164,54,0.164,56,1.674,64,1.318,67,2.091,120,0.007,121,0.008,122,0.007,123,0.564,136,0.897,170,0.747,347,1.921,353,4.323,354,3.615,356,1.968,357,1.876,359,1.634,376,3.408,546,4.195,551,3.041,629,6.925,717,5.496,732,4.416,777,6.676,778,5.889,779,7.851,780,6.676,781,7.851,782,8.609,783,6.709,784,8.609,785,6.676,786,6.676,787,7.851,788,6.676,789,4.983,790,6.676,791,7.851,792,6.676,793,4.673,794,6.676,795,5.889]],["title/injectables/AuthenticationService.html",[123,0.316,354,1.844]],["body/injectables/AuthenticationService.html",[0,1.109,3,0.126,4,0.126,5,0.114,7,0.355,8,0.718,12,0.658,13,0.01,14,1.358,15,0.2,22,0.114,44,0.182,54,0.126,59,3.124,64,1.316,65,2.33,67,2.2,89,2.737,115,2.631,120,0.008,121,0.007,122,0.005,123,0.48,125,1.317,129,1.037,136,1.021,139,1.92,146,1.382,163,1.903,164,1.451,167,1.451,170,0.793,188,1.349,227,1.004,255,0.832,266,1.141,267,1.114,278,2.063,281,2.114,323,2.063,347,1.632,354,3.112,356,2.09,357,1.992,359,2.077,361,1.981,411,3.829,412,3.829,550,2.29,551,3.172,732,3.393,768,4.657,793,4.669,796,3.829,797,5.883,798,6.67,799,6.311,800,6.67,801,6.311,802,6.67,803,6.67,804,4.191,805,5.961,806,5.961,807,5.961,808,5.961,809,5.131,810,6.706,811,5.531,812,5.961,813,5.961,814,5.131,815,5.365,816,6.07,817,5.131,818,4.127,819,5.588,820,5.365,821,5.131,822,4.669,823,5.131,824,5.365,825,5.492,826,5.131,827,4.657,828,5.131,829,5.365,830,5.131,831,5.365,832,5.38,833,5.131,834,5.365,835,5.131,836,5.131,837,5.131,838,5.131,839,5.131,840,5.131,841,5.131,842,5.131,843,5.131,844,4.978,845,4.978,846,3.829,847,2.619,848,3.591,849,3.591,850,3.829,851,4.127,852,4.127,853,5.365,854,4.127,855,4.127,856,2.443,857,6.706,858,4.127,859,5.514,860,5.38,861,4.127,862,3.829,863,3.829,864,4.127,865,5.365,866,4.127,867,4.127,868,4.657,869,5.365,870,4.127,871,5.365,872,4.901,873,4.127,874,4.127,875,4.127,876,4.127,877,5.365,878,4.411,879,4.127,880,4.127,881,3.829,882,4.127,883,4.127,884,4.127,885,3.829,886,4.127,887,4.127]],["title/components/ChangepasswordComponent.html",[19,0.431,431,1.212]],["body/components/ChangepasswordComponent.html",[3,0.135,4,0.135,5,0.123,7,0.381,8,0.752,12,0.644,13,0.01,15,0.198,16,4.578,18,1.955,19,0.753,20,2.064,22,0.123,44,0.135,49,2.509,50,2.392,52,1.88,54,0.135,55,1.448,56,1.75,59,2.615,64,1.377,65,1.636,67,1.921,68,4.404,77,2.171,89,2.516,91,2.538,92,2.383,114,2.383,115,1.955,120,0.006,121,0.007,122,0.006,136,0.986,170,0.729,227,0.705,231,0.705,241,0.764,251,0.764,331,1.52,332,2.073,333,1.719,334,1.677,335,1.677,339,1.677,340,1.636,341,2.023,347,1.708,353,3.844,354,3.383,356,1.38,357,1.316,359,1.708,361,1.636,366,5.422,374,3.643,375,2.811,376,2.811,377,1.448,382,4.617,387,4.858,401,2.811,410,7.107,415,3.271,417,1.255,418,2.125,419,2.125,420,1.677,421,2.453,422,1.677,423,1.52,424,1.677,425,1.677,426,1.677,427,1.484,428,1.677,429,1.52,430,1.677,431,2.224,432,1.677,433,1.52,434,1.677,435,1.484,436,1.677,437,1.52,438,1.677,439,1.52,440,1.677,441,1.52,442,1.677,443,1.52,444,1.677,445,1.484,446,1.677,447,1.52,448,1.677,449,1.52,450,1.677,451,1.52,452,1.677,453,1.52,454,1.677,455,1.52,456,1.677,457,1.484,458,1.677,459,1.448,460,1.677,461,1.484,462,1.677,463,1.52,464,1.677,465,1.52,466,1.636,467,1.677,468,1.52,469,1.677,470,1.677,471,1.484,472,1.677,473,1.484,474,1.677,475,1.52,476,1.677,477,1.484,478,1.677,479,1.52,480,1.596,481,1.677,482,1.677,546,3.461,752,3.033,768,4.815,797,7.492,816,5.719,856,3.324,878,3.643,888,4.858,889,7.663,890,6.98,891,7.663,892,6.98,893,5.507,894,5.507,895,5.507,896,5.507,897,5.507,898,5.507,899,5.507,900,5.507,901,5.507,902,6.98,903,4.858,904,4.43,905,7.107,906,6.157,907,5.614]],["title/components/ContactComponent.html",[19,0.431,433,1.212]],["body/components/ContactComponent.html",[3,0.143,4,0.143,5,0.13,7,0.402,8,0.777,12,0.608,13,0.01,15,0.193,16,4.651,17,3.482,18,2.062,19,0.771,20,2.115,21,3.199,22,0.13,36,1.323,41,2.176,44,0.143,47,1.963,49,2.516,50,2.398,52,1.944,54,0.143,55,1.527,56,1.809,64,1.424,67,2.158,68,4.35,71,4.326,77,2.212,120,0.006,121,0.007,122,0.006,136,0.938,170,0.747,176,2.168,227,0.743,231,0.743,241,1.172,251,0.806,331,1.603,332,2.143,333,1.813,334,1.768,335,1.768,339,1.768,340,1.725,341,2.091,347,1.766,356,1.456,357,1.388,359,1.422,361,1.725,377,1.527,413,4.141,415,3.077,417,1.323,418,2.197,419,2.197,420,1.768,421,2.5,422,1.768,423,1.603,424,1.768,425,1.768,426,1.768,427,1.565,428,1.768,429,1.603,430,1.768,431,1.603,432,1.768,433,2.267,434,1.768,435,1.565,436,1.768,437,1.603,438,1.768,439,1.603,440,1.768,441,1.603,442,1.768,443,1.603,444,1.768,445,1.565,446,1.768,447,1.603,448,1.768,449,1.603,450,1.768,451,1.603,452,1.768,453,1.603,454,1.768,455,1.603,456,1.768,457,1.565,458,1.768,459,1.527,460,1.768,461,1.565,462,1.768,463,1.603,464,1.768,465,1.603,466,1.725,467,1.768,468,1.603,469,1.768,470,1.768,471,1.565,472,1.768,473,1.565,474,1.768,475,1.603,476,1.768,477,1.565,478,1.768,479,1.603,480,1.683,481,1.768,482,1.768,519,3.65,908,5.123,909,7.852,910,7.217,911,5.123,912,5.808,913,5.808,914,5.808,915,5.808,916,6.366]],["title/components/ContactPersonComponent.html",[19,0.431,437,1.212]],["body/components/ContactPersonComponent.html",[3,0.145,4,0.145,5,0.132,7,0.409,12,0.458,13,0.009,15,0.179,19,0.778,20,2.132,22,0.132,41,2.216,44,0.145,49,2.519,50,2.4,52,1.966,54,0.145,55,1.555,56,1.829,64,1.562,77,2.227,120,0.006,121,0.007,122,0.006,136,0.905,170,0.694,227,0.757,231,0.757,241,1.258,242,2.115,251,0.821,331,1.632,332,2.168,333,1.846,334,1.801,335,1.801,339,1.801,340,1.757,341,2.115,347,1.786,359,1.448,361,1.757,377,1.555,415,2.735,417,1.348,418,2.222,419,2.222,420,1.801,421,2.516,422,1.801,423,1.632,424,1.801,425,1.801,426,1.801,427,1.593,428,1.801,429,1.632,430,1.801,431,1.632,432,1.801,433,1.632,434,1.801,435,1.593,436,1.801,437,2.281,438,1.801,439,1.632,440,1.801,441,1.632,442,1.801,443,1.632,444,1.801,445,1.593,446,1.801,447,1.632,448,1.801,449,1.632,450,1.801,451,1.632,452,1.801,453,1.632,454,1.801,455,1.632,456,1.801,457,1.593,458,1.801,459,1.555,460,1.801,461,1.593,462,1.801,463,1.632,464,1.801,465,1.632,466,1.757,467,1.801,468,1.632,469,1.801,470,1.801,471,1.593,472,1.801,473,1.593,474,1.801,475,1.632,476,1.801,477,1.593,478,1.801,479,1.632,480,1.714,481,1.801,482,1.801,656,7.29,917,7.29,918,6.648,919,5.217,920,7.916,921,7.299,922,5.447,923,7.299,924,5.915,925,4.827,926,7.299,927,7.299,928,7.299,929,7.299,930,7.299,931,7.299,932,5.871]],["title/components/ContactlistComponent.html",[19,0.431,435,1.183]],["body/components/ContactlistComponent.html",[3,0.151,4,0.151,5,0.137,7,0.425,13,0.009,15,0.151,19,0.791,20,2.169,22,0.137,44,0.151,49,2.523,50,2.405,52,2.013,54,0.151,55,1.617,56,1.873,64,1.589,77,2.257,120,0.006,121,0.008,122,0.006,136,0.854,170,0.711,227,0.787,231,0.787,241,0.853,251,0.853,331,1.697,332,2.22,333,1.919,334,1.872,335,1.872,339,1.872,340,1.826,341,2.166,347,1.829,359,1.505,361,1.826,377,1.617,417,1.401,418,2.275,419,2.275,420,1.872,421,2.55,422,1.872,423,1.697,424,1.872,425,1.872,426,1.872,427,1.656,428,1.872,429,1.697,430,1.872,431,1.697,432,1.872,433,1.697,434,1.872,435,2.257,436,1.872,437,1.697,438,1.872,439,1.697,440,1.872,441,1.697,442,1.872,443,1.697,444,1.872,445,1.656,446,1.872,447,1.697,448,1.872,449,1.697,450,1.872,451,1.697,452,1.872,453,1.697,454,1.872,455,1.697,456,1.872,457,1.656,458,1.872,459,1.617,460,1.872,461,1.656,462,1.872,463,1.697,464,1.872,465,1.697,466,1.826,467,1.872,468,1.697,469,1.872,470,1.872,471,1.656,472,1.872,473,1.656,474,1.872,475,1.697,476,1.872,477,1.656,478,1.872,479,1.697,480,1.782,481,1.872,482,1.872,933,5.423,934,6.592,935,8.052,936,7.474,937,6.149,938,6.149]],["title/modules/ContactlistModule.html",[553,1.212,939,3.278]],["body/modules/ContactlistModule.html",[3,0.164,4,0.164,5,0.149,13,0.01,15,0.218,22,0.149,44,0.164,54,0.164,120,0.007,121,0.008,122,0.007,200,1.84,417,1.519,435,2.395,463,2.454,475,2.454,553,1.84,555,2.305,556,3.174,557,3.969,558,3.284,559,3.284,560,3.174,566,4.538,567,4.004,568,3.402,569,3.402,572,3.021,573,2.939,575,3.825,576,4.189,934,5.88,939,6.899,940,5.88,941,5.88,942,5.88,943,6.224,944,6.666,945,5.88,946,6.666]],["title/modules/ContactlistRoutingModule.html",[553,1.212,943,3.074]],["body/modules/ContactlistRoutingModule.html",[3,0.172,4,0.172,5,0.156,13,0.009,15,0.209,19,0.689,22,0.156,44,0.172,54,0.172,120,0.007,121,0.008,122,0.007,255,1.136,435,2.176,550,3.129,555,2.424,572,2.7,573,3.027,593,4.023,594,4.343,595,4.023,597,4.023,598,4.203,943,5.654,945,6.184,947,7.011]],["title/injectables/CreateMatchesForSeasonGQL.html",[123,0.316,290,1.242]],["body/injectables/CreateMatchesForSeasonGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.513,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.646,40,0.646,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.648,62,1.181,87,0.646,94,1.588,96,1.588,100,1.588,102,0.712,104,0.712,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.646,126,0.695,127,2.519,128,0.844,129,0.509,130,2.51,131,2.677,132,0.766,133,2.247,134,0.766,135,2.161,136,0.288,138,2.625,139,0.616,140,1.73,141,1.212,142,0.729,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.747,149,0.747,150,0.729,151,2.563,152,1.212,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.668,162,0.766,163,2.04,164,1.588,165,0.766,166,0.766,167,1.126,168,0.766,169,1.183,170,0.812,171,1.183,172,1.183,173,1.71,174,2.024,175,1.183,176,1.75,177,0.766,178,1.668,179,2.134,180,2.134,181,1.886,182,1.183,183,1.668,184,1.183,185,1.212,186,1.212,187,1.668,188,1.477,189,1.886,190,1.668,191,1.698,192,1.183,193,0.766,194,1.668,195,1.932,196,1.154,197,0.646,198,1.999,199,0.729,200,1.099,201,1.432,202,1.073,203,1.773,204,1.212,205,1.467,206,1.467,207,0.766,208,1.212,209,1.609,210,1.212,211,1.212,212,1.212,213,1.212,214,1.212,215,1.71,216,0.747,217,1.212,218,1.668,219,0.747,220,1.126,221,1.467,222,1.183,223,1.154,224,1.467,225,1.913,226,0.747,227,0.904,228,1.467,229,1.183,230,1.773,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.729,245,1.154,246,1.397,247,1.183,248,0.729,249,1.689,250,1.363,251,0.553,252,1.126,253,0.712,254,0.766,255,1.208,256,1.432,257,1.84,258,1.432,259,1.126,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.729,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.504,272,0.712,273,0.766,274,0.766,275,0.712,276,0.766,277,0.766,278,0.662,279,0.766,280,0.766,281,0.678,282,0.766,283,0.766,284,0.712,285,0.766,286,0.766,287,0.712,288,0.766,289,0.766,290,1.126,291,1.212,292,0.712,293,0.766,294,0.766,295,0.712,296,0.766,297,0.766,298,0.712,299,0.712,300,0.766,301,0.766,302,0.712,303,0.766,304,0.766,305,0.712,306,0.729,307,2.315,308,0.766,309,0.766,310,0.695,311,0.766,312,0.766,313,0.678,314,0.766,315,1.212,316,0.712,317,0.678,318,0.766,319,0.712,320,0.712,321,0.766,322,0.766,323,0.662,324,0.712,325,0.729,326,1.047,327,1.126,328,1.126,329,0.712,330,0.729,948,2.517]],["title/injectables/CreateSeasonGQL.html",[123,0.316,284,1.242]],["body/injectables/CreateSeasonGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.822,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,1.127,285,1.213,286,1.213,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,949,2.518]],["title/injectables/CreateTournamentGQL.html",[123,0.316,302,1.242]],["body/injectables/CreateTournamentGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.822,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,1.127,303,1.213,304,1.213,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,950,2.518]],["title/injectables/CreateTournamentRoundGQL.html",[37,1.183,123,0.316]],["body/injectables/CreateTournamentRoundGQL.html",[0,0.82,3,0.062,4,0.062,5,0.056,7,0.174,8,0.428,9,1.834,11,1.551,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.848,37,1.07,38,1.328,39,0.644,40,0.644,44,0.23,46,0.693,47,1.627,48,0.693,54,0.212,57,1.646,62,1.178,87,0.644,94,1.925,96,1.925,100,1.925,102,0.71,104,0.71,107,2.049,110,2.063,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.71,125,0.644,126,0.693,127,2.518,128,0.842,129,0.507,130,2.51,131,2.677,132,0.764,133,2.246,134,0.764,135,2.022,136,0.287,138,2.625,139,0.614,140,1.728,141,1.209,142,0.727,143,1.18,144,1.18,145,1.18,146,0.676,147,1.096,148,0.745,149,0.745,150,0.727,151,2.562,152,1.209,153,2.097,154,1.838,155,1.838,156,2.465,157,1.18,158,1.18,159,1.883,160,1.18,161,1.665,162,0.764,163,2.039,164,1.586,165,0.764,166,0.764,167,1.123,168,0.764,169,1.18,170,0.812,171,1.18,172,1.18,173,1.501,174,1.665,175,1.18,176,1.748,177,0.764,178,1.665,179,2.132,180,2.132,181,1.883,182,1.18,183,1.665,184,1.18,185,1.501,186,1.501,187,1.665,188,1.475,189,1.883,190,1.665,191,1.696,192,1.18,193,0.764,194,1.665,195,1.93,196,1.151,197,0.644,198,1.998,199,0.727,200,1.096,201,1.429,202,1.07,203,1.771,204,1.209,205,1.464,206,1.464,207,0.764,208,1.209,209,1.607,210,1.209,211,1.209,212,1.209,213,1.209,214,1.209,215,1.707,216,0.745,217,1.209,218,1.665,219,0.745,220,1.123,221,1.464,222,1.18,223,1.151,224,1.464,225,1.912,226,0.745,227,0.903,228,1.464,229,1.18,230,1.771,231,0.782,232,2.221,233,1.18,234,1.18,235,1.866,236,1.668,237,0.629,238,1.18,239,1.18,240,1.18,241,1.072,242,1.151,243,1.18,244,0.727,245,1.151,246,1.394,247,1.18,248,0.727,249,1.686,250,1.361,251,0.551,252,1.123,253,0.71,254,0.764,255,1.207,256,1.429,257,1.838,258,1.429,259,1.123,260,1.429,261,1.151,262,1.151,263,1.429,264,1.429,265,0.727,266,1.921,267,1.875,268,0.71,269,2.441,270,2.469,271,1.707,272,0.71,273,0.764,274,0.764,275,0.71,276,0.764,277,0.764,278,0.66,279,0.764,280,0.764,281,0.676,282,0.764,283,0.764,284,0.71,285,0.764,286,0.764,287,0.71,288,0.764,289,0.764,290,0.71,291,0.764,292,0.71,293,0.764,294,0.764,295,0.71,296,0.764,297,0.764,298,0.71,299,0.71,300,0.764,301,0.764,302,0.71,303,0.764,304,0.764,305,0.71,306,0.727,307,2.313,308,0.764,309,0.764,310,0.693,311,0.764,312,0.764,313,0.676,314,0.764,315,1.209,316,0.71,317,0.676,318,0.764,319,0.71,320,0.71,321,0.764,322,0.764,323,0.66,324,0.71,325,0.727,326,1.045,327,1.123,328,1.123,329,0.71,330,0.727,951,2.509]],["title/injectables/CreateUserGQL.html",[123,0.316,305,1.242]],["body/injectables/CreateUserGQL.html",[0,0.818,3,0.061,4,0.061,5,0.056,7,0.173,8,0.427,9,1.507,11,1.549,12,0.718,13,0.01,14,1.385,15,0.121,22,0.056,36,1.846,37,0.674,38,1.067,39,0.642,40,0.642,44,0.23,46,0.69,47,1.625,48,0.69,54,0.212,57,1.643,62,1.176,87,0.642,94,1.582,96,1.582,100,1.582,102,0.707,104,0.707,107,2.049,110,2.062,111,1.902,120,0.005,121,0.004,122,0.003,123,0.622,124,0.707,125,0.642,126,0.69,127,2.517,128,0.84,129,0.505,130,2.509,131,2.676,132,0.761,133,2.244,134,0.761,135,2.019,136,0.286,138,2.625,139,0.612,140,1.582,141,1.206,142,0.725,143,1.176,144,1.176,145,1.176,146,0.674,147,1.093,148,0.743,149,0.743,150,0.725,151,2.561,152,1.206,153,2.094,154,1.835,155,1.835,156,2.465,157,1.176,158,1.176,159,1.88,160,1.176,161,1.662,162,0.761,163,2.099,164,1.582,165,0.761,166,0.761,167,1.12,168,0.761,169,1.176,170,0.812,171,1.176,172,1.176,173,1.498,174,1.662,175,1.176,176,1.745,177,0.761,178,1.662,179,2.215,180,2.215,181,1.88,182,1.176,183,1.662,184,1.176,185,1.206,186,1.206,187,1.927,188,1.788,189,2.104,190,2.019,191,1.694,192,1.176,193,0.761,194,1.662,195,1.927,196,1.148,197,0.642,198,1.996,199,0.725,200,1.093,201,1.425,202,1.067,203,1.767,204,1.206,205,1.461,206,1.461,207,0.761,208,1.206,209,1.604,210,1.206,211,1.206,212,1.206,213,1.206,214,1.206,215,1.704,216,0.743,217,1.206,218,1.662,219,0.743,220,1.12,221,1.461,222,1.176,223,1.148,224,1.461,225,1.909,226,0.743,227,0.902,228,1.461,229,1.176,230,1.767,231,0.78,232,2.22,233,1.176,234,1.176,235,1.864,236,1.666,237,0.627,238,1.176,239,1.176,240,1.176,241,1.071,242,1.148,243,1.176,244,0.725,245,1.148,246,1.391,247,1.176,248,0.725,249,1.683,250,1.358,251,0.55,252,1.12,253,0.707,254,0.761,255,1.206,256,1.425,257,1.835,258,1.425,259,1.12,260,1.425,261,1.148,262,1.148,263,1.425,264,1.425,265,0.725,266,1.92,267,1.874,268,0.707,269,2.44,270,2.467,271,1.498,272,0.707,273,0.761,274,0.761,275,0.707,276,0.761,277,0.761,278,0.658,279,0.761,280,0.761,281,0.674,282,0.761,283,0.761,284,0.707,285,0.761,286,0.761,287,0.707,288,0.761,289,0.761,290,0.707,291,0.761,292,0.707,293,0.761,294,0.761,295,0.707,296,0.761,297,0.761,298,0.707,299,0.707,300,0.761,301,0.761,302,0.707,303,0.761,304,0.761,305,1.12,306,0.725,307,2.31,308,0.761,309,0.761,310,0.69,311,0.761,312,0.761,313,0.674,314,0.761,315,1.206,316,0.707,317,0.674,318,0.761,319,0.707,320,0.707,321,0.761,322,0.761,323,0.658,324,0.707,325,0.725,326,1.042,327,1.12,328,1.12,329,0.707,330,0.725,952,2.5]],["title/interfaces/Credentials.html",[0,0.73,832,2.905]],["body/interfaces/Credentials.html",[0,1.182,2,2.895,3,0.139,4,0.139,5,0.127,7,0.392,8,0.766,12,0.439,13,0.01,14,1.339,15,0.206,22,0.127,44,0.191,54,0.139,59,3.206,64,1.119,65,2.418,67,2.145,89,2.335,115,2.757,120,0.008,121,0.007,122,0.006,123,0.511,139,1.993,146,1.528,163,1.825,164,1.604,167,1.604,188,1.491,227,0.91,255,0.919,266,1.262,267,1.232,278,1.87,281,1.915,323,1.87,354,2.985,411,4.232,412,4.232,550,2.531,551,3.23,732,3.751,768,4.468,793,4.977,796,4.232,799,4.562,801,4.562,805,4.562,806,4.562,807,4.562,808,4.562,810,6.247,811,4.232,812,4.562,813,4.562,815,4.562,816,5.797,819,5.518,820,4.562,822,3.97,824,4.562,825,4.977,827,4.468,829,4.562,831,4.562,832,5.386,834,4.562,844,5.306,845,5.306,846,4.232,847,2.895,848,3.97,849,5.7,850,4.232,851,4.562,852,4.562,853,5.719,854,4.562,855,4.562,856,2.7,857,6.883,858,4.562,859,5.66,860,5.547,861,4.562,862,4.232,863,4.232,864,4.562,865,5.719,866,4.562,867,4.562,868,4.881,869,5.719,870,4.562,871,5.719,872,5.137,873,4.562,874,4.562,875,4.562,876,4.562,877,5.719,878,4.703,879,4.562,880,4.562,881,4.232,882,4.562,883,4.562,884,4.562,885,4.232,886,4.562,887,4.562]],["title/injectables/CustomOwlDateTimeIntl.html",[123,0.316,702,3.278]],["body/injectables/CustomOwlDateTimeIntl.html",[3,0.169,4,0.169,5,0.153,12,0.533,13,0.01,15,0.207,22,0.153,26,4.12,27,4.12,28,3.64,31,4.28,32,2.974,33,2.974,44,0.169,54,0.169,64,1.356,120,0.007,121,0.008,122,0.007,123,0.574,125,1.765,136,0.785,170,0.654,269,2.258,356,1.723,357,1.642,701,7.445,702,5.96,789,5.13,953,6.062,954,6.873,955,6.873,956,7.986,957,6.873,958,6.873,959,6.423,960,6.873,961,6.873,962,7.044,963,6.873]],["title/interfaces/DatePeriod.html",[0,0.73,140,1.242]],["body/interfaces/DatePeriod.html",[0,0.823,2,1.289,3,0.062,4,0.062,5,0.056,7,0.175,8,0.43,9,1.516,11,1.555,12,0.718,13,0.01,14,1.381,15,0.122,22,0.056,36,1.85,37,0.68,38,1.076,39,0.648,40,0.648,44,0.23,46,0.697,47,1.631,48,0.697,54,0.212,57,1.651,62,1.183,87,0.648,94,1.591,96,1.591,100,1.591,102,0.714,104,0.714,107,2.051,110,2.065,111,1.896,120,0.005,121,0.004,122,0.003,123,0.623,124,0.714,126,0.697,127,2.504,128,0.536,130,2.506,131,2.675,132,0.769,133,2.249,134,0.769,135,2.027,138,2.628,139,0.618,140,1.733,141,1.216,142,0.732,143,1.186,144,1.186,145,1.186,146,0.68,147,1.102,148,0.75,149,0.75,150,0.732,151,2.564,152,1.216,153,2.102,154,1.843,155,1.843,156,2.467,157,1.186,158,1.186,159,1.888,160,1.186,161,1.671,162,0.769,163,2.042,164,1.591,165,0.769,166,0.769,167,1.129,168,0.769,169,1.186,170,0.813,171,1.186,172,1.186,173,1.508,174,1.671,175,1.186,176,1.752,177,0.769,178,1.671,179,2.136,180,2.136,181,1.888,182,1.186,183,1.671,184,1.186,185,1.216,186,1.216,187,1.671,188,1.48,189,1.888,190,1.671,191,1.7,192,1.186,193,0.769,194,1.671,195,1.935,196,1.157,197,0.648,198,2.001,199,0.732,200,1.102,201,1.435,202,1.076,203,1.776,204,1.216,205,1.471,206,1.471,207,0.769,208,1.216,209,1.612,210,1.216,211,1.216,212,1.216,213,1.216,214,1.216,215,1.713,216,0.75,217,1.216,218,1.671,219,0.75,220,1.129,221,1.471,222,1.186,223,1.157,224,1.471,225,1.916,226,0.75,227,0.905,228,1.471,229,1.186,230,1.776,231,0.784,232,2.224,233,1.186,234,1.186,235,1.87,236,1.673,237,0.633,238,1.186,239,1.186,240,1.186,241,1.074,242,1.157,243,1.186,244,0.732,245,1.157,246,1.4,247,1.186,248,0.732,249,1.692,250,1.367,251,0.554,252,1.129,253,0.714,254,0.769,255,1.209,256,1.435,257,1.843,258,1.435,259,1.129,260,1.435,261,1.157,262,1.157,263,1.435,264,1.435,265,0.732,266,1.922,267,1.877,268,0.714,269,2.443,270,2.472,271,1.508,272,0.714,273,0.769,274,0.769,275,0.714,276,0.769,277,0.769,278,0.664,279,0.769,280,0.769,281,0.68,282,0.769,283,0.769,284,0.714,285,0.769,286,0.769,287,0.714,288,0.769,289,0.769,290,0.714,291,0.769,292,0.714,293,0.769,294,0.769,295,0.714,296,0.769,297,0.769,298,0.714,299,0.714,300,0.769,301,0.769,302,0.714,303,0.769,304,0.769,305,0.714,306,0.732,307,2.317,308,0.769,309,0.769,310,0.697,311,0.769,312,0.769,313,0.68,314,0.769,315,1.216,316,0.714,317,0.68,318,0.769,319,0.714,320,0.714,321,0.769,322,0.769,323,0.664,324,0.714,325,0.732,326,1.05,327,1.129,328,1.129,329,0.714,330,0.732,357,1.345]],["title/components/EditmatchPitchComponent.html",[19,0.431,439,1.212]],["body/components/EditmatchPitchComponent.html",[3,0.106,4,0.106,5,0.096,7,0.298,8,0.64,12,0.676,13,0.01,14,1.099,15,0.203,16,4.029,17,2.586,18,1.531,19,0.667,20,1.83,21,2.375,22,0.096,34,2.769,35,1.662,41,1.616,42,1.867,43,1.867,44,0.106,49,2.473,50,2.357,52,1.6,54,0.106,55,1.134,56,1.489,59,2.875,64,1.172,65,2.279,67,1.702,68,3.597,71,3.56,77,1.971,89,2.402,91,1.988,92,1.867,113,2.853,114,1.867,115,1.531,120,0.004,121,0.006,122,0.004,128,0.915,129,1.373,136,1.02,170,0.73,202,2.23,227,0.552,231,1.015,235,2.086,237,1.834,241,0.599,251,0.599,255,1.101,331,1.191,332,1.764,333,1.346,334,1.313,335,1.313,339,1.313,340,2.017,341,1.721,347,1.453,356,1.702,357,1.623,359,1.988,361,2.279,366,5.201,374,2.853,375,2.202,377,1.134,382,3.928,401,2.202,415,3.384,417,0.983,418,1.808,419,1.808,420,1.313,421,2.228,422,1.313,423,1.191,424,1.313,425,1.313,426,1.313,427,1.162,428,1.313,429,1.191,430,1.313,431,1.191,432,1.313,433,1.191,434,1.313,435,1.162,436,1.313,437,1.191,438,1.313,439,2.019,440,1.313,441,1.191,442,1.313,443,1.191,444,1.313,445,1.162,446,1.313,447,1.191,448,1.313,449,1.191,450,1.313,451,1.191,452,1.313,453,1.191,454,1.313,455,1.191,456,1.313,457,1.162,458,1.313,459,1.134,460,1.313,461,1.162,462,1.313,463,1.191,464,1.313,465,1.191,466,1.281,467,1.313,468,1.191,469,1.313,470,1.313,471,1.162,472,1.313,473,1.162,474,1.313,475,1.191,476,1.313,477,1.162,478,1.313,479,1.191,480,1.25,481,1.313,482,1.313,519,3.732,551,2.166,752,2.375,818,3.47,856,3.484,964,3.805,965,5.939,966,6.791,967,5.939,968,6.791,969,5.069,970,5.069,971,6.791,972,6.791,973,6.791,974,6.791,975,6.791,976,6.791,977,7.317,978,7.317,979,5.238,980,5.939,981,5.885,982,7.317,983,3.47,984,4.871,985,4.474,986,6.791,987,7.317,988,6.535,989,5.939,990,4.314,991,4.314,992,4.432,993,4.314,994,5.069,995,4.314,996,5.939,997,4.314,998,4.314,999,4.314,1000,5.939,1001,4.314,1002,4.314,1003,4.314,1004,4.314,1005,4.314,1006,4.314,1007,5.463,1008,4.314,1009,5.939,1010,4.314,1011,4.314,1012,4.314,1013,4.432,1014,3.219,1015,3.02,1016,3.219,1017,4.314,1018,4.314,1019,3.47,1020,4.314,1021,3.219,1022,3.219,1023,3.219,1024,3.928,1025,3.219,1026,3.219,1027,3.219,1028,4.432,1029,3.219,1030,3.219,1031,3.219,1032,4.754,1033,4.314,1034,4.314,1035,4.314,1036,4.314,1037,4.314,1038,4.314,1039,4.314,1040,4.314,1041,4.314,1042,6.791,1043,4.314,1044,6.791,1045,4.314,1046,4.314,1047,5.939,1048,4.314,1049,5.939,1050,4.314,1051,4.314,1052,4.314,1053,3.805,1054,4.314,1055,4.314,1056,4.314,1057,4.314,1058,4.314,1059,4.314,1060,4.314,1061,4.314,1062,4.314,1063,4.314,1064,3.407,1065,3.407,1066,5.238,1067,5.238,1068,5.939,1069,5.238,1070,5.885,1071,5.939,1072,5.939,1073,7.317,1074,5.939,1075,5.939,1076,5.939,1077,5.939,1078,5.939,1079,5.939,1080,4.777,1081,4.432]],["title/components/EditmatchResultComponent.html",[19,0.431,441,1.212]],["body/components/EditmatchResultComponent.html",[3,0.131,4,0.131,5,0.119,7,0.368,8,0.736,11,1.814,12,0.653,13,0.01,15,0.207,16,4.383,17,3.195,18,1.892,19,0.741,20,2.033,21,2.935,22,0.119,31,4.351,32,2.306,33,2.306,41,1.997,44,0.131,49,2.505,50,2.387,52,1.841,54,0.131,55,1.401,56,1.713,64,1.349,65,2.03,67,2.196,68,3.997,71,4.097,72,2.053,77,2.144,113,3.525,114,2.306,115,1.892,120,0.005,121,0.007,122,0.005,136,0.991,154,2.134,155,2.134,170,0.718,227,0.682,231,1.078,237,1.995,241,0.74,251,0.74,331,1.471,332,2.03,333,1.663,334,1.622,335,1.622,339,1.622,340,1.583,341,1.981,347,1.673,351,4.532,352,4.934,356,1.336,357,1.273,359,1.673,361,2.03,377,1.798,395,3.349,396,2.935,398,3.349,399,4.295,403,3.525,415,3.156,417,1.214,418,2.081,419,2.081,420,1.622,421,2.423,422,1.622,423,1.471,424,1.622,425,1.622,426,1.622,427,1.436,428,1.622,429,1.471,430,1.622,431,1.471,432,1.622,433,1.471,434,1.622,435,1.436,436,1.622,437,1.471,438,1.622,439,1.471,440,1.622,441,2.197,442,1.622,443,1.471,444,1.622,445,1.436,446,1.622,447,1.471,448,1.622,449,1.471,450,1.622,451,1.471,452,1.622,453,1.471,454,1.622,455,1.471,456,1.622,457,1.436,458,1.622,459,1.401,460,1.622,461,1.436,462,1.622,463,1.471,464,1.622,465,1.471,466,1.583,467,1.622,468,1.471,469,1.622,470,1.622,471,1.436,472,1.622,473,1.436,474,1.622,475,1.471,476,1.622,477,1.436,478,1.622,479,1.471,480,1.544,481,1.622,482,1.622,519,3.349,666,4.701,981,6.403,983,4.287,985,4.716,1016,3.977,1064,3.922,1065,3.922,1080,5.498,1081,5.101,1082,4.701,1083,6.835,1084,7.546,1085,6.835,1086,6.835,1087,5.329,1088,5.329,1089,5.329,1090,5.329,1091,5.329,1092,5.329,1093,4.701,1094,6.835,1095,5.329,1096,6.835,1097,5.329,1098,5.329,1099,5.329,1100,5.329,1101,5.329,1102,6.835,1103,5.329,1104,5.329]],["title/components/EditmatchTimeComponent.html",[19,0.431,443,1.212]],["body/components/EditmatchTimeComponent.html",[3,0.128,4,0.128,5,0.116,7,0.36,8,0.726,12,0.633,13,0.01,15,0.209,16,4.346,17,3.123,18,1.85,19,0.733,20,2.011,21,2.869,22,0.116,25,6.358,26,3.123,27,3.123,28,2.76,29,3.694,30,2.567,31,4.197,32,2.255,33,2.255,41,1.952,44,0.128,49,2.502,50,2.384,52,1.815,54,0.128,55,1.37,56,1.689,62,1.61,64,1.329,65,2.217,67,2.098,68,3.954,71,4.038,73,3.888,74,3.888,75,3.446,76,3.888,77,2.126,113,3.446,114,2.255,115,1.85,118,3.123,120,0.005,121,0.007,122,0.005,136,0.973,170,0.751,191,1.216,227,0.667,231,1.071,237,1.978,241,0.723,251,0.723,331,1.438,332,2.001,333,1.626,334,1.586,335,1.586,339,1.586,340,1.547,341,1.952,347,1.649,356,1.689,357,1.61,359,1.827,361,2.217,377,1.37,401,2.659,415,3.297,417,1.187,418,2.051,419,2.051,420,1.586,421,2.403,422,1.586,423,1.438,424,1.586,425,1.586,426,1.586,427,1.404,428,1.586,429,1.438,430,1.586,431,1.438,432,1.586,433,1.438,434,1.586,435,1.404,436,1.586,437,1.438,438,1.586,439,1.438,440,1.586,441,1.438,442,1.586,443,2.178,444,1.586,445,1.404,446,1.586,447,1.438,448,1.586,449,1.438,450,1.586,451,1.438,452,1.586,453,1.438,454,1.586,455,1.438,456,1.586,457,1.404,458,1.586,459,1.37,460,1.586,461,1.404,462,1.586,463,1.438,464,1.586,465,1.438,466,1.547,467,1.586,468,1.438,469,1.586,470,1.586,471,1.404,472,1.586,473,1.404,474,1.586,475,1.438,476,1.586,477,1.404,478,1.586,479,1.438,480,1.51,481,1.586,482,1.586,519,3.274,532,5.028,981,6.348,983,4.191,985,4.691,1016,3.888,1064,3.865,1065,3.865,1080,5.419,1081,5.028,1105,4.596,1106,6.737,1107,7.466,1108,6.737,1109,7.209,1110,6.737,1111,6.737,1112,6.737,1113,5.21,1114,5.21,1115,5.21,1116,5.21,1117,5.21,1118,6.737,1119,5.21,1120,6.737,1121,4.715,1122,5.028,1123,6.737,1124,5.028]],["title/injectables/EventGQL.html",[123,0.316,306,1.273]],["body/injectables/EventGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.055,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.675,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.739,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.628,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,1.154,307,2.315,308,1.213,309,1.213,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,1125,2.518]],["title/components/EventsComponent.html",[19,0.431,445,1.183]],["body/components/EventsComponent.html",[3,0.142,4,0.142,5,0.129,7,0.401,8,0.776,12,0.608,13,0.01,15,0.207,19,0.771,20,2.113,22,0.129,29,3.759,34,3.198,35,2.233,41,2.172,42,3.119,43,2.508,44,0.142,49,2.516,50,2.398,52,1.942,54,0.142,55,1.524,56,1.807,64,1.422,65,1.721,67,1.966,72,2.233,77,2.211,120,0.006,121,0.007,122,0.006,136,0.938,170,0.746,191,1.352,196,2.273,227,0.742,231,0.742,241,0.804,251,0.804,310,2.265,331,1.6,332,2.141,333,1.809,334,1.765,335,1.765,339,1.765,340,1.721,341,2.089,347,1.764,356,1.453,357,1.385,359,1.419,361,1.721,377,1.524,417,1.321,418,2.194,419,2.194,420,1.765,421,2.499,422,1.765,423,1.6,424,1.765,425,1.765,426,1.765,427,1.561,428,1.765,429,1.6,430,1.765,431,1.6,432,1.765,433,1.6,434,1.765,435,1.561,436,1.765,437,1.6,438,1.765,439,1.6,440,1.765,441,1.6,442,1.765,443,1.6,444,1.765,445,2.211,446,1.765,447,1.6,448,1.765,449,1.6,450,1.765,451,1.6,452,1.765,453,1.6,454,1.765,455,1.6,456,1.765,457,1.561,458,1.765,459,1.524,460,1.765,461,1.561,462,1.765,463,1.6,464,1.765,465,1.6,466,1.721,467,1.765,468,1.6,469,1.765,470,1.765,471,1.561,472,1.765,473,1.561,474,1.765,475,1.6,476,1.765,477,1.561,478,1.765,479,1.6,480,1.68,481,1.765,482,1.765,591,5.798,1122,4.326,1124,4.326,1126,5.113,1127,7.844,1128,7.208,1129,5.796,1130,7.208,1131,7.208,1132,5.796,1133,5.796,1134,5.113,1135,5.796,1136,5.796,1137,5.796,1138,3.834,1139,5.796,1140,7.208,1141,7.208]],["title/modules/EventsModule.html",[553,1.212,565,3.074]],["body/modules/EventsModule.html",[3,0.164,4,0.164,5,0.149,13,0.01,15,0.215,22,0.149,44,0.164,54,0.164,120,0.007,121,0.008,122,0.007,417,1.518,445,2.478,553,1.838,555,2.303,556,3.171,557,3.967,558,3.281,559,3.281,560,3.967,565,6.455,566,4.537,567,4.002,568,3.4,569,3.4,572,3.02,573,2.938,575,3.822,591,5.357,698,5.88,699,5.357,1142,5.875,1143,5.875,1144,5.875,1145,5.875,1146,6.223,1147,6.661,1148,6.661,1149,5.875,1150,5.875]],["title/modules/EventsRoutingModule.html",[553,1.212,1146,3.074]],["body/modules/EventsRoutingModule.html",[3,0.172,4,0.172,5,0.156,13,0.009,15,0.209,19,0.689,22,0.156,44,0.172,54,0.172,120,0.007,121,0.008,122,0.007,255,1.136,445,2.176,550,3.129,555,2.424,572,2.7,573,3.027,593,4.023,594,4.343,595,4.023,597,4.023,598,4.203,1146,5.654,1149,6.184,1151,7.011]],["title/modules/GraphQLModule.html",[553,1.212,715,3.074]],["body/modules/GraphQLModule.html",[3,0.144,4,0.144,5,0.13,12,0.453,13,0.01,15,0.223,22,0.13,44,0.144,54,0.144,59,3.085,107,1.365,120,0.006,121,0.007,122,0.006,139,1.431,249,2.413,250,2,255,1.443,329,2.05,354,3.043,376,2.985,417,1.333,551,3.145,553,1.614,555,2.022,556,2.785,557,2.785,558,2.881,559,3.88,560,3.451,567,3.7,568,2.985,569,2.985,573,2.716,611,5.782,624,4.365,626,4.365,627,5.159,706,4.704,715,6.036,732,3.868,748,5.159,750,5.159,752,4.337,793,6.036,795,5.159,827,3.675,832,3.868,844,5.409,849,6.183,885,5.409,1152,5.159,1153,5.159,1154,4.365,1155,7.248,1156,7.248,1157,7.248,1158,6.393,1159,7.711,1160,5.159,1161,7.248,1162,7.262,1163,5.159,1164,5.849,1165,5.849,1166,5.849,1167,5.849,1168,5.849,1169,5.83,1170,7.876,1171,5.849,1172,5.849,1173,6.393,1174,4.704,1175,4.704,1176,4.704,1177,5.159,1178,5.849,1179,5.849,1180,5.849,1181,5.849,1182,5.849,1183,5.849,1184,5.849,1185,5.849,1186,5.849,1187,5.849,1188,5.849,1189,5.849,1190,5.849,1191,7.248,1192,5.849,1193,5.849,1194,7.876,1195,5.849,1196,5.849,1197,4.365,1198,5.849,1199,5.849,1200,4.704]],["title/injectables/GraphqlSubscriptionService.html",[123,0.316,611,2.905]],["body/injectables/GraphqlSubscriptionService.html",[3,0.154,4,0.154,5,0.14,7,0.433,8,0.814,12,0.586,13,0.01,15,0.207,22,0.14,44,0.154,54,0.154,64,1.492,65,2.604,67,1.895,89,2.058,92,2.712,112,3.596,115,2.883,120,0.006,121,0.008,122,0.006,123,0.544,125,1.609,129,1.641,136,0.986,170,0.719,266,1.394,267,1.361,310,2.327,317,2.271,347,1.851,356,1.895,357,1.807,359,1.851,361,2.246,396,3.452,401,3.199,551,2.286,611,5.371,626,6.543,804,4.751,847,3.199,850,4.678,862,4.678,863,4.678,1169,5.042,1173,7.891,1174,5.042,1175,5.042,1201,5.529,1202,8.12,1203,8.431,1204,6.268,1205,5.902,1206,6.531,1207,8.12,1208,6.268,1209,7.561,1210,6.268,1211,6.268,1212,6.268,1213,6.268,1214,6.268,1215,6.268,1216,6.268,1217,7.561,1218,4.387,1219,6.268,1220,6.268,1221,6.268,1222,6.268,1223,6.268,1224,6.268,1225,6.268,1226,6.268,1227,6.268,1228,6.268,1229,6.268]],["title/injectables/I18Service.html",[29,1.844,123,0.316]],["body/injectables/I18Service.html",[3,0.159,4,0.159,5,0.145,7,0.448,8,0.831,12,0.638,13,0.01,14,1.327,15,0.209,22,0.145,29,3.239,31,4.353,32,2.804,33,2.804,44,0.159,54,0.159,64,1.279,67,2.137,75,5.102,120,0.007,121,0.008,122,0.007,123,0.555,125,1.664,128,1.374,129,1.31,136,0.995,170,0.734,266,1.442,267,1.408,347,1.888,356,1.934,357,1.843,359,1.888,361,2.291,551,2.363,789,4.837,804,4.847,1230,5.716,1231,8.237,1232,7.714,1233,8.526,1234,8.237,1235,6.481,1236,6.481,1237,7.714,1238,6.481,1239,6.481,1240,8.709,1241,8.526,1242,6.481,1243,6.481,1244,6.481,1245,6.481,1246,6.481,1247,6.481,1248,6.481,1249,6.481,1250,8.709,1251,6.481,1252,6.481,1253,6.481,1254,6.481,1255,6.481]],["title/interfaces/IPossibleKickoffs.html",[0,0.73,1256,3.074]],["body/interfaces/IPossibleKickoffs.html",[0,1.137,2,2.722,3,0.131,4,0.131,5,0.119,7,0.592,8,0.737,11,1.996,12,0.638,13,0.01,14,1.133,15,0.215,19,0.672,20,1.842,22,0.119,29,3.169,30,2.627,34,2.788,35,2.054,36,1.72,41,1.998,42,2.308,43,2.308,44,0.131,47,1.274,49,1.437,50,1.369,52,1.437,54,0.131,56,1.337,59,2.562,60,2.937,62,1.903,64,1.052,65,1.584,67,1.714,77,1.437,89,1.751,91,2.457,92,2.959,114,2.308,115,1.893,118,3.197,120,0.005,121,0.007,122,0.005,129,1.382,191,1.244,197,1.369,202,2.145,209,1.402,231,1.053,235,2.199,236,1.369,255,1.291,341,1.545,366,4.743,375,2.722,401,2.722,459,1.402,480,1.982,551,2.903,583,3.733,670,3.766,752,2.937,856,2.539,925,4.523,969,3.98,970,3.98,984,4.525,985,4.157,992,3.98,994,5.103,1013,5.103,1014,3.98,1015,3.733,1021,3.98,1022,3.98,1023,3.98,1024,4.523,1025,3.98,1026,3.98,1027,3.98,1028,5.942,1029,3.98,1030,3.98,1031,5.633,1032,3.733,1064,3.06,1065,3.06,1121,5.284,1256,5.763,1257,3.98,1258,3.98,1259,6.622,1260,6.622,1261,6.622,1262,5.573,1263,5.5,1264,4.289,1265,3.98,1266,4.289,1267,5.5,1268,4.289,1269,4.289,1270,4.289,1271,3.98,1272,3.98,1273,6.622,1274,4.289,1275,4.289,1276,4.289,1277,4.289,1278,4.289,1279,4.289,1280,4.289,1281,4.289,1282,4.289,1283,4.289,1284,4.289,1285,4.289,1286,4.289,1287,5.5,1288,4.289,1289,4.289,1290,4.289,1291,4.289,1292,4.289,1293,4.289,1294,4.289,1295,4.289,1296,5.5,1297,5.5,1298,5.5,1299,4.289,1300,4.289,1301,4.289,1302,4.289,1303,5.5,1304,4.289,1305,4.289,1306,4.289,1307,4.289,1308,4.289,1309,4.289,1310,4.289,1311,4.289,1312,4.289,1313,4.289,1314,3.98,1315,4.289,1316,4.289,1317,5.5,1318,4.289,1319,4.289,1320,4.289,1321,4.289,1322,4.289,1323,4.289,1324,4.289,1325,3.733,1326,4.289,1327,4.289,1328,4.289,1329,4.289,1330,4.289,1331,4.289,1332,4.289,1333,4.289,1334,3.766,1335,4.289,1336,4.289,1337,5.5,1338,5.5]],["title/interfaces/ISnackBarData.html",[0,0.73,1339,3.278]],["body/interfaces/ISnackBarData.html",[0,1.15,2,3.531,3,0.17,4,0.17,5,0.154,7,0.478,8,0.863,12,0.536,13,0.009,14,1.271,15,0.197,18,2.456,19,0.787,20,2.159,21,3.81,22,0.154,44,0.197,49,1.864,50,1.776,52,1.864,54,0.17,56,1.734,64,1.365,67,1.734,72,2.665,77,1.864,120,0.007,121,0.008,122,0.007,341,2.005,351,3.81,377,1.819,396,4.795,1339,6.317,1340,5.565,1341,6.102,1342,6.102,1343,6.102,1344,6.102]],["title/interfaces/ITeamCanPlayAtDate.html",[0,0.73,1262,3.074]],["body/interfaces/ITeamCanPlayAtDate.html",[0,1.146,2,2.759,3,0.133,4,0.133,5,0.121,7,0.553,8,0.743,11,1.883,12,0.534,13,0.01,14,1.14,15,0.216,19,0.677,20,1.858,22,0.121,29,3.19,30,2.663,34,2.812,35,2.082,36,1.926,41,2.025,42,2.339,43,2.339,44,0.133,47,1.815,49,1.456,50,1.388,52,1.456,54,0.133,56,1.355,59,2.584,60,2.976,62,1.648,64,1.067,65,1.605,67,1.729,77,1.456,89,1.775,91,2.49,92,2.984,114,2.339,115,1.919,118,3.24,120,0.005,121,0.007,122,0.005,129,1.394,191,1.261,197,1.388,202,1.858,209,1.421,231,1.058,235,2.054,236,1.388,255,1.297,341,1.566,366,4.773,375,2.759,401,2.759,459,1.421,480,1.999,551,2.918,583,3.783,670,3.798,752,2.976,856,3.617,925,4.562,969,4.034,970,4.034,984,4.554,985,4.183,992,4.034,994,5.147,1013,5.147,1014,4.034,1015,3.783,1021,4.034,1022,4.034,1023,4.034,1024,4.562,1025,4.034,1026,4.034,1027,4.034,1028,5.972,1029,4.034,1030,4.034,1031,5.669,1032,3.783,1064,3.101,1065,3.101,1121,5.317,1256,5.601,1257,4.034,1258,4.034,1259,5.548,1260,5.548,1261,5.548,1262,5.317,1263,5.548,1264,4.347,1265,4.034,1266,4.347,1267,6.649,1268,4.347,1269,4.347,1270,4.347,1271,4.034,1272,4.034,1273,6.649,1274,4.347,1275,4.347,1276,4.347,1277,4.347,1278,4.347,1279,4.347,1280,4.347,1281,4.347,1282,4.347,1283,4.347,1284,4.347,1285,4.347,1286,4.347,1287,5.548,1288,4.347,1289,4.347,1290,4.347,1291,4.347,1292,4.347,1293,4.347,1294,4.347,1295,4.347,1296,5.548,1297,5.548,1298,5.548,1299,4.347,1300,4.347,1301,4.347,1302,4.347,1303,5.548,1304,4.347,1305,4.347,1306,4.347,1307,4.347,1308,4.347,1309,4.347,1310,4.347,1311,4.347,1312,4.347,1313,4.347,1314,4.034,1315,4.347,1316,4.347,1317,5.548,1318,4.347,1319,4.347,1320,4.347,1321,4.347,1322,4.347,1323,4.347,1324,4.347,1325,3.783,1326,4.347,1327,4.347,1328,4.347,1329,4.347,1330,4.347,1331,4.347,1332,4.347,1333,4.347,1334,3.798,1335,4.347,1336,4.347,1337,5.548,1338,5.548]],["title/interfaces/IntrospectionResultData.html",[0,0.73,326,1.155]],["body/interfaces/IntrospectionResultData.html",[0,0.824,2,1.29,3,0.062,4,0.062,5,0.056,7,0.175,8,0.43,9,1.517,11,1.556,12,0.718,13,0.01,14,1.381,15,0.122,22,0.056,36,1.851,37,0.681,38,1.077,39,0.649,40,0.649,44,0.23,46,0.698,47,1.632,48,0.698,54,0.212,57,1.652,62,1.184,87,0.649,94,1.592,96,1.592,100,1.592,102,0.715,104,0.715,107,2.051,110,2.065,111,1.896,120,0.005,121,0.004,122,0.003,123,0.623,124,0.715,126,0.698,127,2.504,128,0.536,130,2.507,131,2.675,132,0.77,133,2.249,134,0.77,135,2.028,138,2.626,139,0.619,140,1.592,141,1.217,142,0.733,143,1.187,144,1.187,145,1.187,146,0.681,147,1.103,148,0.751,149,0.751,150,0.733,151,2.564,152,1.217,153,2.102,154,1.844,155,1.844,156,2.467,157,1.187,158,1.187,159,1.889,160,1.187,161,1.672,162,0.77,163,2.042,164,1.592,165,0.77,166,0.77,167,1.13,168,0.77,169,1.187,170,0.813,171,1.187,172,1.187,173,1.509,174,1.672,175,1.187,176,1.753,177,0.77,178,1.672,179,2.137,180,2.137,181,1.889,182,1.187,183,1.672,184,1.187,185,1.217,186,1.217,187,1.672,188,1.481,189,1.889,190,1.672,191,1.7,192,1.187,193,0.77,194,1.672,195,1.936,196,1.158,197,0.649,198,2.002,199,0.733,200,1.103,201,1.436,202,1.077,203,1.777,204,1.217,205,1.472,206,1.472,207,0.77,208,1.217,209,1.613,210,1.217,211,1.217,212,1.217,213,1.217,214,1.217,215,1.714,216,0.751,217,1.217,218,1.672,219,0.751,220,1.13,221,1.472,222,1.187,223,1.158,224,1.472,225,1.916,226,0.751,227,0.906,228,1.472,229,1.187,230,1.777,231,0.785,232,2.225,233,1.187,234,1.187,235,1.871,236,1.674,237,0.634,238,1.187,239,1.187,240,1.187,241,1.074,242,1.158,243,1.187,244,0.733,245,1.158,246,1.401,247,1.187,248,0.733,249,1.692,250,1.368,251,0.555,252,1.13,253,0.715,254,0.77,255,1.209,256,1.436,257,1.844,258,1.436,259,1.13,260,1.436,261,1.158,262,1.158,263,1.436,264,1.436,265,0.733,266,1.922,267,1.877,268,0.715,269,2.444,270,2.473,271,1.509,272,0.715,273,0.77,274,0.77,275,0.715,276,0.77,277,0.77,278,0.665,279,0.77,280,0.77,281,0.681,282,0.77,283,0.77,284,0.715,285,0.77,286,0.77,287,0.715,288,0.77,289,0.77,290,0.715,291,0.77,292,0.715,293,0.77,294,0.77,295,0.715,296,0.77,297,0.77,298,0.715,299,0.715,300,0.77,301,0.77,302,0.715,303,0.77,304,0.77,305,0.715,306,0.733,307,2.317,308,0.77,309,0.77,310,0.698,311,0.77,312,0.77,313,0.681,314,0.77,315,1.217,316,0.715,317,0.681,318,0.77,319,0.715,320,0.715,321,0.77,322,0.77,323,0.665,324,0.715,325,0.733,326,1.303,327,1.734,328,1.13,329,0.715,330,0.733,1345,3.214]],["title/interfaces/IntrospectionResultData-1.html",[0,0.608,326,0.962,1334,2.015]],["body/interfaces/IntrospectionResultData-1.html",[0,1.056,2,3.243,3,0.156,4,0.156,5,0.142,7,0.439,8,0.821,12,0.703,13,0.01,14,1.272,15,0.201,22,0.142,28,4.038,44,0.222,54,0.156,87,1.631,110,1.518,111,1.617,120,0.008,121,0.008,122,0.006,123,0.548,127,1.841,128,1.347,130,2.156,138,2.395,139,1.555,150,1.841,151,1.841,156,2.104,170,0.725,248,1.841,249,2.391,250,2.254,251,1.058,252,1.797,253,1.797,255,1.03,265,1.841,266,1.413,267,1.38,269,1.797,325,1.841,326,2.148,327,2.449,328,2.156,329,1.797,330,1.841,1197,6.095,1205,4.447,1345,6.132,1346,4.447,1347,7.074,1348,6.724,1349,6.724,1350,5.604]],["title/injectables/LatestEventGQL.html",[123,0.316,310,1.212]],["body/injectables/LatestEventGQL.html",[0,0.82,3,0.062,4,0.062,5,0.056,7,0.174,8,0.428,9,1.512,11,1.552,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.848,37,0.677,38,1.071,39,0.645,40,0.645,44,0.23,46,0.693,47,1.628,48,0.693,54,0.212,57,1.647,62,1.461,87,0.645,94,1.587,96,1.587,100,1.587,102,0.71,104,0.71,107,2.054,110,2.063,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.71,125,0.645,126,0.693,127,2.518,128,0.843,129,0.508,130,2.51,131,2.674,132,0.765,133,2.246,134,0.765,135,2.023,136,0.287,138,2.625,139,0.615,140,1.587,141,1.211,142,0.728,143,1.181,144,1.181,145,1.181,146,0.677,147,1.097,148,0.746,149,0.746,150,0.728,151,2.562,152,1.211,153,2.098,154,1.839,155,1.839,156,2.466,157,1.181,158,1.181,159,1.884,160,1.181,161,1.666,162,0.765,163,2.039,164,1.587,165,0.765,166,0.765,167,1.124,168,0.765,169,1.181,170,0.812,171,1.181,172,1.181,173,1.502,174,1.666,175,1.181,176,1.749,177,0.765,178,1.666,179,2.133,180,2.133,181,1.884,182,1.181,183,1.666,184,1.181,185,1.211,186,1.211,187,1.666,188,1.476,189,1.884,190,1.666,191,1.738,192,1.181,193,0.765,194,1.816,195,2.16,196,1.152,197,0.645,198,1.998,199,0.728,200,1.097,201,1.43,202,1.071,203,1.772,204,1.211,205,1.466,206,1.466,207,0.765,208,1.211,209,1.608,210,1.211,211,1.211,212,1.211,213,1.211,214,1.211,215,1.708,216,0.746,217,1.211,218,1.666,219,0.746,220,1.124,221,1.466,222,1.181,223,1.152,224,1.466,225,1.912,226,0.746,227,0.904,228,1.466,229,1.181,230,1.772,231,0.782,232,2.222,233,1.181,234,1.181,235,1.867,236,1.669,237,0.63,238,1.181,239,1.181,240,1.181,241,1.073,242,1.152,243,1.181,244,0.728,245,1.152,246,1.395,247,1.181,248,0.728,249,1.687,250,1.362,251,0.552,252,1.124,253,0.71,254,0.765,255,1.207,256,1.43,257,1.839,258,1.43,259,1.124,260,1.43,261,1.152,262,1.152,263,1.43,264,1.626,265,0.728,266,1.921,267,1.876,268,0.71,269,2.442,270,2.47,271,1.502,272,0.71,273,0.765,274,0.765,275,0.71,276,0.765,277,0.765,278,0.661,279,0.765,280,0.765,281,0.677,282,0.765,283,0.765,284,0.71,285,0.765,286,0.765,287,0.71,288,0.765,289,0.765,290,0.71,291,0.765,292,0.71,293,0.765,294,0.765,295,0.71,296,0.765,297,0.765,298,0.71,299,0.71,300,0.765,301,0.765,302,0.71,303,0.765,304,0.765,305,0.71,306,0.728,307,2.313,308,0.765,309,0.765,310,1.097,311,1.211,312,1.211,313,0.677,314,0.765,315,1.211,316,0.71,317,0.677,318,0.765,319,0.71,320,0.71,321,0.765,322,0.765,323,0.661,324,0.71,325,0.728,326,1.046,327,1.124,328,1.124,329,0.71,330,0.728,1351,2.512]],["title/injectables/LocateMatchGQL.html",[123,0.316,275,1.242]],["body/injectables/LocateMatchGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.161,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,2.025,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,1.127,276,1.213,277,1.213,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,1352,2.518]],["title/components/LoginComponent.html",[19,0.431,447,1.212]],["body/components/LoginComponent.html",[3,0.127,4,0.127,5,0.116,7,0.359,8,0.724,12,0.648,13,0.01,14,1.119,15,0.209,16,4.495,18,1.842,19,0.732,20,2.007,22,0.116,31,4.193,32,2.245,33,2.245,44,0.127,49,2.501,50,2.384,52,1.81,54,0.127,55,1.364,56,1.684,64,1.326,65,2.528,67,1.867,68,4.323,72,2.588,77,2.123,89,2.746,91,2.39,92,2.907,114,2.245,115,2.797,120,0.005,121,0.007,122,0.005,136,0.996,163,1.725,170,0.75,188,1.364,227,0.664,231,0.664,241,0.72,251,0.72,278,1.364,331,1.432,332,1.995,333,1.619,334,1.579,335,1.579,339,1.579,340,1.541,341,1.947,347,1.644,351,4.103,352,4.724,354,3.573,356,1.684,357,1.605,359,1.928,361,1.995,374,3.431,375,2.648,376,2.648,377,1.767,378,3.631,382,4.443,395,4.221,396,3.699,398,4.221,399,4.951,400,3.431,401,2.648,403,3.431,405,4.576,406,4.576,415,2.517,417,1.182,418,2.045,419,2.045,420,1.579,421,2.399,422,1.579,423,1.432,424,1.579,425,1.579,426,1.579,427,1.398,428,1.579,429,1.432,430,1.579,431,1.432,432,1.579,433,1.432,434,1.579,435,1.398,436,1.579,437,1.432,438,1.579,439,1.432,440,1.579,441,1.432,442,1.579,443,1.432,444,1.579,445,1.398,446,1.579,447,2.175,448,1.579,449,1.432,450,1.579,451,1.432,452,1.579,453,1.432,454,1.579,455,1.432,456,1.579,457,1.398,458,1.579,459,1.364,460,1.579,461,1.398,462,1.579,463,1.432,464,1.579,465,1.432,466,1.541,467,1.579,468,1.432,469,1.579,470,1.579,471,1.398,472,1.579,473,1.398,474,1.579,475,1.432,476,1.579,477,1.398,478,1.579,479,1.432,480,1.503,481,1.579,482,1.579,653,5.925,752,4.103,847,2.648,848,3.631,856,3.752,878,4.443,904,4.173,905,5.925,906,5.925,988,6.726,1007,5.992,1019,4.173,1353,4.576,1354,8.362,1355,7.45,1356,6.718,1357,7.45,1358,6.571,1359,7.88,1360,6.718,1361,5.188,1362,6.718,1363,5.188,1364,5.188,1365,5.188,1366,6.718,1367,5.188,1368,5.188,1369,5.188,1370,5.188,1371,5.188,1372,4.576,1373,7.45,1374,5.188,1375,5.188,1376,5.188,1377,5.188,1378,5.188,1379,5.188,1380,6.718,1381,5.925,1382,6.718]],["title/interfaces/LoginContext.html",[0,0.73,825,3.074]],["body/interfaces/LoginContext.html",[0,1.178,2,2.881,3,0.139,4,0.139,5,0.126,7,0.39,8,0.764,12,0.549,13,0.01,14,1.353,15,0.206,22,0.126,44,0.19,54,0.139,59,3.203,64,1.114,65,2.414,67,2.143,89,2.328,115,2.752,120,0.008,121,0.007,122,0.006,123,0.51,139,1.99,146,1.521,163,1.82,164,1.596,167,1.596,188,2.138,227,0.907,255,0.915,266,1.256,267,1.226,278,1.864,281,1.91,323,1.864,354,2.977,411,4.213,412,4.213,550,2.519,551,3.228,732,3.733,768,4.455,793,4.962,796,4.213,799,4.54,801,4.54,805,4.54,806,4.54,807,4.54,808,4.54,810,6.234,811,4.213,812,4.54,813,4.54,815,4.54,816,5.784,819,5.513,820,4.54,822,3.951,824,4.54,825,5.425,827,4.455,829,4.54,831,4.54,832,5.126,834,4.54,844,5.291,845,5.291,846,4.213,847,2.881,848,5.69,849,3.951,850,4.213,851,4.54,852,4.54,853,5.702,854,4.54,855,4.54,856,2.688,857,6.875,858,4.54,859,5.653,860,5.539,861,4.54,862,4.213,863,4.213,864,4.54,865,5.702,866,4.54,867,4.54,868,4.87,869,5.702,870,4.54,871,5.702,872,5.126,873,4.54,874,4.54,875,4.54,876,4.54,877,5.702,878,4.689,879,4.54,880,4.54,881,4.213,882,4.54,883,4.54,884,4.54,885,4.213,886,4.54,887,4.54]],["title/components/ManageseasonComponent.html",[19,0.431,449,1.212]],["body/components/ManageseasonComponent.html",[3,0.091,4,0.091,5,0.083,7,0.433,8,0.576,11,1.901,12,0.682,13,0.01,14,1.237,15,0.202,18,1.319,19,0.615,20,1.687,22,0.083,23,4.205,29,3.46,31,3.837,32,1.608,33,1.608,34,2.959,35,1.431,42,2.314,43,1.608,44,0.091,49,2.447,50,2.332,52,1.44,54,0.091,55,0.977,56,1.34,59,2.347,60,2.046,62,1.969,64,1.055,65,2.313,67,2.035,72,2.796,77,1.687,83,2.601,89,2.739,91,2.886,92,2.71,106,3.93,107,1.598,110,1.637,111,1.539,112,3.594,114,2.71,115,2.432,116,3.991,120,0.004,121,0.005,122,0.004,124,1.937,128,1.134,129,1.081,133,1.512,135,1.86,136,1.016,140,1.771,170,0.794,171,1.588,172,1.588,174,1.104,175,2.034,191,1.248,197,0.954,198,1.647,220,1.051,227,0.476,231,0.684,236,1.759,237,1.34,241,0.516,251,0.516,255,0.867,287,1.937,290,1.937,292,2.202,313,2.098,331,1.026,332,1.588,333,1.16,334,1.131,335,1.131,339,1.131,340,1.104,341,1.549,347,1.309,351,3.449,352,4.106,356,2.035,357,1.94,359,2.042,361,2.313,363,5.038,377,1.406,378,2.601,395,4.304,396,3.772,398,4.304,399,5.008,400,3.537,403,3.537,413,3.93,415,3.252,417,0.847,418,1.628,419,1.628,420,1.131,421,2.085,422,1.131,423,1.026,424,1.131,425,1.131,426,1.131,427,1.001,428,1.131,429,1.026,430,1.131,431,1.026,432,1.131,433,1.026,434,1.131,435,1.001,436,1.131,437,1.026,438,1.131,439,1.026,440,1.131,441,1.026,442,1.131,443,1.026,444,1.131,445,1.001,446,1.131,447,1.026,448,1.131,449,1.89,450,1.131,451,1.026,452,1.131,453,1.026,454,1.131,455,1.026,456,1.131,457,1.001,458,1.131,459,0.977,460,1.131,461,1.001,462,1.131,463,1.026,464,1.131,465,1.026,466,1.104,467,1.131,468,1.026,469,1.131,470,1.131,471,1.001,472,1.131,473,1.001,474,1.131,475,1.026,476,1.131,477,1.001,478,1.131,479,1.026,480,1.077,481,1.131,482,1.131,532,5.112,551,2.498,670,2.944,822,4.795,847,1.897,868,2.335,907,4.301,1064,3.068,1065,3.068,1122,3.991,1124,3.991,1134,3.278,1138,3.537,1271,5.417,1272,4.674,1314,3.991,1334,4.389,1383,3.278,1384,6.263,1385,5.347,1386,6.263,1387,6.263,1388,6.263,1389,6.263,1390,6.263,1391,5.524,1392,4.866,1393,5.347,1394,5.347,1395,5.347,1396,5.347,1397,6.85,1398,5.347,1399,5.347,1400,2.774,1401,6.263,1402,6.263,1403,6.263,1404,5.347,1405,3.716,1406,3.716,1407,3.278,1408,5.347,1409,3.716,1410,5.347,1411,6.402,1412,6.263,1413,3.716,1414,3.716,1415,3.716,1416,3.716,1417,3.716,1418,5.347,1419,3.716,1420,5.347,1421,6.85,1422,3.716,1423,3.716,1424,5.347,1425,3.716,1426,5.347,1427,3.716,1428,3.716,1429,5.347,1430,3.716,1431,5.038,1432,3.716,1433,3.716,1434,3.716,1435,3.716,1436,3.716,1437,3.716,1438,3.716,1439,3.716,1440,2.774,1441,3.278,1442,3.278,1443,3.278,1444,3.716,1445,6.263,1446,3.716,1447,5.347,1448,3.716,1449,3.716,1450,3.716,1451,4.716,1452,3.278,1453,2.774,1454,2.774,1455,3.278,1456,6.85,1457,5.347,1458,3.716,1459,7.97,1460,6.85,1461,3.716,1462,3.716,1463,3.716,1464,3.716,1465,3.716,1466,3.716,1467,5.038,1468,5.038,1469,3.278,1470,3.716,1471,3.716,1472,3.716,1473,3.716,1474,3.716,1475,3.716,1476,3.716,1477,3.716,1478,3.716,1479,3.716,1480,3.716,1481,3.716,1482,3.716,1483,3.716,1484,3.716,1485,3.716,1486,6.85,1487,3.716,1488,5.347,1489,3.716,1490,4.716,1491,5.347,1492,5.347,1493,5.347,1494,4.716,1495,5.347,1496,5.347,1497,5.347,1498,5.347,1499,4.301,1500,5.347]],["title/components/ManagetournamentComponent.html",[19,0.431,451,1.212]],["body/components/ManagetournamentComponent.html",[3,0.117,4,0.117,5,0.107,7,0.495,8,0.686,9,1.716,11,1.901,12,0.672,13,0.01,14,1.194,15,0.205,18,1.698,19,0.703,20,1.929,22,0.107,34,3.242,35,1.842,39,1.96,40,1.96,42,3.098,43,2.07,44,0.117,49,2.489,50,2.373,52,1.716,54,0.117,55,1.675,56,1.596,59,1.792,60,2.634,64,1.257,65,2.428,66,5.344,67,1.795,70,5.012,72,1.842,77,2.057,89,2.685,92,2.07,106,2.744,107,1.116,108,3.57,111,1.351,112,2.744,120,0.007,121,0.006,122,0.005,128,1.014,129,0.967,136,1.021,170,0.794,184,2.126,223,1.386,227,0.612,231,0.916,236,1.228,241,0.664,246,2.025,251,0.664,255,0.775,302,2.159,331,1.32,332,1.891,333,1.493,334,1.456,335,1.456,339,1.456,340,1.421,341,1.846,347,1.559,356,1.596,357,1.522,359,2.001,361,2.267,377,1.258,380,3.57,415,3.176,417,1.09,418,1.939,419,1.939,420,1.456,421,2.324,422,1.456,423,1.32,424,1.456,425,1.456,426,1.456,427,1.288,428,1.456,429,1.32,430,1.456,431,1.32,432,1.456,433,1.32,434,1.456,435,1.288,436,1.456,437,1.32,438,1.456,439,1.32,440,1.456,441,1.32,442,1.456,443,1.32,444,1.456,445,1.288,446,1.456,447,1.32,448,1.456,449,1.32,450,1.456,451,2.107,452,1.456,453,1.32,454,1.456,455,1.32,456,1.456,457,1.288,458,1.456,459,1.258,460,1.456,461,1.288,462,1.456,463,1.32,464,1.456,465,1.32,466,1.421,467,1.456,468,1.32,469,1.456,470,1.456,471,1.288,472,1.456,473,1.288,474,1.456,475,1.32,476,1.456,477,1.288,478,1.456,479,1.32,480,1.386,481,1.456,482,1.456,486,5.698,489,5.933,551,1.744,670,3.507,847,2.441,1064,3.654,1065,3.654,1325,3.348,1334,3.943,1431,5.759,1469,4.219,1501,4.219,1502,6.369,1503,7.16,1504,6.369,1505,7.16,1506,7.16,1507,7.16,1508,7.16,1509,7.16,1510,6.315,1511,6.369,1512,7.634,1513,7.634,1514,7.634,1515,7.634,1516,4.219,1517,6.369,1518,6.369,1519,4.783,1520,4.783,1521,4.783,1522,4.783,1523,4.783,1524,4.783,1525,4.783,1526,4.783,1527,4.783,1528,4.783,1529,4.783,1530,6.369,1531,4.783,1532,4.783,1533,4.783,1534,6.369,1535,4.783,1536,4.219,1537,4.783,1538,4.219,1539,4.783,1540,4.783,1541,4.219,1542,4.783,1543,3.847,1544,6.369,1545,7.16,1546,4.783,1547,6.369,1548,6.369,1549,4.783,1550,4.783,1551,8.176,1552,4.783,1553,4.783,1554,4.783,1555,5.617,1556,6.369,1557,6.369,1558,6.369,1559,6.369]],["title/components/ManageusersComponent.html",[19,0.431,453,1.212]],["body/components/ManageusersComponent.html",[3,0.151,4,0.151,5,0.137,7,0.424,13,0.009,15,0.151,19,0.79,20,2.167,22,0.137,44,0.151,49,2.523,50,2.405,52,2.011,54,0.151,55,1.613,56,1.871,64,1.588,77,2.255,89,2.642,120,0.006,121,0.008,122,0.006,136,0.853,170,0.71,227,0.785,231,0.785,241,0.851,251,0.851,331,1.693,332,2.217,333,1.915,334,1.868,335,1.868,339,1.868,340,1.822,341,2.163,347,1.827,359,1.501,377,1.613,417,1.398,418,2.272,419,2.272,420,1.868,421,2.548,422,1.868,423,1.693,424,1.868,425,1.868,426,1.868,427,1.653,428,1.868,429,1.693,430,1.868,431,1.693,432,1.868,433,1.693,434,1.868,435,1.653,436,1.868,437,1.693,438,1.868,439,1.693,440,1.868,441,1.693,442,1.868,443,1.693,444,1.868,445,1.653,446,1.868,447,1.693,448,1.868,449,1.693,450,1.868,451,1.693,452,1.868,453,2.31,454,1.868,455,1.693,456,1.868,457,1.653,458,1.868,459,1.613,460,1.868,461,1.653,462,1.868,463,1.693,464,1.868,465,1.693,466,1.822,467,1.868,468,1.693,469,1.868,470,1.868,471,1.653,472,1.868,473,1.653,474,1.868,475,1.693,476,1.868,477,1.653,478,1.868,479,1.693,480,1.778,481,1.868,482,1.868,1560,5.411,1561,7.464,1562,8.045,1563,7.464,1564,6.135,1565,6.135]],["title/components/MatchComponent.html",[19,0.431,455,1.212]],["body/components/MatchComponent.html",[3,0.11,4,0.11,5,0.1,7,0.309,8,0.655,11,1.017,12,0.679,13,0.01,15,0.214,18,1.584,19,0.679,20,1.862,22,0.1,29,3.593,30,2.199,31,4.215,32,1.931,33,1.931,41,1.672,44,0.11,49,2.479,50,2.362,52,1.637,54,0.11,55,1.174,56,1.524,64,1.2,67,2.247,68,3.661,72,3.158,77,1.999,89,1.996,120,0.008,121,0.006,122,0.005,136,1.017,170,0.78,225,1.818,227,0.571,231,1.121,237,2.165,241,0.619,251,0.619,255,1.12,331,1.232,332,1.805,333,1.393,334,1.359,335,1.359,339,1.359,340,1.325,341,1.761,347,1.488,351,4.276,352,4.655,353,4.276,354,3.26,356,1.946,357,1.856,359,1.961,361,2.306,376,2.278,377,1.598,395,4.344,396,3.807,398,5.152,399,5.035,400,4.572,415,3.206,417,1.017,418,1.851,419,1.851,420,1.359,421,2.26,422,1.359,423,1.232,424,1.359,425,1.359,426,1.359,427,1.202,428,1.359,429,1.232,430,1.359,431,1.232,432,1.359,433,1.678,434,1.359,435,1.202,436,1.359,437,1.232,438,1.359,439,1.678,440,1.359,441,1.678,442,1.359,443,1.678,444,1.359,445,1.202,446,1.359,447,1.232,448,1.359,449,1.232,450,1.359,451,1.232,452,1.359,453,1.232,454,1.359,455,2.048,456,1.359,457,1.202,458,1.359,459,1.174,460,1.359,461,1.202,462,1.359,463,1.232,464,1.359,465,1.232,466,1.325,467,1.359,468,1.232,469,1.359,470,1.359,471,1.202,472,1.359,473,1.202,474,1.359,475,1.232,476,1.359,477,1.202,478,1.359,479,1.232,480,1.293,481,1.359,482,1.359,486,6.227,489,5.795,505,4.536,551,1.627,664,3.936,762,6.546,856,3.697,922,4.536,925,4.909,985,4.712,1016,3.331,1024,2.952,1064,3.488,1065,3.488,1066,5.361,1067,5.361,1069,5.361,1070,4.889,1093,3.936,1121,5.195,1325,4.255,1516,3.936,1566,3.936,1567,6.913,1568,6.078,1569,6.078,1570,7.422,1571,6.078,1572,6.078,1573,6.078,1574,6.913,1575,6.078,1576,4.463,1577,4.463,1578,6.078,1579,4.463,1580,4.463,1581,4.463,1582,6.078,1583,4.463,1584,6.078,1585,4.463,1586,6.078,1587,4.463,1588,4.463,1589,4.463,1590,4.463,1591,4.463,1592,4.463,1593,4.463,1594,4.463,1595,4.463,1596,4.463,1597,4.463,1598,4.463,1599,7.422,1600,6.913,1601,4.463,1602,4.463,1603,4.463,1604,4.463,1605,4.463,1606,4.463,1607,4.463,1608,4.463,1609,6.546,1610,5.361,1611,6.078,1612,6.078,1613,4.463,1614,3.936,1615,6.078,1616,6.078,1617,6.078,1618,6.078,1619,6.078,1620,4.463,1621,4.463,1622,4.463,1623,4.463,1624,3.936]],["title/injectables/MatchPlanGQL.html",[123,0.316,313,1.183]],["body/injectables/MatchPlanGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.055,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.675,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2.034,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.432,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,1.073,314,1.213,315,1.505,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,1625,2.518]],["title/components/MatchSchedulingComponent.html",[19,0.431,459,1.155]],["body/components/MatchSchedulingComponent.html",[0,0.949,3,0.1,4,0.1,5,0.091,7,0.52,8,0.615,11,1.915,12,0.658,13,0.01,14,1.072,15,0.204,19,0.647,20,1.775,22,0.091,29,3.529,30,2.009,34,2.687,35,1.57,36,1.502,41,1.528,42,1.764,43,1.764,44,0.1,47,0.974,49,2.464,50,2.348,52,1.538,54,0.1,55,1.072,56,1.431,59,2.676,60,3.145,62,1.365,64,1.127,65,1.211,67,1.953,77,1.924,89,1.339,91,1.878,92,2.471,114,1.764,115,1.447,118,2.444,120,0.004,121,0.006,122,0.004,128,1.398,129,1.52,136,1.009,170,0.761,191,1.538,197,1.047,200,1.576,202,1.924,209,1.072,227,0.522,231,1.075,235,1.93,236,1.93,241,0.566,251,0.566,255,1.157,331,1.125,332,1.696,333,1.273,334,1.241,335,1.241,339,1.241,340,1.211,341,1.655,347,1.398,356,1.884,357,1.796,359,1.998,361,2.314,366,4.724,375,2.081,377,1.072,401,2.081,415,2.676,417,0.929,418,1.739,419,1.739,420,1.241,421,2.174,422,1.241,423,1.125,424,1.241,425,1.241,426,1.241,427,1.098,428,1.241,429,1.125,430,1.241,431,1.125,432,1.241,433,1.125,434,1.241,435,1.098,436,1.241,437,1.125,438,1.241,439,1.125,440,1.241,441,1.125,442,1.241,443,1.125,444,1.241,445,1.098,446,1.241,447,1.125,448,1.241,449,1.125,450,1.241,451,1.125,452,1.241,453,1.125,454,1.241,455,1.125,456,1.241,457,1.098,458,1.241,459,1.878,460,1.241,461,1.098,462,1.241,463,1.125,464,1.241,465,1.125,466,1.211,467,1.241,468,1.125,469,1.241,470,1.241,471,1.098,472,1.241,473,1.098,474,1.241,475,1.125,476,1.241,477,1.098,478,1.241,479,1.125,480,1.91,481,1.241,482,1.241,532,4.262,551,2.604,583,6.208,670,3.629,752,2.245,804,3.588,818,3.279,856,1.941,922,4.262,925,3.777,959,4.593,969,4.919,970,4.919,979,5.037,984,4.973,985,4.405,992,4.262,994,4.919,1013,4.262,1014,3.043,1015,2.854,1021,3.043,1022,3.043,1023,3.043,1024,3.777,1025,3.043,1026,3.043,1027,3.043,1028,5.329,1029,3.043,1030,3.043,1031,4.919,1032,4.613,1064,3.782,1065,3.782,1121,5.262,1122,4.262,1124,4.262,1256,5.262,1257,6.619,1258,3.043,1259,4.593,1260,4.593,1261,4.593,1262,3.997,1263,5.301,1264,3.279,1265,3.043,1266,3.279,1267,4.593,1268,4.593,1269,4.593,1270,5.301,1271,4.919,1272,4.262,1273,6.435,1274,5.301,1275,5.301,1276,3.279,1277,5.744,1278,4.593,1279,3.279,1280,3.279,1281,6.267,1282,3.279,1283,3.279,1284,4.593,1285,3.279,1286,3.279,1287,4.593,1288,6.267,1289,3.279,1290,3.279,1291,3.279,1292,3.279,1293,3.279,1294,3.279,1295,3.279,1296,4.593,1297,4.593,1298,4.593,1299,3.279,1300,3.279,1301,3.279,1302,3.279,1303,4.593,1304,3.279,1305,3.279,1306,3.279,1307,3.279,1308,3.279,1309,3.279,1310,3.279,1311,3.279,1312,3.279,1313,3.279,1314,4.919,1315,3.279,1316,3.279,1317,4.593,1318,3.279,1319,3.279,1320,3.279,1321,3.279,1322,5.744,1323,3.279,1324,3.279,1325,2.854,1326,3.279,1327,3.279,1328,3.279,1329,3.279,1330,3.279,1331,3.279,1332,4.593,1333,3.279,1334,3.145,1335,3.279,1336,3.279,1337,4.593,1338,4.593,1467,4.593,1468,4.593,1499,5.744,1614,3.596,1624,3.596,1626,5.711,1627,5.711,1628,5.711,1629,3.596,1630,4.077,1631,4.077,1632,4.077,1633,4.077,1634,4.077,1635,4.077,1636,4.077,1637,4.077,1638,4.077,1639,4.077,1640,4.077,1641,4.077,1642,4.077,1643,4.077,1644,4.077,1645,4.077,1646,4.077,1647,4.077,1648,5.711,1649,5.711,1650,5.711,1651,5.711,1652,5.711,1653,5.711,1654,4.077,1655,5.711,1656,4.077]],["title/injectables/MatchService.html",[123,0.316,985,2.419]],["body/injectables/MatchService.html",[3,0.128,4,0.128,5,0.116,7,0.361,11,2.005,12,0.649,13,0.01,14,1.36,15,0.183,22,0.116,44,0.128,54,0.128,59,2.8,62,1.786,64,1.331,65,2.488,67,2.099,72,3.042,106,3.87,107,1.574,110,1.612,111,1.776,115,2.653,120,0.008,121,0.007,122,0.005,123,0.485,125,1.34,136,0.957,153,2.219,154,1.476,155,1.476,156,1.861,157,2.003,158,2.003,159,2.289,160,2.003,161,1.55,170,0.797,231,1.141,232,2.128,237,1.873,255,1.28,259,2.313,266,1.161,267,1.134,268,2.368,272,2.41,275,2.233,313,2.128,317,2.128,347,1.651,356,2.099,357,2.001,359,2.001,551,2.982,670,2.874,819,5.484,847,2.664,856,3.761,859,5.54,860,4.942,868,4.695,872,4.942,985,3.714,1024,4.461,1053,6.967,1109,7.388,1206,6.01,1392,5.109,1657,4.604,1658,6.745,1659,6.745,1660,5.22,1661,7.472,1662,6.591,1663,5.22,1664,6.745,1665,5.22,1666,6.745,1667,5.22,1668,7.472,1669,6.745,1670,5.22,1671,8.376,1672,6.745,1673,5.22,1674,6.745,1675,7.898,1676,7.898,1677,5.22,1678,5.22,1679,5.22,1680,5.22,1681,5.22,1682,5.425,1683,5.949,1684,5.949,1685,6.967,1686,7.898,1687,5.949,1688,5.22,1689,5.949,1690,5.22,1691,5.22,1692,5.22,1693,5.22]],["title/components/MatchplanComponent.html",[19,0.431,457,1.183]],["body/components/MatchplanComponent.html",[3,0.114,4,0.114,5,0.104,7,0.322,8,0.673,12,0.668,13,0.01,14,1.265,15,0.199,19,0.693,20,1.902,22,0.104,29,3.621,30,2.291,34,2.878,35,1.791,42,2.705,43,2.012,44,0.114,49,2.485,50,2.368,52,1.684,54,0.114,55,1.223,56,1.567,64,1.233,67,2.263,72,1.791,77,2.034,111,0.986,120,0.005,121,0.006,122,0.005,129,1.592,136,1.022,170,0.801,197,1.812,209,1.644,227,0.595,231,0.8,236,1.812,237,1.974,241,0.645,244,1.811,245,2.282,251,0.645,313,2.122,331,1.283,332,1.856,333,1.452,334,1.416,335,1.416,339,1.416,340,1.381,341,1.811,347,1.53,356,2.033,357,1.938,359,2.028,361,2.339,377,1.223,413,3.586,415,3.039,417,1.06,418,1.903,419,1.903,420,1.416,421,2.298,422,1.416,423,1.283,424,1.416,425,1.416,426,1.416,427,1.253,428,1.416,429,1.283,430,1.416,431,1.283,432,1.416,433,1.283,434,1.416,435,1.253,436,1.416,437,1.283,438,1.416,439,1.283,440,1.416,441,1.283,442,1.416,443,1.283,444,1.416,445,1.253,446,1.416,447,1.283,448,1.416,449,1.283,450,1.416,451,1.283,452,1.416,453,1.283,454,1.416,455,1.283,456,1.416,457,2.034,458,1.416,459,1.223,460,1.416,461,1.253,462,1.416,463,1.283,464,1.416,465,1.283,466,1.381,467,1.416,468,1.283,469,1.416,470,1.416,471,1.253,472,1.416,473,1.253,474,1.416,475,1.283,476,1.416,477,1.253,478,1.416,479,1.283,480,1.348,481,1.416,482,1.416,551,3.022,670,4.466,674,4.102,804,3.927,847,2.374,856,3.75,1138,3.076,1218,4.942,1334,4.157,1392,5.115,1400,3.471,1440,3.471,1451,4.102,1452,4.102,1453,3.471,1454,3.471,1455,4.102,1467,5.027,1468,5.027,1494,5.513,1499,6.523,1543,3.741,1662,6.947,1689,4.102,1694,4.102,1695,7.06,1696,6.25,1697,7.06,1698,6.25,1699,6.25,1700,7.549,1701,7.06,1702,7.06,1703,7.06,1704,7.06,1705,4.651,1706,6.25,1707,4.651,1708,6.25,1709,4.651,1710,4.651,1711,4.651,1712,4.651,1713,4.651,1714,4.651,1715,4.651,1716,4.651,1717,4.651,1718,4.651,1719,4.651,1720,4.651,1721,4.651,1722,4.651,1723,4.651,1724,4.651,1725,4.651,1726,4.651,1727,4.651,1728,4.651,1729,4.651,1730,4.651,1731,4.651,1732,4.651,1733,4.651,1734,4.651,1735,4.651,1736,4.651,1737,4.651,1738,4.651,1739,4.651,1740,4.651,1741,4.102,1742,4.651,1743,7.876,1744,4.651,1745,7.06,1746,8.11,1747,4.651,1748,4.651,1749,4.651,1750,4.651,1751,4.651,1752,4.651,1753,4.651,1754,6.25,1755,5.513,1756,5.513,1757,7.549,1758,6.25,1759,6.25,1760,4.651,1761,4.651,1762,5.513]],["title/modules/MatchplanModule.html",[553,1.212,1763,3.278]],["body/modules/MatchplanModule.html",[3,0.165,4,0.165,5,0.15,13,0.009,15,0.216,22,0.15,44,0.165,50,1.728,54,0.165,120,0.007,121,0.008,122,0.007,197,1.728,417,1.533,457,2.4,553,1.857,555,2.327,556,3.204,557,3.984,558,3.315,559,3.315,560,3.204,566,4.548,567,4.026,568,3.435,569,3.435,572,3.038,573,2.956,575,3.862,576,4.229,698,5.893,1150,5.936,1763,6.873,1764,5.936,1765,5.936,1766,5.936,1767,6.237,1768,6.73,1769,5.936]],["title/modules/MatchplanRoutingModule.html",[553,1.212,1767,3.074]],["body/modules/MatchplanRoutingModule.html",[3,0.172,4,0.172,5,0.156,13,0.009,15,0.209,19,0.689,22,0.156,44,0.172,54,0.172,120,0.007,121,0.008,122,0.007,255,1.136,457,2.176,550,3.129,555,2.424,572,2.7,573,3.027,593,4.023,594,4.343,595,4.023,597,4.023,598,4.203,1767,5.654,1769,6.184,1770,7.011]],["title/modules/MaterialModule.html",[553,1.212,716,2.905]],["body/modules/MaterialModule.html",[3,0.162,4,0.162,5,0.147,13,0.01,15,0.222,18,2.342,22,0.147,44,0.162,54,0.162,120,0.007,121,0.008,122,0.007,555,2.281,560,3.141,572,2.541,573,2.921,716,5.157,783,5.307,1411,5.82,1771,6.598,1772,8.299,1773,6.598,1774,8.299,1775,6.598,1776,8.299,1777,6.598,1778,8.299,1779,6.598,1780,8.299,1781,6.598,1782,8.299,1783,6.598,1784,6.598,1785,6.598,1786,5.82,1787,8.299,1788,8.299,1789,8.299,1790,8.75,1791,8.299,1792,8.299,1793,8.299,1794,8.299,1795,8.299,1796,8.299,1797,8.299,1798,8.299,1799,6.598,1800,8.299,1801,8.299]],["title/components/NewpasswordComponent.html",[19,0.431,461,1.183]],["body/components/NewpasswordComponent.html",[3,0.13,4,0.13,5,0.118,7,0.367,8,0.734,12,0.616,13,0.01,14,1.023,15,0.21,18,1.884,19,0.74,20,2.029,22,0.118,31,4.215,32,2.296,33,2.296,44,0.13,49,2.504,50,2.387,52,1.836,54,0.13,55,1.395,56,1.708,64,1.345,65,2.36,67,1.888,72,2.625,77,2.141,89,2.609,91,2.445,92,2.949,114,2.296,115,1.884,120,0.005,121,0.007,122,0.005,136,0.961,139,1.298,170,0.716,188,1.395,227,0.964,231,0.679,241,0.736,251,0.736,255,0.86,331,1.464,332,2.024,333,1.656,334,1.615,335,1.615,339,1.615,340,1.576,341,1.975,347,1.668,351,4.147,352,4.764,353,4.376,354,3.451,356,1.33,357,1.268,359,1.668,361,1.576,374,3.509,375,2.708,376,2.708,377,1.792,378,3.714,382,3.509,395,4.283,396,3.753,398,4.283,399,4.993,400,3.509,403,3.509,415,2.554,417,1.209,418,2.075,419,2.075,420,1.615,421,2.419,422,1.615,423,1.464,424,1.615,425,1.615,426,1.615,427,1.429,428,1.615,429,1.464,430,1.615,431,1.464,432,1.615,433,1.464,434,1.615,435,1.429,436,1.615,437,1.464,438,1.615,439,1.464,440,1.615,441,1.464,442,1.615,443,1.464,444,1.615,445,1.429,446,1.615,447,1.464,448,1.615,449,1.464,450,1.615,451,1.464,452,1.615,453,1.464,454,1.615,455,1.464,456,1.615,457,1.429,458,1.615,459,1.395,460,1.615,461,2.141,462,1.615,463,1.464,464,1.615,465,1.464,466,1.576,467,1.615,468,1.464,469,1.615,470,1.615,471,1.429,472,1.615,473,1.429,474,1.615,475,1.464,476,1.615,477,1.429,478,1.615,479,1.464,480,1.537,481,1.615,482,1.615,546,3.334,550,2.368,630,4.68,754,6.012,768,4.283,849,5.754,903,4.68,907,5.482,988,6.881,1007,6.057,1019,4.268,1358,6.642,1372,4.68,1381,6.012,1802,4.68,1803,7.53,1804,6.816,1805,7.947,1806,8.555,1807,6.816,1808,5.306,1809,5.306,1810,5.306,1811,5.306,1812,5.306,1813,5.306,1814,7.53,1815,6.816,1816,5.306,1817,5.306,1818,5.306,1819,6.816,1820,5.306,1821,6.816,1822,6.816,1823,6.816,1824,6.816]],["title/modules/NewpasswordModule.html",[553,1.212,1825,3.278]],["body/modules/NewpasswordModule.html",[3,0.166,4,0.166,5,0.151,13,0.009,15,0.216,22,0.151,44,0.166,54,0.166,120,0.007,121,0.008,122,0.007,417,1.543,461,2.404,553,1.869,555,2.342,556,3.225,557,3.995,558,3.337,559,3.337,560,3.225,566,4.554,567,4.041,568,3.457,569,3.457,572,3.05,573,2.967,575,3.886,576,4.256,737,4.06,768,4.256,1825,6.833,1826,5.974,1827,5.974,1828,5.974,1829,6.246,1830,6.773,1831,5.237,1832,5.974]],["title/modules/NewpasswordRoutingModule.html",[553,1.212,1829,3.074]],["body/modules/NewpasswordRoutingModule.html",[3,0.172,4,0.172,5,0.156,13,0.009,15,0.209,19,0.689,22,0.156,44,0.172,54,0.172,120,0.007,121,0.008,122,0.007,255,1.136,461,2.176,550,3.129,555,2.424,572,2.7,573,3.027,593,4.023,594,4.343,595,4.023,597,4.023,598,4.203,1829,5.654,1832,6.184,1833,7.011]],["title/injectables/PasswordChangeGQL.html",[123,0.316,281,1.183]],["body/injectables/PasswordChangeGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.43,9,1.515,11,1.554,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.85,37,0.679,38,1.074,39,0.647,40,0.647,44,0.23,46,0.696,47,1.63,48,0.696,54,0.212,57,1.65,62,1.182,87,0.647,94,1.59,96,1.59,100,1.59,102,0.713,104,0.713,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,125,0.647,126,0.696,127,2.519,128,0.846,129,0.51,130,2.511,131,2.678,132,0.768,133,2.248,134,0.768,135,2.026,136,0.288,138,2.625,139,0.617,140,1.59,141,1.214,142,0.731,143,1.184,144,1.184,145,1.184,146,0.679,147,1.101,148,0.749,149,0.749,150,0.731,151,2.563,152,1.214,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.67,162,0.768,163,2.041,164,1.59,165,0.768,166,0.768,167,1.399,168,0.768,169,1.184,170,0.812,171,1.184,172,1.184,173,1.506,174,1.67,175,1.184,176,1.751,177,0.768,178,1.67,179,2.135,180,2.135,181,1.887,182,1.184,183,1.67,184,1.184,185,1.214,186,1.214,187,1.67,188,1.478,189,1.887,190,1.67,191,1.699,192,1.184,193,0.768,194,1.67,195,1.934,196,1.155,197,0.647,198,2,199,0.731,200,1.101,201,1.433,202,1.074,203,1.775,204,1.214,205,1.469,206,1.469,207,0.768,208,1.214,209,1.611,210,1.214,211,1.214,212,1.214,213,1.214,214,1.214,215,1.712,216,0.749,217,1.214,218,1.67,219,0.749,220,1.128,221,1.469,222,1.184,223,1.155,224,1.469,225,1.914,226,0.749,227,0.905,228,1.469,229,1.184,230,1.775,231,0.784,232,2.223,233,1.184,234,1.184,235,1.869,236,1.672,237,0.632,238,1.184,239,1.184,240,1.184,241,1.074,242,1.155,243,1.184,244,0.731,245,1.155,246,1.399,247,1.184,248,0.731,249,1.69,250,1.365,251,0.553,252,1.128,253,0.713,254,0.768,255,1.208,256,1.433,257,1.841,258,1.433,259,1.128,260,1.433,261,1.155,262,1.155,263,1.433,264,1.433,265,0.731,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.506,272,0.713,273,0.768,274,0.768,275,0.713,276,0.768,277,0.768,278,0.663,279,0.768,280,0.768,281,1.074,282,1.214,283,1.214,284,0.713,285,0.768,286,0.768,287,0.713,288,0.768,289,0.768,290,0.713,291,0.768,292,0.713,293,0.768,294,0.768,295,0.713,296,0.768,297,0.768,298,0.713,299,0.713,300,0.768,301,0.768,302,0.713,303,0.768,304,0.768,305,0.713,306,0.731,307,2.316,308,0.768,309,0.768,310,0.696,311,0.768,312,0.768,313,0.679,314,0.768,315,1.214,316,0.713,317,0.679,318,0.768,319,0.713,320,0.713,321,0.768,322,0.768,323,0.663,324,0.713,325,0.731,326,1.049,327,1.128,328,1.128,329,0.713,330,0.731,1834,2.521]],["title/injectables/PasswordResetGQL.html",[123,0.316,278,1.155]],["body/injectables/PasswordResetGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.063,164,1.928,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,1.048,279,1.213,280,1.213,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,1835,2.518]],["title/injectables/PitchService.html",[123,0.316,984,2.633]],["body/injectables/PitchService.html",[3,0.167,4,0.167,5,0.152,7,0.471,8,0.856,12,0.616,13,0.01,15,0.213,22,0.152,34,3.429,35,2.624,41,2.552,42,2.948,43,2.948,44,0.167,54,0.167,64,1.568,65,2.023,120,0.007,121,0.008,122,0.007,123,0.571,125,1.749,128,1.445,129,1.377,136,0.908,170,0.648,201,2.437,235,1.749,266,1.515,267,1.48,316,2.45,356,1.707,357,1.628,984,4.762,1836,6.008,1837,6.812,1838,6.812,1839,7.944,1840,7.944,1841,6.39,1842,7.944,1843,6.812]],["title/components/PitchesComponent.html",[19,0.431,463,1.212]],["body/components/PitchesComponent.html",[3,0.144,4,0.144,5,0.13,7,0.404,8,0.781,12,0.562,13,0.01,15,0.178,19,0.774,20,2.122,22,0.13,44,0.144,49,2.517,50,2.399,52,1.953,54,0.144,55,1.538,56,1.817,64,1.43,67,1.974,77,2.218,89,2.586,120,0.006,121,0.007,122,0.006,136,0.9,170,0.749,200,2,227,0.748,231,0.748,241,0.812,251,0.812,331,1.614,332,2.153,333,1.826,334,1.781,335,1.781,339,1.781,340,1.737,341,2.1,347,1.774,356,1.466,357,1.398,359,1.431,377,1.538,415,3.231,417,1.333,418,2.207,419,2.207,420,1.781,421,2.506,422,1.781,423,1.614,424,1.781,425,1.781,426,1.781,427,1.576,428,1.781,429,1.614,430,1.781,431,1.614,432,1.781,433,1.614,434,1.781,435,1.576,436,1.781,437,1.614,438,1.781,439,1.614,440,1.781,441,1.614,442,1.781,443,1.614,444,1.781,445,1.576,446,1.781,447,1.614,448,1.781,449,1.614,450,1.781,451,1.614,452,1.781,453,1.614,454,1.781,455,1.614,456,1.781,457,1.576,458,1.781,459,1.538,460,1.781,461,1.576,462,1.781,463,2.272,464,1.781,465,1.614,466,1.737,467,1.781,468,1.614,469,1.781,470,1.781,471,1.576,472,1.781,473,1.576,474,1.781,475,1.614,476,1.781,477,1.576,478,1.781,479,1.614,480,1.695,481,1.781,482,1.781,932,5.83,984,5.338,1015,4.094,1032,5.763,1070,5.83,1629,5.159,1844,5.159,1845,7.876,1846,7.248,1847,5.849,1848,5.849,1849,5.849,1850,7.248,1851,7.248]],["title/injectables/PitchesGQL.html",[123,0.316,316,1.242]],["body/injectables/PitchesGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.554,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.849,37,0.679,38,1.074,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.182,87,0.647,94,1.589,96,1.589,100,1.589,102,0.713,104,0.713,107,2.055,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.511,131,2.675,132,0.767,133,2.248,134,0.767,135,2.025,136,0.288,138,2.625,139,0.617,140,1.589,141,1.213,142,0.73,143,1.184,144,1.184,145,1.184,146,0.679,147,1.1,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.669,162,0.767,163,2.041,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.184,170,0.812,171,1.184,172,1.184,173,1.505,174,1.669,175,1.184,176,1.751,177,0.767,178,1.669,179,2.135,180,2.135,181,1.887,182,1.184,183,1.669,184,1.184,185,1.213,186,1.213,187,1.669,188,1.478,189,1.887,190,1.669,191,1.698,192,1.184,193,0.767,194,1.669,195,1.933,196,1.155,197,0.647,198,2,199,0.73,200,1.365,201,1.629,202,1.074,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.711,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.184,223,1.155,224,1.468,225,1.914,226,0.748,227,0.905,228,1.468,229,1.184,230,1.774,231,0.783,232,2.223,233,1.184,234,1.184,235,1.914,236,1.671,237,0.632,238,1.184,239,1.184,240,1.184,241,1.073,242,1.155,243,1.184,244,0.73,245,1.155,246,1.398,247,1.184,248,0.73,249,1.69,250,1.365,251,0.553,252,1.127,253,0.713,254,0.767,255,1.208,256,1.433,257,1.841,258,1.629,259,1.127,260,1.433,261,1.155,262,1.155,263,1.433,264,1.433,265,0.73,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.505,272,0.713,273,0.767,274,0.767,275,0.713,276,0.767,277,0.767,278,0.663,279,0.767,280,0.767,281,0.679,282,0.767,283,0.767,284,0.713,285,0.767,286,0.767,287,0.713,288,0.767,289,0.767,290,0.713,291,0.767,292,0.713,293,0.767,294,0.767,295,0.713,296,0.767,297,0.767,298,0.713,299,0.713,300,0.767,301,0.767,302,0.713,303,0.767,304,0.767,305,0.713,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.679,314,0.767,315,1.213,316,1.127,317,0.679,318,0.767,319,0.713,320,0.713,321,0.767,322,0.767,323,0.663,324,0.713,325,0.73,326,1.048,327,1.127,328,1.127,329,0.713,330,0.73,1852,2.52]],["title/injectables/RankingGQL.html",[123,0.316,317,1.183]],["body/injectables/RankingGQL.html",[0,0.817,3,0.061,4,0.061,5,0.056,7,0.173,8,0.426,9,1.506,11,1.605,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.903,37,0.672,38,1.066,39,0.641,40,0.641,44,0.23,46,0.689,47,1.623,48,0.689,54,0.212,57,1.642,62,1.174,87,0.641,94,1.581,96,1.581,100,1.581,102,0.706,104,0.706,107,2.053,110,2.062,111,1.899,120,0.005,121,0.004,122,0.003,123,0.622,124,0.706,125,0.641,126,0.689,127,2.516,128,0.839,129,0.505,130,2.508,131,2.673,132,0.76,133,2.243,134,0.76,135,2.018,136,0.285,138,2.624,139,0.611,140,1.581,141,1.204,142,0.723,143,1.175,144,1.175,145,1.175,146,0.672,147,1.092,148,0.741,149,0.741,150,0.723,151,2.561,152,1.204,153,2.093,154,1.833,155,1.833,156,2.464,157,1.175,158,1.175,159,1.879,160,1.175,161,1.66,162,0.76,163,2.036,164,1.581,165,0.76,166,0.76,167,1.119,168,0.76,169,1.175,170,0.811,171,1.175,172,1.175,173,1.496,174,1.66,175,1.175,176,1.744,177,0.76,178,1.66,179,2.13,180,2.13,181,1.879,182,1.175,183,1.66,184,1.175,185,1.204,186,1.204,187,1.66,188,1.47,189,1.879,190,1.66,191,1.693,192,1.175,193,0.76,194,1.66,195,1.926,196,1.146,197,0.641,198,1.995,199,0.723,200,1.092,201,1.424,202,1.066,203,1.879,204,1.496,205,1.66,206,1.66,207,0.76,208,1.496,209,1.705,210,1.496,211,1.496,212,1.496,213,1.496,214,1.496,215,1.974,216,0.741,217,1.496,218,1.81,219,0.741,220,1.119,221,1.459,222,1.175,223,1.146,224,1.459,225,1.908,226,0.741,227,0.902,228,1.459,229,1.175,230,1.766,231,0.78,232,2.219,233,1.175,234,1.175,235,1.863,236,1.665,237,0.626,238,1.175,239,1.175,240,1.175,241,1.071,242,1.146,243,1.175,244,0.723,245,1.146,246,1.389,247,1.175,248,0.723,249,1.682,250,1.356,251,0.549,252,1.119,253,0.706,254,0.76,255,1.205,256,1.424,257,1.921,258,1.424,259,1.119,260,1.424,261,1.146,262,1.146,263,1.424,264,1.424,265,0.723,266,1.919,267,1.874,268,0.706,269,2.44,270,2.466,271,1.496,272,0.706,273,0.76,274,0.76,275,0.706,276,0.76,277,0.76,278,0.656,279,0.76,280,0.76,281,0.672,282,0.76,283,0.76,284,0.706,285,0.76,286,0.76,287,0.706,288,0.76,289,0.76,290,0.706,291,0.76,292,0.706,293,0.76,294,0.76,295,0.706,296,0.76,297,0.76,298,0.706,299,0.706,300,0.76,301,0.76,302,0.706,303,0.76,304,0.76,305,0.706,306,0.723,307,2.309,308,0.76,309,0.76,310,0.689,311,0.76,312,0.76,313,0.672,314,0.76,315,1.496,316,0.706,317,1.066,318,1.204,319,0.706,320,0.706,321,0.76,322,0.76,323,0.656,324,0.706,325,0.723,326,1.04,327,1.119,328,1.119,329,0.706,330,0.723,1853,2.496]],["title/injectables/RedisEventGQL.html",[123,0.316,1205,3.074]],["body/injectables/RedisEventGQL.html",[0,1.046,3,0.154,4,0.154,5,0.14,7,0.435,8,0.816,12,0.698,13,0.01,14,1.267,15,0.2,22,0.14,28,4.014,44,0.221,54,0.154,87,1.615,110,1.503,111,1.725,120,0.008,121,0.008,122,0.006,123,0.545,125,1.615,127,2.357,128,1.607,129,1.272,130,2.3,136,0.719,138,2.387,139,1.54,150,1.823,151,1.823,156,2.092,170,0.721,248,1.823,249,2.384,250,2.245,251,1.052,252,1.779,253,1.779,255,1.02,265,1.823,266,1.4,267,1.367,269,1.779,325,1.823,326,1.993,327,2.143,328,2.143,329,1.779,330,1.823,1197,6.3,1205,5.305,1346,4.404,1347,7.201,1348,7.174,1349,7.174,1350,5.549,1854,6.291]],["title/injectables/RemoveTeamFromSeasonGQL.html",[123,0.316,287,1.242]],["body/injectables/RemoveTeamFromSeasonGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.315,134,0.767,135,2.099,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,1.127,288,1.213,289,1.213,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,1855,2.518]],["title/components/RenameTeamComponent.html",[19,0.431,465,1.212]],["body/components/RenameTeamComponent.html",[3,0.133,4,0.133,5,0.121,7,0.374,8,0.744,12,0.621,13,0.01,14,1.142,15,0.187,16,4.555,17,3.246,18,1.923,19,0.747,20,2.048,21,2.982,22,0.121,36,2.066,41,2.029,44,0.133,47,1.913,49,2.507,50,2.389,52,1.86,54,0.133,55,1.424,56,1.731,64,1.363,65,1.608,67,2.12,68,4.241,71,4.14,72,2.66,77,2.157,89,2.496,91,2.495,92,2.343,111,1.465,112,3.107,114,2.343,115,1.923,120,0.005,121,0.007,122,0.005,133,1.531,136,0.945,156,1.495,170,0.787,182,2.051,183,1.608,227,0.693,231,0.693,232,1.86,241,0.752,251,0.752,255,0.878,257,2.15,299,2.431,331,1.495,332,2.051,333,1.69,334,1.649,335,1.649,339,1.649,340,1.608,341,2.001,347,1.69,356,1.731,357,1.65,359,1.69,361,1.608,377,1.424,401,2.764,413,3.962,415,3,417,1.234,418,2.102,419,2.102,420,1.649,421,2.438,422,1.649,423,1.495,424,1.649,425,1.649,426,1.649,427,1.459,428,1.649,429,1.495,430,1.649,431,1.495,432,1.649,433,1.495,434,1.649,435,1.459,436,1.649,437,1.495,438,1.649,439,1.495,440,1.649,441,1.495,442,1.649,443,1.495,444,1.649,445,1.459,446,1.649,447,1.495,448,1.649,449,1.495,450,1.649,451,1.495,452,1.649,453,1.495,454,1.649,455,1.495,456,1.649,457,1.459,458,1.649,459,1.424,460,1.649,461,1.459,462,1.649,463,1.495,464,1.649,465,2.21,466,2.584,467,1.649,468,1.495,469,1.649,470,1.649,471,1.459,472,1.649,473,1.459,474,1.649,475,1.495,476,1.649,477,1.459,478,1.649,479,1.495,480,1.569,481,1.649,482,1.649,499,6.312,519,3.403,904,4.356,911,4.776,916,6.091,959,5.554,1682,4.356,1683,4.776,1684,4.776,1685,6.091,1687,4.776,1856,7.46,1857,4.776,1858,7.603,1859,6.905,1860,5.415,1861,5.415,1862,6.905,1863,5.415,1864,7.603,1865,5.415,1866,5.415,1867,5.415,1868,5.415,1869,6.905]],["title/injectables/RenameTeamGQL.html",[123,0.316,299,1.242]],["body/injectables/RenameTeamGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.273,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,2.025,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,1.127,300,1.213,301,1.213,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,1870,2.518]],["title/interfaces/RoundTeam.html",[0,0.73,45,3.074]],["body/interfaces/RoundTeam.html",[0,1.22,1,5.138,2,3.047,3,0.147,4,0.147,5,0.133,6,4.455,7,0.413,8,0.791,9,1.977,10,4.455,11,1.36,12,0.569,13,0.01,14,0.896,15,0.219,16,4.042,17,3.578,18,2.119,19,0.721,20,1.977,21,3.287,22,0.133,23,4.057,24,3.751,25,5.932,26,3.578,27,3.578,28,3.162,29,3.337,30,2.941,31,3.916,32,2.583,33,2.583,34,2.993,35,2.299,36,1.36,37,1.977,38,1.977,39,1.884,40,1.884,41,2.237,42,2.583,43,2.583,44,0.18,45,5.564,46,2.392,47,2.119,48,2.392,49,1.608,50,1.533,51,4.801,52,1.608,53,4.801,54,0.147,55,1.57,56,1.496,57,1.608,58,4.801,59,2.237,60,3.287,61,4.801,62,1.754,63,4.801,64,1.178,65,2.528,66,4.455,67,1.992,68,3.162,69,4.801,70,4.178,71,3.578,72,2.299,73,4.455,74,4.455,75,3.948,76,4.455,77,1.608,78,4.801,79,4.455,80,6.393,81,6.393,82,4.801,83,5.138,84,4.801,85,4.801,86,4.801,87,1.533,88,4.801,89,1.96,90,4.801,91,2.75,92,2.583,93,4.801,94,1.688,95,5.904,96,1.688,97,5.904,98,5.904,99,4.801,100,1.688,101,4.801,102,1.688,103,4.801,104,1.688,105,4.801,106,3.425,107,1.713,108,4.455,109,4.801,110,1.426,111,1.266,112,3.425,113,3.948,114,2.583,115,2.119,116,4.455,117,4.801,118,4.4,119,4.801,120,0.006,121,0.007,122,0.006]],["title/injectables/ScheduleMatchGQL.html",[123,0.316,272,1.242]],["body/injectables/ScheduleMatchGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.161,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,2.109,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,1.127,273,1.213,274,1.213,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,1871,2.518]],["title/injectables/SeasonService.html",[123,0.316,1392,2.633]],["body/injectables/SeasonService.html",[3,0.148,4,0.148,5,0.134,7,0.417,8,0.795,12,0.645,13,0.01,14,1.198,15,0.204,22,0.134,35,2.321,44,0.148,54,0.148,59,2.99,64,1.457,65,2.471,67,2.001,89,2.621,106,3.457,107,1.406,111,1.278,115,2.139,120,0.006,121,0.007,122,0.006,123,0.531,125,1.547,128,1.566,129,1.492,136,1.005,169,2.192,170,0.812,198,2.284,199,2.517,220,1.704,266,1.34,267,1.309,284,2.488,319,2.456,347,1.807,356,2.085,357,1.988,359,1.953,361,1.789,379,5.509,380,4.497,551,2.91,804,4.639,819,5.015,847,3.075,856,2.869,859,4.882,860,3.985,868,3.786,872,3.985,1218,4.217,1392,4.425,1407,6.511,1872,5.314,1873,7.981,1874,7.981,1875,7.382,1876,7.981,1877,6.025,1878,7.382,1879,7.382,1880,6.025,1881,7.382,1882,8.319,1883,6.025,1884,7.382,1885,7.981,1886,7.382,1887,7.382,1888,6.025,1889,6.025,1890,6.025,1891,6.025,1892,6.025,1893,6.511,1894,6.025,1895,6.025,1896,6.025,1897,6.025,1898,6.025,1899,6.025,1900,6.025,1901,6.025,1902,6.025,1903,6.025]],["title/components/SeasonchooserComponent.html",[19,0.431,468,1.212]],["body/components/SeasonchooserComponent.html",[3,0.136,4,0.136,5,0.124,7,0.383,8,0.755,12,0.659,13,0.01,15,0.209,18,1.968,19,0.755,20,2.071,22,0.124,34,3.134,35,2.135,41,2.077,42,3.033,43,2.399,44,0.136,49,2.51,50,2.392,52,1.888,54,0.136,55,1.458,56,1.757,59,2.077,64,1.094,67,1.757,72,2.135,77,2.176,120,0.006,121,0.007,122,0.006,128,1.176,129,1.121,136,0.999,142,1.606,170,0.768,191,1.294,198,2.191,220,1.568,227,0.709,231,0.709,241,0.769,251,0.769,331,1.53,332,2.082,333,1.73,334,1.688,335,1.688,339,1.688,340,1.646,341,2.031,347,1.715,356,1.757,357,1.675,359,1.715,361,2.082,363,6.496,377,1.458,417,1.263,418,2.134,419,2.134,420,1.688,421,2.459,422,1.688,423,1.53,424,1.688,425,1.688,426,1.688,427,1.493,428,1.688,429,1.53,430,1.688,431,1.53,432,1.688,433,1.53,434,1.688,435,1.493,436,1.688,437,1.53,438,1.688,439,1.53,440,1.688,441,1.53,442,1.688,443,1.53,444,1.688,445,1.493,446,1.688,447,1.53,448,1.688,449,1.53,450,1.688,451,1.53,452,1.688,453,1.53,454,1.688,455,1.53,456,1.688,457,1.493,458,1.688,459,1.458,460,1.688,461,1.493,462,1.688,463,1.53,464,1.688,465,1.53,466,1.646,467,1.688,468,2.229,469,1.688,470,1.688,471,1.493,472,1.688,473,1.493,474,1.688,475,1.53,476,1.688,477,1.493,478,1.688,479,1.53,480,1.606,481,1.688,482,1.688,922,5.231,925,4.636,1391,6.78,1392,5.289,1400,4.137,1440,4.137,1442,4.89,1443,4.89,1490,6.182,1893,6.182,1904,4.89,1905,7.009,1906,7.686,1907,7.009,1908,7.009,1909,7.686,1910,7.009,1911,7.686,1912,7.009,1913,7.009,1914,5.544,1915,8.077,1916,7.009,1917,5.544,1918,5.544,1919,5.544,1920,5.544,1921,5.544,1922,7.009,1923,5.544,1924,5.544,1925,5.544,1926,5.544,1927,5.544,1928,5.544,1929,5.544,1930,5.544]],["title/modules/SharedModule.html",[553,1.212,566,2.242]],["body/modules/SharedModule.html",[3,0.147,4,0.147,5,0.134,13,0.01,15,0.224,22,0.134,26,3.591,27,3.591,28,3.173,32,2.592,33,2.592,44,0.147,54,0.147,120,0.006,121,0.007,122,0.006,123,0.431,375,3.058,377,2.333,417,1.365,433,2.449,437,2.506,439,2.449,441,2.449,443,2.449,455,2.506,468,2.506,553,1.653,555,2.071,556,2.852,557,3.791,558,2.951,559,2.951,560,3.791,566,4.755,567,3.755,568,3.058,569,3.058,571,5.917,572,2.833,573,2.756,704,6.403,716,6.006,729,5.284,734,7.022,735,7.022,737,3.591,741,5.284,918,4.819,1831,5.265,1931,5.284,1932,5.284,1933,5.991,1934,5.284,1935,5.991,1936,5.991,1937,5.991,1938,5.991,1939,5.991,1940,5.991,1941,5.991,1942,7.961,1943,7.961,1944,5.991,1945,5.991]],["title/components/SnackbarComponent.html",[19,0.431,377,1.155]],["body/components/SnackbarComponent.html",[0,0.989,3,0.146,4,0.146,5,0.133,7,0.412,8,0.789,12,0.568,13,0.009,14,0.894,15,0.18,18,2.113,19,0.78,20,2.139,21,3.278,22,0.133,44,0.18,49,2.519,50,2.401,52,1.974,54,0.146,55,1.565,56,1.837,64,1.446,67,1.99,72,3.191,77,2.232,120,0.006,121,0.007,122,0.006,136,0.907,170,0.755,227,0.762,231,0.762,241,0.826,251,0.826,331,1.643,332,2.176,333,1.858,334,1.812,335,1.812,339,1.812,340,1.768,341,2.123,347,1.793,351,4.035,356,1.492,357,1.422,359,1.457,361,1.768,377,2.178,396,3.278,417,1.356,418,2.231,419,2.231,420,1.812,421,2.522,422,1.812,423,1.643,424,1.812,425,1.812,426,1.812,427,1.604,428,1.812,429,1.643,430,1.812,431,1.643,432,1.812,433,1.643,434,1.812,435,1.604,436,1.812,437,1.643,438,1.812,439,1.643,440,1.812,441,1.643,442,1.812,443,1.643,444,1.812,445,1.604,446,1.812,447,1.643,448,1.812,449,1.643,450,1.812,451,1.643,452,1.812,453,1.643,454,1.812,455,1.643,456,1.812,457,1.604,458,1.812,459,1.565,460,1.812,461,1.604,462,1.812,463,1.643,464,1.812,465,1.643,466,1.768,467,1.812,468,1.643,469,1.812,470,1.812,471,1.604,472,1.812,473,1.604,474,1.812,475,1.643,476,1.812,477,1.604,478,1.812,479,1.643,480,1.725,481,1.812,482,1.812,519,3.74,1339,6.348,1340,4.788,1341,5.25,1342,6.463,1343,7.002,1344,6.463,1946,5.952,1947,5.952,1948,5.952,1949,5.952,1950,7.327]],["title/injectables/StartSeasonGQL.html",[123,0.316,292,1.242]],["body/injectables/StartSeasonGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.43,9,1.515,11,1.554,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.85,37,0.679,38,1.074,39,0.647,40,0.647,44,0.23,46,0.696,47,1.63,48,0.696,54,0.212,57,1.65,62,1.182,87,0.647,94,1.59,96,1.59,100,1.59,102,0.713,104,0.713,107,2.05,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,125,0.647,126,0.696,127,2.519,128,0.846,129,0.51,130,2.511,131,2.678,132,0.768,133,2.248,134,0.768,135,2.026,136,0.288,138,2.625,139,0.617,140,1.59,141,1.214,142,0.731,143,1.184,144,1.184,145,1.184,146,0.679,147,1.101,148,0.749,149,0.749,150,0.731,151,2.563,152,1.214,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.67,162,0.768,163,2.041,164,1.59,165,0.768,166,0.768,167,1.128,168,0.768,169,1.184,170,0.812,171,1.184,172,1.184,173,1.506,174,1.67,175,1.184,176,1.751,177,0.768,178,1.67,179,2.135,180,2.135,181,1.887,182,1.184,183,1.67,184,1.184,185,1.214,186,1.214,187,1.67,188,1.478,189,1.887,190,1.67,191,1.699,192,1.184,193,0.768,194,1.67,195,1.934,196,1.155,197,0.647,198,2,199,0.731,200,1.101,201,1.433,202,1.074,203,1.775,204,1.214,205,1.469,206,1.469,207,0.768,208,1.214,209,1.611,210,1.214,211,1.214,212,1.214,213,1.214,214,1.214,215,1.712,216,0.749,217,1.214,218,1.67,219,0.749,220,1.128,221,1.469,222,1.184,223,1.155,224,1.469,225,1.914,226,0.749,227,0.905,228,1.469,229,1.184,230,1.775,231,0.784,232,2.223,233,1.184,234,1.184,235,1.869,236,1.672,237,0.632,238,1.184,239,1.184,240,1.184,241,1.074,242,1.155,243,1.184,244,0.731,245,1.155,246,1.399,247,1.184,248,0.731,249,1.69,250,1.365,251,0.553,252,1.128,253,0.713,254,0.768,255,1.208,256,1.433,257,1.841,258,1.433,259,1.128,260,1.433,261,1.155,262,1.155,263,1.433,264,1.433,265,0.731,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.506,272,0.713,273,0.768,274,0.768,275,0.713,276,0.768,277,0.768,278,0.663,279,0.768,280,0.768,281,0.679,282,0.768,283,0.768,284,0.713,285,0.768,286,0.768,287,0.713,288,0.768,289,0.768,290,0.713,291,0.768,292,1.128,293,1.214,294,1.214,295,0.713,296,0.768,297,0.768,298,0.713,299,0.713,300,0.768,301,0.768,302,0.713,303,0.768,304,0.768,305,0.713,306,0.731,307,2.316,308,0.768,309,0.768,310,0.696,311,0.768,312,0.768,313,0.679,314,0.768,315,1.214,316,0.713,317,0.679,318,0.768,319,0.713,320,0.713,321,0.768,322,0.768,323,0.663,324,0.713,325,0.731,326,1.049,327,1.128,328,1.128,329,0.713,330,0.731,1951,2.521]],["title/injectables/SubmitResultGQL.html",[123,0.316,268,1.242]],["body/injectables/SubmitResultGQL.html",[0,0.82,3,0.062,4,0.062,5,0.056,7,0.174,8,0.428,9,1.512,11,1.552,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.848,37,0.677,38,1.071,39,0.645,40,0.645,44,0.23,46,0.693,47,1.628,48,0.693,54,0.212,57,1.647,62,1.179,87,0.645,94,1.587,96,1.587,100,1.587,102,0.71,104,0.71,107,2.05,110,2.063,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.71,125,0.645,126,0.693,127,2.518,128,0.843,129,0.508,130,2.51,131,2.677,132,0.765,133,2.246,134,0.765,135,2.023,136,0.287,138,2.625,139,0.615,140,1.587,141,1.211,142,0.728,143,1.181,144,1.181,145,1.181,146,0.677,147,1.097,148,0.746,149,0.746,150,0.728,151,2.562,152,1.502,153,2.257,154,2.056,155,2.056,156,2.466,157,1.466,158,1.181,159,1.884,160,1.181,161,1.666,162,0.765,163,2.039,164,1.587,165,0.765,166,0.765,167,1.124,168,0.765,169,1.181,170,0.812,171,1.181,172,1.181,173,1.502,174,1.666,175,1.181,176,1.749,177,0.765,178,1.666,179,2.133,180,2.133,181,1.884,182,1.181,183,1.666,184,1.181,185,1.211,186,1.211,187,1.666,188,1.476,189,1.884,190,1.666,191,1.697,192,1.181,193,0.765,194,1.666,195,1.931,196,1.152,197,0.645,198,1.998,199,0.728,200,1.097,201,1.43,202,1.071,203,1.772,204,1.211,205,1.466,206,1.466,207,0.765,208,1.211,209,1.608,210,1.211,211,1.211,212,1.211,213,1.211,214,1.211,215,1.708,216,0.746,217,1.211,218,1.666,219,0.746,220,1.124,221,1.466,222,1.181,223,1.152,224,1.466,225,1.912,226,0.746,227,0.904,228,1.466,229,1.181,230,1.772,231,0.782,232,2.222,233,1.181,234,1.181,235,1.867,236,1.669,237,0.63,238,1.181,239,1.181,240,1.181,241,1.073,242,1.152,243,1.181,244,0.728,245,1.152,246,1.395,247,1.181,248,0.728,249,1.687,250,1.362,251,0.552,252,1.124,253,0.71,254,0.765,255,1.207,256,1.43,257,1.839,258,1.43,259,1.124,260,1.43,261,1.152,262,1.152,263,1.43,264,1.43,265,0.728,266,1.921,267,1.876,268,1.124,269,2.442,270,2.47,271,1.861,272,0.71,273,0.765,274,0.765,275,0.71,276,0.765,277,0.765,278,0.661,279,0.765,280,0.765,281,0.677,282,0.765,283,0.765,284,0.71,285,0.765,286,0.765,287,0.71,288,0.765,289,0.765,290,0.71,291,0.765,292,0.71,293,0.765,294,0.765,295,0.71,296,0.765,297,0.765,298,0.71,299,0.71,300,0.765,301,0.765,302,0.71,303,0.765,304,0.765,305,0.71,306,0.728,307,2.313,308,0.765,309,0.765,310,0.693,311,0.765,312,0.765,313,0.677,314,0.765,315,1.211,316,0.71,317,0.677,318,0.765,319,0.71,320,0.71,321,0.765,322,0.765,323,0.661,324,0.71,325,0.728,326,1.046,327,1.124,328,1.124,329,0.71,330,0.728,1952,2.512]],["title/components/TableComponent.html",[19,0.431,471,1.183]],["body/components/TableComponent.html",[3,0.133,4,0.133,5,0.121,7,0.376,8,0.746,12,0.621,13,0.01,15,0.208,19,0.748,20,2.052,22,0.121,29,3.721,30,2.678,34,3.106,35,2.094,41,2.037,42,2.352,43,2.352,44,0.133,49,2.508,50,2.39,52,1.865,54,0.133,55,1.43,56,1.735,64,1.366,65,1.615,67,2.122,77,2.16,120,0.006,121,0.007,122,0.006,136,0.967,170,0.725,203,2.324,227,0.696,231,0.696,241,0.754,251,0.754,317,2.16,331,1.5,332,2.056,333,1.697,334,1.655,335,1.655,339,1.655,340,1.615,341,2.006,347,1.694,356,1.363,357,1.299,359,1.694,361,2.056,377,1.43,417,1.239,418,2.108,419,2.108,420,1.655,421,2.441,422,1.655,423,1.5,424,1.655,425,1.655,426,1.655,427,1.464,428,1.655,429,1.5,430,1.655,431,1.5,432,1.655,433,1.5,434,1.655,435,1.464,436,1.655,437,1.5,438,1.655,439,1.5,440,1.655,441,1.5,442,1.655,443,1.5,444,1.655,445,1.464,446,1.655,447,1.5,448,1.655,449,1.5,450,1.655,451,1.5,452,1.655,453,1.5,454,1.655,455,1.5,456,1.655,457,1.464,458,1.655,459,1.43,460,1.655,461,1.464,462,1.655,463,1.5,464,1.655,465,1.5,466,1.615,467,1.655,468,1.5,469,1.655,470,1.655,471,2.16,472,1.655,473,1.464,474,1.655,475,1.5,476,1.655,477,1.464,478,1.655,479,1.5,480,1.575,481,1.655,482,1.655,763,5.166,1206,6.127,1392,5.271,1400,4.057,1440,4.057,1741,4.795,1841,4.373,1953,4.795,1954,7.617,1955,6.923,1956,8.019,1957,6.923,1958,5.436,1959,5.436,1960,5.436,1961,5.436,1962,5.436,1963,5.436,1964,5.436,1965,5.436,1966,5.436,1967,6.923,1968,6.923,1969,6.923,1970,6.923,1971,6.923,1972,6.923,1973,6.923,1974,6.923,1975,6.923,1976,6.923,1977,6.923,1978,6.923,1979,8.019,1980,8.019,1981,6.923,1982,6.923,1983,5.436,1984,5.436]],["title/modules/TableModule.html",[553,1.212,1985,3.278]],["body/modules/TableModule.html",[3,0.166,4,0.166,5,0.151,13,0.009,15,0.216,22,0.151,44,0.166,54,0.166,120,0.007,121,0.008,122,0.007,417,1.543,471,2.404,553,1.869,555,2.342,556,3.225,557,3.995,558,3.337,559,3.337,560,3.225,566,4.554,567,4.041,568,3.457,569,3.457,572,3.05,573,2.967,575,3.886,576,4.256,737,4.06,763,5.055,1831,5.237,1985,6.833,1986,5.974,1987,5.974,1988,5.974,1989,6.246,1990,6.773,1991,5.974]],["title/modules/TableRoutingModule.html",[553,1.212,1989,3.074]],["body/modules/TableRoutingModule.html",[3,0.172,4,0.172,5,0.156,13,0.009,15,0.209,19,0.689,22,0.156,44,0.172,54,0.172,120,0.007,121,0.008,122,0.007,255,1.136,471,2.176,550,3.129,555,2.424,572,2.7,573,3.027,593,4.023,594,4.343,595,4.023,597,4.023,598,4.203,1989,5.654,1991,6.184,1992,7.011]],["title/interfaces/TeamIdPair.html",[0,0.73,38,1.183]],["body/interfaces/TeamIdPair.html",[0,0.822,2,1.287,3,0.062,4,0.062,5,0.056,7,0.174,8,0.43,9,1.515,11,1.554,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.85,37,0.679,38,1.332,39,0.647,40,0.647,44,0.23,46,0.696,47,1.63,48,0.696,54,0.212,57,1.65,62,1.182,87,0.647,94,1.59,96,1.59,100,1.59,102,1.59,104,1.59,107,2.05,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,126,0.696,127,2.503,128,0.535,130,2.506,131,2.675,132,0.768,133,2.248,134,0.768,135,2.026,138,2.628,139,0.617,140,1.59,141,1.214,142,0.731,143,1.184,144,1.184,145,1.184,146,0.679,147,1.101,148,0.749,149,0.749,150,0.731,151,2.563,152,1.214,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.67,162,0.768,163,2.041,164,1.59,165,0.768,166,0.768,167,1.128,168,0.768,169,1.184,170,0.812,171,1.184,172,1.184,173,1.506,174,1.67,175,1.184,176,1.751,177,0.768,178,1.67,179,2.135,180,2.135,181,1.887,182,1.184,183,1.67,184,1.184,185,1.214,186,1.214,187,1.67,188,1.478,189,1.887,190,1.67,191,1.699,192,1.184,193,0.768,194,1.67,195,1.934,196,1.155,197,0.647,198,2,199,0.731,200,1.101,201,1.433,202,1.074,203,1.775,204,1.214,205,1.469,206,1.469,207,0.768,208,1.214,209,1.611,210,1.214,211,1.214,212,1.214,213,1.214,214,1.214,215,1.712,216,0.749,217,1.214,218,1.67,219,0.749,220,1.128,221,1.469,222,1.184,223,1.155,224,1.469,225,1.914,226,0.749,227,0.905,228,1.469,229,1.184,230,1.775,231,0.784,232,2.223,233,1.184,234,1.184,235,1.869,236,1.672,237,0.632,238,1.184,239,1.184,240,1.184,241,1.074,242,1.155,243,1.184,244,0.731,245,1.155,246,1.399,247,1.184,248,0.731,249,1.69,250,1.365,251,0.553,252,1.128,253,0.713,254,0.768,255,1.208,256,1.433,257,1.841,258,1.433,259,1.128,260,1.433,261,1.155,262,1.155,263,1.433,264,1.433,265,0.731,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.506,272,0.713,273,0.768,274,0.768,275,0.713,276,0.768,277,0.768,278,0.663,279,0.768,280,0.768,281,0.679,282,0.768,283,0.768,284,0.713,285,0.768,286,0.768,287,0.713,288,0.768,289,0.768,290,0.713,291,0.768,292,0.713,293,0.768,294,0.768,295,0.713,296,0.768,297,0.768,298,0.713,299,0.713,300,0.768,301,0.768,302,0.713,303,0.768,304,0.768,305,0.713,306,0.731,307,2.316,308,0.768,309,0.768,310,0.696,311,0.768,312,0.768,313,0.679,314,0.768,315,1.214,316,0.713,317,0.679,318,0.768,319,0.713,320,0.713,321,0.768,322,0.768,323,0.663,324,0.713,325,0.731,326,1.049,327,1.128,328,1.128,329,0.713,330,0.731,357,1.343]],["title/injectables/TeamService.html",[23,2.242,123,0.316]],["body/injectables/TeamService.html",[3,0.15,4,0.15,5,0.136,7,0.423,8,0.802,12,0.622,13,0.01,14,1.255,15,0.21,22,0.136,23,4.267,34,3.275,35,2.355,36,1.83,42,2.645,43,2.645,44,0.183,54,0.183,57,2.164,59,3.009,64,1.47,65,2.212,89,2.745,106,3.507,107,1.426,111,1.296,115,2.17,120,0.008,121,0.008,122,0.006,123,0.535,125,1.569,128,1.296,129,1.236,136,0.918,170,0.764,176,1.912,266,1.36,267,1.328,295,2.364,320,2.495,347,1.823,356,1.867,357,1.78,359,1.823,379,5.558,380,4.562,487,6.569,491,6.569,493,7.559,551,2.229,819,5.253,847,3.12,859,4.926,860,4.043,868,3.841,872,4.043,1138,4.926,1334,4.604,1453,5.558,1454,5.558,1841,5.99,1993,5.392,1994,6.113,1995,7.447,1996,7.447,1997,7.447,1998,7.447,1999,6.113,2000,6.113,2001,6.113,2002,7.447,2003,6.113,2004,7.447,2005,6.569,2006,7.447,2007,7.447,2008,7.447,2009,6.113,2010,6.113,2011,6.113,2012,6.113,2013,6.113,2014,6.113,2015,6.113]],["title/components/TeamadminComponent.html",[19,0.431,473,1.183]],["body/components/TeamadminComponent.html",[3,0.125,4,0.125,5,0.114,7,0.352,8,0.714,12,0.656,13,0.01,14,1.364,15,0.211,18,1.806,19,0.725,20,1.988,22,0.114,23,4.473,24,3.197,31,4.317,32,2.201,33,2.201,41,1.906,44,0.125,49,2.499,50,2.381,52,1.787,54,0.125,55,1.338,56,1.663,59,2.485,64,1.309,65,2.192,67,2.177,72,2.555,77,2.107,89,2.423,91,2.344,92,2.201,106,2.919,107,1.187,112,2.919,114,2.201,115,1.806,120,0.005,121,0.007,122,0.005,128,1.407,129,1.341,133,1.439,136,0.992,163,2.083,170,0.772,178,2.192,179,1.404,180,1.404,181,2.351,227,1.001,231,0.651,241,0.706,251,0.706,298,2.212,323,2.057,331,1.404,332,1.97,333,1.588,334,1.549,335,1.549,339,1.549,340,1.511,341,1.922,344,6.898,345,6.898,347,1.623,351,4.467,352,4.863,353,3.652,354,3.284,356,1.85,357,1.764,359,1.806,361,1.511,366,5.097,374,3.365,375,2.597,376,2.597,377,1.744,378,3.561,382,4.387,383,5.85,395,4.168,396,3.652,398,4.168,399,4.914,400,3.365,401,2.597,403,3.365,415,2.485,417,1.159,418,2.019,419,2.019,420,1.549,421,2.381,422,1.549,423,1.404,424,1.549,425,1.549,426,1.549,427,1.37,428,1.549,429,1.404,430,1.549,431,1.404,432,1.549,433,1.404,434,1.549,435,1.37,436,1.549,437,1.404,438,1.549,439,1.404,440,1.549,441,1.404,442,1.549,443,1.404,444,1.549,445,1.37,446,1.549,447,1.404,448,1.549,449,1.404,450,1.549,451,1.404,452,1.549,453,1.404,454,1.549,455,1.404,456,1.549,457,1.37,458,1.549,459,1.338,460,1.549,461,1.37,462,1.549,463,1.404,464,1.549,465,1.404,466,1.511,467,1.549,468,1.404,469,1.549,470,1.549,471,1.37,472,1.549,473,2.107,474,1.549,475,1.404,476,1.549,477,1.37,478,1.549,479,1.404,480,1.474,481,1.549,482,1.549,546,3.197,551,1.855,752,2.801,773,5.335,811,5.508,822,4.643,1081,4.95,2016,4.487,2017,7.38,2018,6.633,2019,7.38,2020,6.633,2021,6.633,2022,6.633,2023,6.633,2024,5.087,2025,6.633,2026,5.087,2027,6.633,2028,5.087,2029,5.087,2030,5.087,2031,5.087,2032,5.087,2033,6.633,2034,5.087,2035,5.087,2036,5.087,2037,5.087,2038,5.087,2039,6.633]],["title/guards/TeamadminGuard.html",[540,3.533,757,3.278]],["body/guards/TeamadminGuard.html",[3,0.163,4,0.163,5,0.148,7,0.46,12,0.607,13,0.01,15,0.211,22,0.148,34,3.395,35,2.561,44,0.163,54,0.163,56,1.667,64,1.312,120,0.007,121,0.008,122,0.007,123,0.563,136,0.951,170,0.745,222,2.473,266,1.479,267,1.444,347,1.917,353,4.313,354,3.61,356,1.963,357,1.872,359,1.917,376,3.394,542,5.349,544,7.053,545,7.148,546,4.179,550,2.968,551,2.856,757,5.846,783,6.3,789,4.963,819,4.922,856,3.73,2040,5.866,2041,6.65,2042,6.65,2043,8.598,2044,8.598,2045,6.65,2046,6.65,2047,7.833]],["title/modules/TeamadminModule.html",[553,1.212,2048,3.278]],["body/modules/TeamadminModule.html",[3,0.167,4,0.167,5,0.151,13,0.009,15,0.216,22,0.151,44,0.167,54,0.167,120,0.007,121,0.008,122,0.007,417,1.546,473,2.405,553,1.872,555,2.346,556,3.23,557,3.998,558,3.342,559,3.342,560,3.23,566,4.556,567,4.045,568,3.463,569,3.463,572,3.053,573,2.97,575,3.893,576,4.263,737,4.067,773,5.457,1831,5.242,2048,6.834,2049,5.984,2050,5.984,2051,5.984,2052,6.248,2053,6.784,2054,5.984]],["title/modules/TeamadminRoutingModule.html",[553,1.212,2052,3.074]],["body/modules/TeamadminRoutingModule.html",[3,0.171,4,0.171,5,0.156,13,0.01,15,0.214,19,0.685,22,0.156,44,0.171,54,0.171,120,0.007,121,0.008,122,0.007,255,1.13,473,2.169,550,3.111,555,2.41,557,3.319,572,2.685,573,3.016,593,3.999,594,4.333,595,3.999,597,3.999,598,4.178,737,4.178,1831,4.61,2052,5.635,2054,6.148,2055,6.97]],["title/components/TeamsComponent.html",[19,0.431,475,1.212]],["body/components/TeamsComponent.html",[3,0.145,4,0.145,5,0.132,7,0.41,8,0.787,12,0.566,13,0.01,15,0.179,19,0.778,20,2.134,22,0.132,23,4.555,44,0.145,49,2.519,50,2.4,52,1.968,54,0.145,55,1.558,56,1.831,64,1.442,67,1.985,77,2.228,89,2.601,120,0.006,121,0.007,122,0.006,136,0.905,170,0.754,176,1.875,227,0.758,231,0.758,241,0.822,251,0.822,331,1.635,332,2.17,333,1.849,334,1.803,335,1.803,339,1.803,340,1.759,341,2.117,347,1.788,350,4.764,356,1.485,357,1.415,359,1.45,377,1.558,413,4.191,415,3.098,417,1.349,418,2.224,419,2.224,420,1.803,421,2.518,422,1.803,423,1.635,424,1.803,425,1.803,426,1.803,427,1.596,428,1.803,429,1.635,430,1.803,431,1.635,432,1.803,433,1.635,434,1.803,435,1.596,436,1.803,437,1.635,438,1.803,439,1.635,440,1.803,441,1.635,442,1.803,443,1.635,444,1.803,445,1.596,446,1.803,447,1.635,448,1.803,449,1.635,450,1.803,451,1.635,452,1.803,453,1.635,454,1.803,455,1.635,456,1.803,457,1.596,458,1.803,459,1.558,460,1.803,461,1.596,462,1.803,463,1.635,464,1.803,465,1.635,466,1.759,467,1.803,468,1.635,469,1.803,470,1.803,471,1.596,472,1.803,473,1.596,474,1.803,475,2.282,476,1.803,477,1.596,478,1.803,479,1.635,480,1.716,481,1.803,482,1.803,932,5.876,1441,5.224,2056,5.224,2057,7.921,2058,7.305,2059,5.923,2060,5.923,2061,5.923,2062,7.305]],["title/injectables/TeamsGQL.html",[123,0.316,295,1.242]],["body/injectables/TeamsGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.05,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.678,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.822,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.914,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.154,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,1.127,296,1.213,297,1.213,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,0.767,322,0.767,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,2063,2.518]],["title/components/TournamentComponent.html",[19,0.431,477,1.183]],["body/components/TournamentComponent.html",[3,0.109,4,0.109,5,0.099,7,0.308,8,0.653,9,2.359,10,5.15,12,0.601,13,0.01,14,1.113,15,0.19,19,0.678,20,1.859,22,0.099,29,3.55,30,2.192,34,3.163,35,1.714,39,1.903,40,1.903,41,1.667,42,2.986,43,1.925,44,0.109,49,2.478,50,2.362,52,1.634,54,0.109,55,1.17,56,1.52,59,1.667,60,2.45,64,1.197,65,1.801,67,1.73,70,4.831,72,2.336,77,1.997,87,1.557,111,0.943,120,0.005,121,0.006,122,0.005,136,0.966,139,1.814,170,0.705,223,1.289,225,2.105,227,0.569,231,0.776,241,0.617,251,0.617,331,1.228,332,1.801,333,1.389,334,1.354,335,1.354,339,1.354,340,1.321,341,1.758,347,1.484,356,1.52,357,1.449,359,1.814,361,2.201,377,1.17,415,3.42,417,1.014,418,1.847,419,1.847,420,1.354,421,2.257,422,1.354,423,1.228,424,1.354,425,1.354,426,1.354,427,1.198,428,1.354,429,1.228,430,1.354,431,1.228,432,1.354,433,1.228,434,1.354,435,1.198,436,1.354,437,1.228,438,1.354,439,1.228,440,1.354,441,1.228,442,1.354,443,1.228,444,1.354,445,1.198,446,1.354,447,1.228,448,1.354,449,1.228,450,1.354,451,1.228,452,1.354,453,1.228,454,1.354,455,1.228,456,1.354,457,1.198,458,1.354,459,1.17,460,1.354,461,1.198,462,1.354,463,1.228,464,1.354,465,1.228,466,1.321,467,1.354,468,1.228,469,1.354,470,1.354,471,1.198,472,1.354,473,1.198,474,1.354,475,1.228,476,1.354,477,1.997,478,1.354,479,1.228,480,1.289,481,1.354,482,1.354,551,1.622,670,4.271,804,3.811,881,4.527,1138,4.564,1218,3.114,1334,4.823,1453,4.527,1454,4.527,1510,6.087,1536,3.924,1538,3.924,1541,3.924,1543,3.578,1555,5.35,1609,7.06,1610,6.842,1755,5.35,1756,5.35,1762,5.35,2064,3.924,2065,6.901,2066,6.065,2067,7.412,2068,7.412,2069,4.449,2070,6.901,2071,4.449,2072,4.449,2073,4.449,2074,4.449,2075,4.449,2076,4.449,2077,4.449,2078,4.449,2079,4.449,2080,4.449,2081,4.449,2082,4.449,2083,4.449,2084,4.449,2085,4.449,2086,6.065,2087,4.449,2088,4.449,2089,6.065,2090,4.449,2091,4.449,2092,4.449,2093,4.449,2094,4.449,2095,4.449,2096,7.756,2097,4.449,2098,4.449,2099,4.449,2100,4.449,2101,4.449,2102,6.065,2103,4.449,2104,4.449,2105,6.065,2106,4.449,2107,4.449,2108,4.449,2109,4.449,2110,6.065,2111,6.065,2112,6.065,2113,7.412,2114,8.338,2115,7.412,2116,7.412,2117,6.065,2118,6.065,2119,6.065]],["title/injectables/TournamentGQL.html",[40,1.128,123,0.316]],["body/injectables/TournamentGQL.html",[0,0.821,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.553,12,0.718,13,0.01,14,1.382,15,0.121,22,0.056,36,1.849,37,0.678,38,1.073,39,0.647,40,1.023,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.181,87,0.647,94,1.589,96,1.589,100,1.589,102,0.712,104,0.712,107,2.055,110,2.064,111,1.898,120,0.005,121,0.004,122,0.003,123,0.623,124,0.712,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.51,131,2.675,132,0.767,133,2.247,134,0.767,135,2.025,136,0.288,138,2.625,139,0.616,140,1.589,141,1.213,142,0.73,143,1.183,144,1.183,145,1.183,146,0.678,147,1.099,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.099,154,1.84,155,1.84,156,2.466,157,1.183,158,1.183,159,1.886,160,1.183,161,1.669,162,0.767,163,2.04,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.183,170,0.812,171,1.183,172,1.183,173,1.505,174,1.669,175,1.183,176,1.75,177,0.767,178,1.669,179,2.134,180,2.134,181,1.886,182,1.183,183,1.669,184,1.183,185,1.213,186,1.213,187,1.669,188,1.477,189,1.886,190,1.669,191,1.698,192,1.183,193,0.767,194,1.669,195,1.933,196,1.154,197,0.647,198,2,199,0.73,200,1.099,201,1.432,202,1.073,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.71,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.183,223,1.154,224,1.468,225,1.96,226,0.748,227,0.904,228,1.468,229,1.183,230,1.774,231,0.783,232,2.223,233,1.183,234,1.183,235,1.868,236,1.671,237,0.631,238,1.183,239,1.183,240,1.183,241,1.073,242,1.154,243,1.183,244,0.73,245,1.154,246,1.398,247,1.183,248,0.73,249,1.689,250,1.364,251,0.553,252,1.127,253,0.712,254,0.767,255,1.208,256,1.432,257,1.84,258,1.432,259,1.127,260,1.432,261,1.154,262,1.432,263,1.432,264,1.432,265,0.73,266,1.921,267,1.876,268,0.712,269,2.442,270,2.471,271,1.505,272,0.712,273,0.767,274,0.767,275,0.712,276,0.767,277,0.767,278,0.662,279,0.767,280,0.767,281,0.678,282,0.767,283,0.767,284,0.712,285,0.767,286,0.767,287,0.712,288,0.767,289,0.767,290,0.712,291,0.767,292,0.712,293,0.767,294,0.767,295,0.712,296,0.767,297,0.767,298,0.712,299,0.712,300,0.767,301,0.767,302,0.712,303,0.767,304,0.767,305,0.712,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.678,314,0.767,315,1.213,316,0.712,317,0.678,318,0.767,319,0.712,320,0.712,321,1.213,322,1.213,323,0.662,324,0.712,325,0.73,326,1.048,327,1.127,328,1.127,329,0.712,330,0.73,2120,2.518]],["title/modules/TournamentModule.html",[553,1.212,2121,3.278]],["body/modules/TournamentModule.html",[3,0.167,4,0.167,5,0.151,13,0.009,15,0.216,22,0.151,44,0.167,54,0.167,120,0.007,121,0.008,122,0.007,225,1.784,417,1.546,477,2.405,553,1.872,555,2.346,556,3.23,557,3.998,558,3.342,559,3.342,560,3.23,566,4.556,567,4.045,568,3.463,569,3.463,572,3.053,573,2.97,575,3.893,576,4.263,737,4.067,1831,5.242,2121,6.834,2122,5.984,2123,5.984,2124,5.984,2125,6.248,2126,6.784,2127,5.984]],["title/modules/TournamentRoutingModule.html",[553,1.212,2125,3.074]],["body/modules/TournamentRoutingModule.html",[3,0.172,4,0.172,5,0.156,13,0.009,15,0.209,19,0.688,22,0.156,44,0.172,54,0.172,120,0.007,121,0.008,122,0.007,255,1.134,477,2.174,550,3.124,555,2.42,557,3.333,572,2.696,573,3.024,593,4.016,594,4.34,595,4.016,597,4.016,598,4.196,2125,5.649,2127,6.174,2128,6.999]],["title/injectables/UpdateTeamContactGQL.html",[123,0.316,298,1.242]],["body/injectables/UpdateTeamContactGQL.html",[0,0.819,3,0.062,4,0.062,5,0.056,7,0.173,8,0.427,9,1.509,11,1.55,12,0.718,13,0.01,14,1.384,15,0.121,22,0.056,36,1.847,37,0.675,38,1.069,39,0.643,40,0.643,44,0.23,46,0.692,47,1.626,48,0.692,54,0.212,57,1.645,62,1.177,87,0.643,94,1.585,96,1.585,100,1.585,102,0.709,104,0.709,107,2.049,110,2.063,111,1.894,120,0.005,121,0.004,122,0.003,123,0.623,124,0.709,125,0.643,126,0.692,127,2.518,128,0.842,129,0.507,130,2.509,131,2.677,132,0.763,133,2.313,134,0.763,135,2.021,136,0.286,138,2.625,139,0.613,140,1.585,141,1.208,142,0.726,143,1.179,144,1.179,145,1.179,146,0.675,147,1.095,148,0.744,149,0.744,150,0.726,151,2.562,152,1.208,153,2.096,154,1.837,155,1.837,156,2.465,157,1.179,158,1.179,159,1.882,160,1.179,161,1.664,162,0.763,163,2.1,164,1.585,165,0.763,166,0.763,167,1.122,168,0.763,169,1.179,170,0.812,171,1.179,172,1.179,173,1.5,174,1.664,175,1.179,176,1.747,177,0.763,178,1.929,179,2.216,180,2.216,181,2.106,182,1.179,183,1.664,184,1.179,185,1.208,186,1.208,187,1.664,188,1.474,189,1.882,190,1.664,191,1.695,192,1.179,193,0.763,194,1.664,195,1.929,196,1.15,197,0.643,198,1.997,199,0.726,200,1.095,201,1.428,202,1.069,203,1.769,204,1.208,205,1.463,206,1.463,207,0.763,208,1.208,209,1.606,210,1.208,211,1.208,212,1.208,213,1.208,214,1.208,215,1.706,216,0.744,217,1.208,218,1.664,219,0.744,220,1.122,221,1.463,222,1.179,223,1.15,224,1.463,225,1.911,226,0.744,227,0.903,228,1.463,229,1.179,230,1.769,231,0.781,232,2.221,233,1.179,234,1.179,235,1.865,236,1.668,237,0.628,238,1.179,239,1.179,240,1.179,241,1.072,242,1.15,243,1.179,244,0.726,245,1.15,246,1.393,247,1.179,248,0.726,249,1.685,250,1.36,251,0.551,252,1.122,253,0.709,254,0.763,255,1.206,256,1.428,257,1.837,258,1.428,259,1.122,260,1.428,261,1.15,262,1.15,263,1.428,264,1.428,265,0.726,266,1.92,267,1.875,268,0.709,269,2.441,270,2.468,271,1.5,272,0.709,273,0.763,274,0.763,275,0.709,276,0.763,277,0.763,278,0.659,279,0.763,280,0.763,281,0.675,282,0.763,283,0.763,284,0.709,285,0.763,286,0.763,287,0.709,288,0.763,289,0.763,290,0.709,291,0.763,292,0.709,293,0.763,294,0.763,295,0.709,296,0.763,297,0.763,298,1.122,299,0.709,300,0.763,301,0.763,302,0.709,303,0.763,304,0.763,305,0.709,306,0.726,307,2.312,308,0.763,309,0.763,310,0.692,311,0.763,312,0.763,313,0.675,314,0.763,315,1.208,316,0.709,317,0.675,318,0.763,319,0.709,320,0.709,321,0.763,322,0.763,323,0.659,324,0.709,325,0.726,326,1.044,327,1.122,328,1.122,329,0.709,330,0.726,2129,2.506]],["title/injectables/UserGQL.html",[123,0.316,323,1.155]],["body/injectables/UserGQL.html",[0,0.822,3,0.062,4,0.062,5,0.056,7,0.174,8,0.429,9,1.514,11,1.554,12,0.718,13,0.01,14,1.381,15,0.121,22,0.056,36,1.849,37,0.679,38,1.074,39,0.647,40,0.647,44,0.23,46,0.695,47,1.629,48,0.695,54,0.212,57,1.649,62,1.182,87,0.647,94,1.589,96,1.589,100,1.589,102,0.713,104,0.713,107,2.055,110,2.064,111,1.895,120,0.005,121,0.004,122,0.003,123,0.623,124,0.713,125,0.647,126,0.695,127,2.519,128,0.845,129,0.509,130,2.511,131,2.675,132,0.767,133,2.248,134,0.767,135,2.025,136,0.288,138,2.625,139,0.617,140,1.589,141,1.213,142,0.73,143,1.184,144,1.184,145,1.184,146,0.679,147,1.1,148,0.748,149,0.748,150,0.73,151,2.563,152,1.213,153,2.1,154,1.841,155,1.841,156,2.466,157,1.184,158,1.184,159,1.887,160,1.184,161,1.669,162,0.767,163,2.041,164,1.589,165,0.767,166,0.767,167,1.127,168,0.767,169,1.184,170,0.812,171,1.184,172,1.184,173,1.505,174,1.669,175,1.184,176,1.751,177,0.767,178,1.669,179,2.135,180,2.135,181,1.887,182,1.184,183,1.669,184,1.184,185,1.213,186,1.213,187,1.669,188,1.478,189,1.887,190,1.669,191,1.698,192,1.184,193,0.767,194,1.669,195,1.933,196,1.155,197,0.647,198,2,199,0.73,200,1.1,201,1.433,202,1.074,203,1.774,204,1.213,205,1.468,206,1.468,207,0.767,208,1.213,209,1.61,210,1.213,211,1.213,212,1.213,213,1.213,214,1.213,215,1.711,216,0.748,217,1.213,218,1.669,219,0.748,220,1.127,221,1.468,222,1.184,223,1.155,224,1.468,225,1.914,226,0.748,227,0.954,228,1.669,229,1.184,230,1.774,231,0.783,232,2.223,233,1.184,234,1.184,235,1.869,236,1.671,237,0.632,238,1.184,239,1.184,240,1.184,241,1.073,242,1.155,243,1.184,244,0.73,245,1.155,246,1.398,247,1.184,248,0.73,249,1.69,250,1.365,251,0.553,252,1.127,253,0.713,254,0.767,255,1.208,256,1.433,257,1.841,258,1.433,259,1.127,260,1.433,261,1.155,262,1.155,263,1.629,264,1.433,265,0.73,266,1.922,267,1.876,268,0.713,269,2.443,270,2.471,271,1.505,272,0.713,273,0.767,274,0.767,275,0.713,276,0.767,277,0.767,278,0.663,279,0.767,280,0.767,281,0.679,282,0.767,283,0.767,284,0.713,285,0.767,286,0.767,287,0.713,288,0.767,289,0.767,290,0.713,291,0.767,292,0.713,293,0.767,294,0.767,295,0.713,296,0.767,297,0.767,298,0.713,299,0.713,300,0.767,301,0.767,302,0.713,303,0.767,304,0.767,305,0.713,306,0.73,307,2.315,308,0.767,309,0.767,310,0.695,311,0.767,312,0.767,313,0.679,314,0.767,315,1.213,316,0.713,317,0.679,318,0.767,319,0.713,320,0.713,321,0.767,322,0.767,323,1.048,324,0.713,325,0.73,326,1.048,327,1.127,328,1.127,329,0.713,330,0.73,2130,2.52]],["title/components/UserListComponent.html",[19,0.431,479,1.212]],["body/components/UserListComponent.html",[3,0.139,4,0.139,5,0.127,7,0.392,8,0.766,12,0.551,13,0.01,15,0.2,19,0.763,20,2.093,22,0.127,34,3.168,35,2.186,41,2.126,42,3.078,43,2.456,44,0.139,49,2.513,50,2.395,52,1.916,54,0.139,55,1.492,56,1.783,64,1.404,65,1.685,72,2.186,77,2.194,120,0.006,121,0.007,122,0.006,136,0.888,170,0.739,176,1.826,179,1.963,180,1.963,227,1.134,230,2.251,231,0.726,241,0.788,251,0.788,324,2.42,331,1.566,332,2.113,333,1.771,334,1.728,335,1.728,339,1.728,340,1.685,341,2.061,347,1.741,356,1.422,357,1.356,359,1.389,361,1.685,377,1.492,413,4.081,417,1.293,418,2.166,419,2.166,420,1.728,421,2.48,422,1.728,423,1.566,424,1.728,425,1.728,426,1.728,427,1.529,428,1.728,429,1.566,430,1.728,431,1.566,432,1.728,433,1.566,434,1.728,435,1.529,436,1.728,437,1.566,438,1.728,439,1.566,440,1.728,441,1.566,442,1.728,443,1.566,444,1.728,445,1.529,446,1.728,447,1.566,448,1.728,449,1.566,450,1.728,451,1.566,452,1.728,453,1.566,454,1.728,455,1.566,456,1.728,457,1.529,458,1.728,459,1.492,460,1.728,461,1.529,462,1.728,463,1.566,464,1.728,465,1.566,466,1.685,467,1.728,468,1.566,469,1.728,470,1.728,471,1.529,472,1.728,473,1.529,474,1.728,475,1.566,476,1.728,477,1.529,478,1.728,479,2.248,480,2.251,481,1.728,482,1.728,505,5.309,588,6.552,848,4.979,1138,3.753,1334,3.917,2131,7.184,2132,5.006,2133,7.769,2134,7.113,2135,5.675,2136,7.113,2137,5.675,2138,5.675,2139,5.675,2140,5.675,2141,5.675,2142,5.675,2143,7.113,2144,7.113,2145,7.113,2146,7.113,2147,7.113]],["title/coverage.html",[2148,4.836]],["body/coverage.html",[0,1.45,1,3.31,5,0.106,6,5.313,12,0.366,13,0.01,19,0.905,23,2.414,29,1.986,37,1.274,38,1.274,39,1.214,40,1.214,45,3.31,55,1.244,59,1.772,120,0.007,121,0.006,122,0.005,123,0.666,124,1.337,126,2.564,140,1.337,256,1.37,257,1.337,258,1.37,259,1.337,260,1.37,261,1.37,262,1.37,263,1.37,264,1.37,268,1.337,272,1.337,275,1.337,278,1.244,281,1.274,284,1.337,287,1.337,290,1.337,292,1.337,295,1.337,298,1.337,299,1.337,302,1.337,305,1.337,306,1.37,310,1.305,313,1.274,316,1.337,317,1.274,319,1.337,320,1.337,323,1.244,324,1.337,326,1.662,331,1.305,336,4.171,337,3.804,338,4.171,354,1.986,377,1.244,423,1.305,427,1.274,429,1.305,431,1.305,433,1.305,435,1.274,437,1.305,439,1.305,441,1.305,443,1.305,445,1.274,447,1.305,449,1.305,451,1.305,453,1.305,455,1.305,457,1.274,459,1.244,461,1.274,463,1.305,465,1.305,468,1.305,471,1.274,473,1.274,475,1.305,477,1.274,479,1.305,483,4.171,499,3.529,535,4.171,540,5.084,541,3.31,543,4.171,583,4.984,588,3.804,603,4.171,611,3.128,624,5.672,626,3.529,670,5.193,681,4.171,702,3.529,717,3.31,718,3.804,744,5.575,749,3.804,757,3.529,763,3.529,776,4.171,778,4.171,796,5.313,825,3.31,827,2.972,832,3.128,888,4.171,908,4.171,917,4.171,918,3.804,919,4.171,933,4.171,953,4.171,964,4.171,984,2.835,985,2.604,1082,4.171,1105,4.171,1126,4.171,1154,4.717,1176,3.804,1200,3.804,1201,4.171,1205,3.31,1230,4.171,1256,3.31,1257,5.313,1258,5.313,1262,3.31,1339,3.529,1340,5.084,1346,4.984,1353,4.171,1383,4.171,1392,2.835,1501,4.171,1560,4.171,1566,4.171,1657,4.171,1694,4.171,1802,4.171,1836,4.171,1844,4.171,1856,4.171,1857,4.171,1872,4.171,1904,4.171,1953,4.171,1993,4.171,2016,4.171,2040,4.171,2056,4.171,2064,4.171,2131,4.171,2132,4.171,2148,3.804,2149,4.171,2150,4.729,2151,4.729,2152,9.243,2153,8.723,2154,9.019,2155,9.068,2156,7.92,2157,7.6,2158,7.12,2159,8.455,2160,7.12,2161,4.729,2162,7.12,2163,4.729,2164,4.729,2165,7.12,2166,4.729,2167,6.321,2168,4.729,2169,4.171,2170,4.171,2171,4.171,2172,4.171,2173,5.575,2174,4.171,2175,4.729]],["title/dependencies.html",[556,2.518,2176,3.659]],["body/dependencies.html",[13,0.01,18,2.175,22,0.137,26,3.672,27,3.672,28,3.245,32,3.227,33,2.651,35,2.872,120,0.006,121,0.008,122,0.006,232,1.65,249,2.436,250,2.219,252,2.538,340,1.819,375,3.127,379,4.572,550,2.734,556,2.917,558,3.018,720,6.578,721,5.998,727,5.404,728,5.404,737,3.672,827,3.849,845,4.572,846,5.566,1159,7.091,1160,5.404,1162,5.404,1163,5.404,1169,5.998,1174,4.928,1175,4.928,1218,4.288,1265,4.572,1786,5.404,2148,4.928,2177,6.126,2178,8.974,2179,6.126,2180,7.457,2181,6.126,2182,7.457,2183,6.126,2184,6.126,2185,6.126,2186,6.126,2187,6.126,2188,6.126,2189,6.126,2190,6.126,2191,6.126,2192,6.126,2193,6.126,2194,6.126,2195,7.457,2196,6.126,2197,7.457,2198,7.457,2199,7.457,2200,6.126,2201,6.126,2202,6.126,2203,6.126,2204,6.126,2205,6.126,2206,6.126,2207,6.126,2208,6.126,2209,6.126,2210,6.126,2211,6.126,2212,6.126,2213,6.126,2214,6.126,2215,6.126,2216,8.909,2217,8.827,2218,6.126,2219,6.126,2220,8.366,2221,6.126,2222,6.126,2223,6.126,2224,6.126,2225,6.126,2226,6.126,2227,6.126,2228,6.126,2229,6.126,2230,6.126,2231,6.126,2232,6.126,2233,6.126,2234,6.126,2235,6.126,2236,6.126,2237,6.126,2238,6.126,2239,6.126,2240,6.126,2241,6.126,2242,6.126,2243,6.126,2244,6.126,2245,6.126,2246,6.126,2247,6.126,2248,6.126,2249,6.126,2250,6.126,2251,6.126]],["title/miscellaneous/enumerations.html",[2252,2.193,2253,4.664]],["body/miscellaneous/enumerations.html",[7,0.491,13,0.009,120,0.007,121,0.008,122,0.007,126,1.961,129,1.803,142,2.359,143,2.418,144,2.418,145,2.418,146,2.193,147,2.247,148,2.11,149,2.11,2252,4.26,2253,6.268,2254,6.548]],["title/miscellaneous/functions.html",[2252,2.193,2255,4.664]],["body/miscellaneous/functions.html",[7,0.493,13,0.009,120,0.007,121,0.008,122,0.007,170,0.776,353,4.489,356,2.043,357,1.948,718,5.73,745,6.284,749,6.557,1154,5.317,1158,6.284,1200,6.557,2252,4.27,2255,6.284,2256,6.284,2257,7.124,2258,7.124,2259,8.152,2260,7.124]],["title/index.html",[7,0.253,2261,3.227,2262,3.227]],["body/index.html",[13,0.008,120,0.007,121,0.008,122,0.007,2149,6.392,2263,7.247,2264,8.232,2265,8.232,2266,7.247]],["title/modules.html",[555,2.079]],["body/modules.html",[13,0.008,120,0.007,121,0.008,122,0.007,554,5.007,555,2.32,564,4.696,565,4.696,566,3.424,698,4.437,708,5.007,714,4.696,715,4.696,716,4.437,721,7.382,939,5.007,943,4.696,1146,4.696,1763,5.007,1767,4.696,1825,5.007,1829,4.696,1985,5.007,1989,4.696,2048,5.007,2052,4.696,2121,5.007,2125,4.696,2267,9.177,2268,9.177,2269,9.349,2270,9.177,2271,9.177]],["title/overview.html",[2272,4.836]],["body/overview.html",[2,2.712,13,0.01,55,1.981,120,0.005,121,0.007,122,0.005,125,1.364,331,2.08,332,1.578,354,3.164,377,1.981,417,1.21,423,2.08,427,2.03,429,2.362,431,2.08,433,2.08,435,2.03,437,2.362,439,2.08,441,2.08,443,2.08,445,2.305,447,2.08,449,2.08,451,2.08,453,2.08,455,2.362,457,2.03,459,1.981,461,2.03,463,2.08,465,2.08,468,2.362,471,2.03,473,2.03,475,2.08,477,2.03,479,2.08,542,4.273,553,1.466,554,6.915,555,1.837,556,2.529,557,2.529,558,2.617,559,2.617,560,2.529,561,4.686,562,4.686,563,4.686,564,5.274,565,6.256,566,4.745,567,3.482,568,2.712,569,2.712,594,2.712,611,4.984,698,5.259,708,6.826,709,4.686,710,4.686,711,4.686,712,4.686,713,4.686,714,5.274,715,5.756,716,5.733,717,5.274,939,6.67,940,4.686,941,4.686,942,4.686,943,5.274,1142,4.686,1143,4.686,1144,4.686,1145,4.686,1146,5.274,1152,4.686,1153,4.686,1431,4.273,1763,6.588,1764,4.686,1765,4.686,1766,4.686,1767,5.274,1825,6.469,1826,4.686,1827,4.686,1828,4.686,1829,5.274,1931,4.686,1932,4.686,1934,4.686,1985,6.469,1986,4.686,1987,4.686,1988,4.686,1989,5.274,2048,6.469,2049,4.686,2050,4.686,2051,4.686,2052,5.274,2121,6.469,2122,4.686,2123,4.686,2124,4.686,2125,5.274,2272,4.273,2273,6.821,2274,5.312,2275,5.312,2276,5.312]],["title/routes.html",[594,3.069]],["body/routes.html",[13,0.008,120,0.007,121,0.008,122,0.007,594,3.718]],["title/todo.html",[2261,3.227,2262,3.227,2277,3.659]],["body/todo.html",[13,0.009,83,4.949,120,0.007,121,0.008,122,0.007,176,1.815,198,1.859,200,1.951,216,2.1,227,0.905,231,0.905,466,2.1,505,6.058,770,6.236,962,6.236,1682,5.687,2272,5.687,2278,9.173,2279,7.07,2280,7.07,2281,7.07,2282,7.07,2283,7.07,2284,7.07,2285,7.07,2286,7.07,2287,7.07,2288,7.07,2289,7.07]],["title/miscellaneous/typealiases.html",[2252,2.193,2290,5.287]],["body/miscellaneous/typealiases.html",[7,0.359,12,0.73,13,0.008,28,3.562,36,1.532,46,1.856,47,2.035,48,1.856,57,1.812,62,1.607,87,1.727,107,2.142,110,2.243,120,0.005,121,0.007,122,0.005,126,1.434,131,2.758,138,2.23,139,1.646,176,2.024,191,1.569,192,1.998,196,1.949,198,2.074,199,1.506,201,1.949,202,1.812,203,1.949,205,1.998,206,1.998,209,1.769,219,1.998,221,1.998,224,1.998,225,1.769,226,1.544,228,1.998,229,1.998,230,1.949,232,2.453,235,1.727,237,1.303,241,1.094,242,1.949,244,1.949,245,1.949,246,1.902,1197,5.02,1345,7.576,1346,3.638,1347,5.41,2252,3.116,2254,7.594,2291,5.197,2292,7.203]],["title/miscellaneous/variables.html",[110,1.264,2252,2.193]],["body/miscellaneous/variables.html",[7,0.388,11,1.278,12,0.679,13,0.01,36,1.944,110,1.341,111,1.858,120,0.008,121,0.007,122,0.006,126,1.548,128,1.941,129,1.85,130,2.5,154,1.587,155,1.587,159,1.626,163,1.813,170,0.735,176,1.813,179,1.949,180,1.949,181,1.626,189,1.626,191,1.648,194,1.666,195,1.666,198,1.857,209,1.475,218,1.666,225,1.857,227,0.904,231,0.989,232,2.382,233,1.666,234,1.666,235,2.083,236,2.083,238,1.666,239,1.666,240,1.666,241,1.184,243,1.666,246,1.587,247,1.666,256,2.351,257,2.364,258,2.24,259,2.186,260,2.351,261,2.046,262,2.046,263,2.046,264,2.046,326,1.857,327,1.997,328,1.997,624,6.54,752,4.467,827,4.438,847,3.605,878,3.711,1154,4.187,1176,5.681,1177,4.949,1346,3.927,2005,6.229,2169,4.949,2170,4.949,2171,4.949,2172,4.949,2173,4.949,2174,6.229,2252,3.363,2254,7.163,2256,4.949,2292,4.949,2293,7.062,2294,5.61,2295,5.61,2296,5.61,2297,5.61,2298,5.61,2299,5.61,2300,8.112,2301,8.112,2302,8.112,2303,8.112,2304,8.112,2305,8.112,2306,8.112,2307,5.61,2308,5.61,2309,5.61,2310,5.61,2311,5.61,2312,5.61,2313,5.61,2314,5.61]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":670,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["0.12.1",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.1",{"_index":2212,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["0.4.13",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":697,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1334,"title":{"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["1.0.17",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":669,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":2276,"title":{},"body":{"overview.html":{}}}],["11.0.1",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["14.1.1",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":685,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":1431,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2210,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2273,"title":{},"body":{"overview.html":{}}}],["25",{"_index":667,"title":{},"body":{"components/AppComponent.html":{}}}],["2500",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["25px",{"_index":665,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":1622,"title":{},"body":{"components/MatchComponent.html":{}}}],["2px",{"_index":691,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.1",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["3.30.19",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2274,"title":{},"body":{"overview.html":{}}}],["30000",{"_index":1819,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["304701",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["36",{"_index":2275,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1530,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.0.0",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["441313",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["5.0.2",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":681,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["50vw",{"_index":504,"title":{},"body":{"components/AddteamComponent.html":{}}}],["6.0.2",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1429,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["7.0.0",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["7.2.9",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":686,"title":{},"body":{"components/AppComponent.html":{}}}],["89ff00",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["8ch",{"_index":1104,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["9px",{"_index":689,"title":{},"body":{"components/AppComponent.html":{}}}],["__schema",{"_index":327,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["__typename",{"_index":156,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["_currentseason",{"_index":1876,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_currentseason(season",{"_index":1895,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_subscriptionclient",{"_index":1202,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["_team",{"_index":219,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["a.email.tolowercase",{"_index":2141,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.length",{"_index":1333,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercase",{"_index":1453,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a.number",{"_index":2091,"title":{},"body":{"components/TournamentComponent.html":{}}}],["a.occurred_at",{"_index":1139,"title":{},"body":{"components/EventsComponent.html":{}}}],["a.state.tolocalelowercase",{"_index":1446,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["a[i",{"_index":1337,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1338,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1653,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["abff00",{"_index":678,"title":{},"body":{"components/AppComponent.html":{}}}],["acc.concat(val",{"_index":1326,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["access_time",{"_index":1612,"title":{},"body":{"components/MatchComponent.html":{}}}],["accessors",{"_index":804,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["accesstoken",{"_index":805,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["activatedroute",{"_index":1806,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":2043,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_component",{"_index":482,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["add",{"_index":340,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["addkickoffdatetopitch",{"_index":1626,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":1278,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatch",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addmatch'},{'name",{"_index":425,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["addnewseason",{"_index":1393,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addnewseason(seasonname",{"_index":1405,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addnewteam",{"_index":487,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamname",{"_index":491,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addteam",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addteam'},{'name",{"_index":424,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["addteam.component.css",{"_index":484,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam.component.html",{"_index":485,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam/addteam.component",{"_index":577,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteam/rename",{"_index":590,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteamcomponent",{"_index":423,"title":{"components/AddteamComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addteamgql",{"_index":1403,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addteamtoseason",{"_index":171,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason($season_id",{"_index":132,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(season_id",{"_index":134,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(teamid",{"_index":1408,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addteamtoseasongql",{"_index":124,"title":{"injectables/AddTeamToSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addtournamentround.component.html",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addtournamentround/addtournamentround.component",{"_index":1533,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcomponent",{"_index":55,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtypename",{"_index":1199,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["addusercomponent",{"_index":331,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adm",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":147,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":428,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["admin.component",{"_index":574,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":536,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":537,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.guard",{"_index":596,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["admincomponent",{"_index":427,"title":{"components/AdminComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":541,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":554,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":564,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplete",{"_index":968,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["afterwarelink.concat(auth).concat(http",{"_index":1198,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["aizasybo4ktasyvs6hxw6pv7njib0k9musx8ym0",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":399,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["alert(`${matchday.id",{"_index":1313,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["aliases",{"_index":2291,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_matchdays",{"_index":1754,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_teams",{"_index":1494,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["allpitches",{"_index":201,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasons",{"_index":221,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasonslist",{"_index":220,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["allseasonslist.allseasons",{"_index":1893,"title":{},"body":{"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{}}}],["allseasonslistgql",{"_index":319,"title":{"injectables/AllSeasonsListGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["allteams",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allteamsgql",{"_index":320,"title":{"injectables/AllTeamsGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentlist",{"_index":223,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["alltournamentlistgql",{"_index":39,"title":{"injectables/AllTournamentListGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentqgl",{"_index":2070,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournaments",{"_index":224,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["alltournamentsqgl",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["allusers",{"_index":230,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allusersgql",{"_index":324,"title":{"injectables/AllUsersGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["aname",{"_index":1450,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["angular",{"_index":250,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/de",{"_index":739,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":375,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":18,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1777,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":1781,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1779,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1783,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1775,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1773,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":550,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"interfaces/Credentials.html":{},"modules/EventsRoutingModule.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":2005,"title":{},"body":{"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["api/graphql",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":249,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["apollo.mutation",{"_index":270,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.query",{"_index":307,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.subscription",{"_index":1350,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["apollo_options",{"_index":1156,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink",{"_index":1171,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollomodule",{"_index":1155,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["app.component",{"_index":725,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":722,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":759,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":429,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodule",{"_index":698,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":708,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":714,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["array",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1553,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["astate",{"_index":1445,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["async",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{}}}],["auth",{"_index":1182,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth.interceptor",{"_index":733,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticateduser",{"_index":228,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationservice",{"_index":354,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authinterceptor",{"_index":717,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":353,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"miscellaneous/functions.html":{}}}],["authservice.accesstoken",{"_index":1184,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice.setaccesstoken",{"_index":1181,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice.user.first_name",{"_index":1822,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":654,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":674,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{}}}],["available",{"_index":2271,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1231,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["b",{"_index":1138,"title":{},"body":{"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["b.email.tolowercase",{"_index":2142,"title":{},"body":{"components/UserListComponent.html":{}}}],["b.name.tolowercase",{"_index":1454,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.state.tolocalelowercase",{"_index":1448,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["background",{"_index":676,"title":{},"body":{"components/AppComponent.html":{}}}],["base64",{"_index":845,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercase",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercase",{"_index":884,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["based",{"_index":1193,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["basic",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":795,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/GraphQLModule.html":{}}}],["behaviorsubject",{"_index":1885,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":1886,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.23",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["betweenmatchdaysoffset",{"_index":1386,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["bname",{"_index":1449,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["body",{"_index":1046,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.label",{"_index":1048,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_latitude",{"_index":1050,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_longitude",{"_index":1051,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["boolean",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["boolean(this.accesstoken",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":558,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":679,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":663,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1469,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["browse",{"_index":2269,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":721,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":723,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":719,"title":{},"body":{"modules/AppModule.html":{}}}],["bstate",{"_index":1447,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.add_user",{"_index":414,"title":{},"body":{"components/AddUserComponent.html":{}}}],["button.back",{"_index":1079,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.cancel",{"_index":1080,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_result",{"_index":1102,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":660,"title":{},"body":{"components/AppComponent.html":{}}}],["button.close",{"_index":916,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["button.create_pitch",{"_index":1073,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.create_season",{"_index":1492,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.create_team",{"_index":506,"title":{},"body":{"components/AddteamComponent.html":{}}}],["button.create_tournament",{"_index":1556,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1618,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1617,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1557,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_time",{"_index":1619,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":653,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":661,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":1077,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.ok",{"_index":907,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.save",{"_index":1081,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/TeamadminComponent.html":{}}}],["button.send_user_mail",{"_index":416,"title":{},"body":{"components/AddUserComponent.html":{}}}],["button.set_day",{"_index":1496,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.set_time",{"_index":532,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":534,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["button.start_season",{"_index":1500,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["c1",{"_index":1884,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c1.id",{"_index":1902,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2",{"_index":1882,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2.id",{"_index":1903,"title":{},"body":{"injectables/SeasonService.html":{}}}],["cache",{"_index":1162,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["calls",{"_index":2004,"title":{},"body":{"injectables/TeamService.html":{}}}],["canactivate",{"_index":544,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":2042,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":962,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"todo.html":{}}}],["canload",{"_index":545,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":1267,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["card",{"_index":1620,"title":{},"body":{"components/MatchComponent.html":{}}}],["case",{"_index":1464,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["catch",{"_index":114,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["cdref",{"_index":986,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changedetectorref",{"_index":987,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":1232,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":1237,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":797,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'name",{"_index":432,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["changepassword(newpassword",{"_index":815,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":889,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":890,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordcomponent",{"_index":431,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordqgl",{"_index":812,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changeuserpassword",{"_index":168,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["changeuserpassword(new_password",{"_index":283,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["checknewpitchname",{"_index":977,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["class",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["client",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["cluster_adminmodule",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":710,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":711,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule",{"_index":940,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declarations",{"_index":941,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_imports",{"_index":942,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1142,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":1143,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":1145,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1144,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1152,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1153,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule",{"_index":1764,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declarations",{"_index":1765,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_imports",{"_index":1766,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule",{"_index":1826,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declarations",{"_index":1827,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_imports",{"_index":1828,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1931,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1932,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1934,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1933,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodule",{"_index":1986,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declarations",{"_index":1987,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":1988,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule",{"_index":2049,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declarations",{"_index":2050,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_imports",{"_index":2051,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":2122,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":2123,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":2124,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codacy",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":2214,"title":{},"body":{"dependencies.html":{}}}],["codegen",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["color",{"_index":677,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":1831,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["component",{"_index":19,"title":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsRoutingModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":422,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["components",{"_index":332,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["components/admin#adminmodule",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":756,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.component",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodule",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":622,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodule",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodule",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/contact",{"_index":1944,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/contact/contact.component",{"_index":1937,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.pitch.component",{"_index":1941,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.result.component",{"_index":1939,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.time.component",{"_index":1940,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/match/match.component",{"_index":1936,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/seasonchooser/seasonchooser.component",{"_index":1938,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/snackbar/snackbar.component",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["components/table#tablemodule",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodule",{"_index":774,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":758,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodule",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["conceded_goals",{"_index":214,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["connect",{"_index":1203,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["console.error('iwas",{"_index":1320,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":401,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamadminComponent.html":{}}}],["console.log('connected",{"_index":1221,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["console.log('connecting",{"_index":1223,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["console.log('error",{"_index":1225,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["console.log(error",{"_index":116,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"interfaces/RoundTeam.html":{}}}],["console.log(match",{"_index":1328,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log(message.data",{"_index":1228,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["console.log(this.data",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["console.log(this.possiblekickoffs",{"_index":1289,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["const",{"_index":255,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"modules/TeamadminRoutingModule.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["constructor(allseasonslistgql",{"_index":1877,"title":{},"body":{"injectables/SeasonService.html":{}}}],["constructor(alltournamentsqgl",{"_index":510,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["constructor(allusersgql",{"_index":2135,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(authservice",{"_index":546,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1946,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1516,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":911,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["constructor(formbuilder",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(i18service",{"_index":2069,"title":{},"body":{"components/TournamentComponent.html":{}}}],["constructor(latesteventsgql",{"_index":1129,"title":{},"body":{"components/EventsComponent.html":{}}}],["constructor(match",{"_index":983,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(pitchesqgl",{"_index":1837,"title":{},"body":{"injectables/PitchService.html":{}}}],["constructor(pitchservice",{"_index":1629,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(private",{"_index":789,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(public",{"_index":1923,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["constructor(redis",{"_index":1204,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["constructor(router",{"_index":809,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(seasonservice",{"_index":1400,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(submitresultgql",{"_index":1660,"title":{},"body":{"injectables/MatchService.html":{}}}],["constructor(teamservice",{"_index":350,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamsql",{"_index":2000,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(translateservice",{"_index":1235,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservice",{"_index":954,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["contact",{"_index":241,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":434,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contact.component.css",{"_index":909,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":910,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":931,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_name",{"_index":926,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.fragment",{"_index":242,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["contact.last_name",{"_index":927,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phone",{"_index":929,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.component",{"_index":1594,"title":{},"body":{"components/MatchComponent.html":{}}}],["contact_mail",{"_index":930,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_phone",{"_index":928,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactcomponent",{"_index":433,"title":{"components/ContactComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactfragment",{"_index":256,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactlist",{"_index":934,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'name",{"_index":436,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contactlist.component",{"_index":945,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":935,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":936,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcomponent",{"_index":435,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodule",{"_index":939,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodule",{"_index":943,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncomponent",{"_index":437,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{},"todo.html":{}}}],["context",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2209,"title":{},"body":{"dependencies.html":{}}}],["core.module",{"_index":1150,"title":{},"body":{"modules/EventsModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.ts",{"_index":700,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverage",{"_index":2148,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["create",{"_index":2006,"title":{},"body":{"injectables/TeamService.html":{}}}],["createapollo",{"_index":1200,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createapollo(httplink",{"_index":2258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["created_at",{"_index":218,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["createform",{"_index":1359,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematchdays",{"_index":1394,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["creatematchdays(startdate",{"_index":1410,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["creatematchesforseason",{"_index":173,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseason(season_id",{"_index":291,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseasongql",{"_index":290,"title":{"injectables/CreateMatchesForSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createnewpitch",{"_index":978,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createnewtournament",{"_index":1511,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(name",{"_index":1518,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createpitchbody",{"_index":1047,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createpitches",{"_index":2283,"title":{},"body":{"todo.html":{}}}],["createround",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundgql",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundnr",{"_index":1505,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseason",{"_index":169,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason($id",{"_index":285,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(id",{"_index":286,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(seasonname",{"_index":1879,"title":{},"body":{"injectables/SeasonService.html":{}}}],["createseasongql",{"_index":284,"title":{"injectables/CreateSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteam",{"_index":177,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam(id",{"_index":297,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament",{"_index":184,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament($id",{"_index":303,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament(id",{"_index":304,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentgql",{"_index":302,"title":{"injectables/CreateTournamentGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createtournamentround",{"_index":185,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentroundgql",{"_index":37,"title":{"injectables/CreateTournamentRoundGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createuser",{"_index":187,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createusergql",{"_index":305,"title":{"injectables/CreateUserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["cred",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cred.token",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["credentials",{"_index":832,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["currentlang",{"_index":1234,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":1873,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchanged",{"_index":1908,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(event",{"_index":1916,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":702,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d",{"_index":1480,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["d').todate",{"_index":1306,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.name",{"_index":1651,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":403,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["data",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["data.allpitches",{"_index":1842,"title":{},"body":{"injectables/PitchService.html":{}}}],["data.allseasons.filter(s",{"_index":1926,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["data.allseasons.sort",{"_index":1444,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["data.allteams.sort((a",{"_index":2008,"title":{},"body":{"injectables/TeamService.html":{}}}],["data.alltournaments",{"_index":1538,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["data.allusers.sort((a",{"_index":2140,"title":{},"body":{"components/UserListComponent.html":{}}}],["data.latestevents.sort((a",{"_index":1137,"title":{},"body":{"components/EventsComponent.html":{}}}],["data.message",{"_index":1950,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.round",{"_index":528,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["data.season",{"_index":1455,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.match_days.find(x",{"_index":1752,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.ranking",{"_index":1966,"title":{},"body":{"components/TableComponent.html":{}}}],["data.season.teams",{"_index":1451,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.teams.find(x",{"_index":1753,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.sort((a",{"_index":1452,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.tournament.rounds",{"_index":2089,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds.sort((a",{"_index":2090,"title":{},"body":{"components/TournamentComponent.html":{}}}],["date",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["date(dp.from",{"_index":1475,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date(list[0].kickofftime).getutchours",{"_index":1308,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminutes",{"_index":1310,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(startdate.value",{"_index":1471,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date.setutchours(new",{"_index":1307,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutcminutes(new",{"_index":1309,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.toisostring",{"_index":1311,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.value",{"_index":1488,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1613,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'medium':'':i18service.currentlang",{"_index":1983,"title":{},"body":{"components/TableComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":1122,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate",{"_index":1654,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1755,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1614,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1623,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'medium\\':\\'\\':i18service.currentlang",{"_index":1984,"title":{},"body":{"components/TableComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":1124,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate",{"_index":1656,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1762,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1624,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["dateperiod",{"_index":140,"title":{"interfaces/DatePeriod.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["dates",{"_index":174,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["datetime",{"_index":28,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeadapter",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["daysoffset",{"_index":1259,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":1240,"title":{},"body":{"injectables/I18Service.html":{}}}],["declarations",{"_index":557,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":519,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"components/SnackbarComponent.html":{}}}],["default",{"_index":128,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":1250,"title":{},"body":{"injectables/I18Service.html":{}}}],["defined",{"_index":136,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["delete",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"interfaces/RoundTeam.html":{},"todo.html":{}}}],["dependencies",{"_index":556,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["description",{"_index":1994,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":486,"title":{},"body":{"components/AddteamComponent.html":{},"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1600,"title":{},"body":{"components/MatchComponent.html":{}}}],["directive",{"_index":420,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["directives",{"_index":481,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["displaypitch",{"_index":979,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":992,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":127,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["document.body.appendchild(tag",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2149,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":150,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["dom",{"_index":334,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["done",{"_index":2289,"title":{},"body":{"todo.html":{}}}],["dp.from",{"_index":1470,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.from.setdate(dp.from.getdate",{"_index":1472,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.to",{"_index":1474,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.to.setdate(dp.to.getdate",{"_index":1476,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["draws",{"_index":211,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["duration",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"components/NewpasswordComponent.html":{}}}],["dynamic",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1650,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftime",{"_index":1649,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1648,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":505,"title":{},"body":{"components/AddteamComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["edit_round",{"_index":527,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":2039,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editmatch.pitch",{"_index":965,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'name",{"_index":440,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":966,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":967,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":1084,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":1085,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.time",{"_index":1106,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'name",{"_index":444,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.time.component.css",{"_index":1107,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":1108,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.component",{"_index":1597,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.result.component",{"_index":1595,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.time.component",{"_index":1596,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatchpitchcomponent",{"_index":439,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":1083,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'name",{"_index":442,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatchresultcomponent",{"_index":441,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecomponent",{"_index":443,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editround",{"_index":1512,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["element",{"_index":419,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["email",{"_index":163,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["emailformcontrol",{"_index":2019,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["en",{"_index":1241,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":325,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["end_date",{"_index":195,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":145,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":2280,"title":{},"body":{"todo.html":{}}}],["englisch",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycomponents",{"_index":571,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enum",{"_index":141,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["enumerations",{"_index":2253,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":624,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googlemapsapikey",{"_index":639,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.graphqlurl",{"_index":1177,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["environment.graphqlwsurl",{"_index":1188,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":1172,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["err",{"_index":886,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":115,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["error('empty",{"_index":2013,"title":{},"body":{"injectables/TeamService.html":{}}}],["errors.enter_valid_email",{"_index":407,"title":{},"body":{"components/AddUserComponent.html":{}}}],["errors.enter_valid_password",{"_index":410,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{}}}],["errors.password_token_invalid",{"_index":1824,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pitch_exist",{"_index":1075,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["errors.username_password_wrong",{"_index":906,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["event",{"_index":191,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event($id",{"_index":308,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["event(id",{"_index":309,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["event.fragment",{"_index":192,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["event.index",{"_index":1463,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["event.occurred_at",{"_index":1140,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.type",{"_index":1141,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.value",{"_index":118,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{}}}],["eventcomponent",{"_index":2284,"title":{},"body":{"todo.html":{}}}],["eventemitter",{"_index":1915,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["eventfragment",{"_index":264,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventgql",{"_index":306,"title":{"injectables/EventGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["events",{"_index":591,"title":{},"body":{"modules/AdminModule.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{}}}],["events'},{'name",{"_index":446,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["events.component",{"_index":1149,"title":{},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{}}}],["events.component.css",{"_index":1127,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1128,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":445,"title":{"components/EventsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsgql",{"_index":1207,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["eventsmodule",{"_index":565,"title":{"modules/EventsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsroutingmodule",{"_index":1146,"title":{"modules/EventsRoutingModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["everything",{"_index":1997,"title":{},"body":{"injectables/TeamService.html":{}}}],["example",{"_index":1999,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":2211,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["exports",{"_index":560,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["extends",{"_index":269,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["f00",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["filter_list",{"_index":1757,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteractive",{"_index":1704,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitches",{"_index":969,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filtermatchdays",{"_index":1698,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatchdays(matchdays",{"_index":1706,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches",{"_index":1699,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches(matches",{"_index":1708,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filterstate",{"_index":1909,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["finale",{"_index":2116,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":2230,"title":{},"body":{"dependencies.html":{}}}],["first_name",{"_index":179,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["first_name_required",{"_index":408,"title":{},"body":{"components/AddUserComponent.html":{}}}],["firstname",{"_index":344,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["flex",{"_index":1761,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["flexlayoutmodule",{"_index":726,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":671,"title":{},"body":{"components/AppComponent.html":{}}}],["forgot_password",{"_index":1382,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuilder",{"_index":988,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":366,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{}}}],["formgroup",{"_index":1007,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodule",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["forward(operation).map(response",{"_index":1178,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["fragment",{"_index":232,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fragmentname",{"_index":1685,"title":{},"body":{"injectables/MatchService.html":{},"components/RenameTeamComponent.html":{}}}],["fragments",{"_index":254,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["fromtooffset",{"_index":1387,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["full",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":2255,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":1559,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1551,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["generator",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["genrounds",{"_index":1513,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["get_currentseason",{"_index":1889,"title":{},"body":{"injectables/SeasonService.html":{}}}],["getaccesstoken",{"_index":836,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentlang",{"_index":1243,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteractive",{"_index":1728,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["gethideplayed",{"_index":1716,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":840,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthenticated",{"_index":838,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":842,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmaindefinition",{"_index":1166,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getmaindefinition(query",{"_index":1195,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getmatchdaylength",{"_index":1646,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getranking",{"_index":1956,"title":{},"body":{"components/TableComponent.html":{}}}],["getround(round[0].match_day_id).end_date",{"_index":2119,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).number",{"_index":2117,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).start_date",{"_index":2118,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getselectedmatchdayid",{"_index":1720,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getselectedteamid",{"_index":1724,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getsubscriptionclient",{"_index":1212,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["getting",{"_index":2261,"title":{"index.html":{},"todo.html":{}},"body":{}}],["gettournamentid",{"_index":2078,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getwinner",{"_index":2067,"title":{},"body":{"components/TournamentComponent.html":{}}}],["googelmapsscript",{"_index":644,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplete",{"_index":1009,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeelement",{"_index":1038,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["googlemapsapikey",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapsjs",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["gql",{"_index":130,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":2270,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":252,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["graphql.module",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule",{"_index":715,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlsubscriptionservice",{"_index":611,"title":{"injectables/GraphqlSubscriptionService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlurl",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlwsurl",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphsubscription",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":673,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":540,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":542,"title":{},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_score",{"_index":155,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team",{"_index":234,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team_id",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["guestscore",{"_index":1676,"title":{},"body":{"injectables/MatchService.html":{}}}],["guestteam",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["halbfinale",{"_index":2115,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerjs",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatches",{"_index":1700,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["headers",{"_index":793,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('authorization",{"_index":1186,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headers.get('authorization",{"_index":1185,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headers.get('x",{"_index":1180,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["height",{"_index":664,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["hi",{"_index":1821,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played_matches",{"_index":1758,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplayed",{"_index":1574,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplayed",{"_index":1701,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideplayed(value",{"_index":1731,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["history",{"_index":2285,"title":{},"body":{"todo.html":{}}}],["home_score",{"_index":154,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team",{"_index":233,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team_id",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["homescore",{"_index":1675,"title":{},"body":{"injectables/MatchService.html":{}}}],["hometeam",{"_index":46,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["html",{"_index":418,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["http",{"_index":1160,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["http://192.168.178.23/api",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http:/192.168.178.23/api/graphql",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":731,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":730,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":788,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":784,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":844,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["httpheaders().set('authorization",{"_index":883,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpinterceptor",{"_index":787,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httplink",{"_index":1158,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["httplinkmodule",{"_index":1157,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httprequest",{"_index":782,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://manager.wildeligabremen.de/api",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://manager.wildeligabremen.de/api/graphql",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2266,"title":{},"body":{"index.html":{}}}],["i18n/de",{"_index":1245,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":1246,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18service",{"_index":29,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactory",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provider",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icons",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":111,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":2278,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["implenet",{"_index":2282,"title":{},"body":{"todo.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":572,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["init",{"_index":1233,"title":{},"body":{"injectables/I18Service.html":{}}}],["inject",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SnackbarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["inject(mat_snack_bar_data",{"_index":1344,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectable",{"_index":123,"title":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":125,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"overview.html":{}}}],["inmemory",{"_index":1163,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":1161,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["input",{"_index":925,"title":{},"body":{"components/ContactPersonComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputs",{"_index":922,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputsize",{"_index":1103,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["inset",{"_index":687,"title":{},"body":{"components/AppComponent.html":{}}}],["int",{"_index":271,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["intercept",{"_index":779,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":781,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":776,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":777,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{},"overview.html":{}}}],["introspection",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["introspectionresultdata",{"_index":326,"title":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipossiblekickoffs",{"_index":1256,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["isadmin",{"_index":807,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isauthenticated",{"_index":806,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isemailvalidorempty",{"_index":2020,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":2023,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isloading",{"_index":1357,"title":{},"body":{"components/LoginComponent.html":{}}}],["ismatchplayed",{"_index":1658,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1664,"title":{},"body":{"injectables/MatchService.html":{}}}],["isnackbardata",{"_index":1339,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnumber",{"_index":1569,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(val",{"_index":1578,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":808,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":798,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":820,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isvalidresult",{"_index":1659,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(score",{"_index":1666,"title":{},"body":{"injectables/MatchService.html":{}}}],["iteamcanplayatdate",{"_index":1262,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["j",{"_index":1335,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jquery",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoffs",{"_index":1293,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(localstorage.getitem('access_token",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.parse(localstorage.getitem('hide_played",{"_index":1730,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["json.parse(localstorage.getitem('selected_season",{"_index":1894,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.stringify(season",{"_index":1897,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.stringify(value",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["karma",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["kickoff",{"_index":159,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["kickoffset",{"_index":1110,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(event",{"_index":1112,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftime",{"_index":1260,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["kind",{"_index":329,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["konnte",{"_index":1316,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["label",{"_index":238,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/RoundTeam.html":{}}}],["language",{"_index":657,"title":{},"body":{"components/AppComponent.html":{}}}],["last_name",{"_index":180,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["last_name_required",{"_index":409,"title":{},"body":{"components/AddUserComponent.html":{}}}],["lastname",{"_index":345,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["latestevent",{"_index":193,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latestevent($start_date",{"_index":311,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventgql",{"_index":310,"title":{"injectables/LatestEventGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["latestevents",{"_index":196,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["latestevents(start_date",{"_index":312,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventsgql",{"_index":1131,"title":{},"body":{"components/EventsComponent.html":{}}}],["launcher",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":1189,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["led",{"_index":662,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":417,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["length",{"_index":1411,"title":{},"body":{"components/ManageseasonComponent.html":{},"modules/MaterialModule.html":{}}}],["libraries=places",{"_index":640,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2263,"title":{},"body":{"index.html":{}}}],["line",{"_index":1786,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1785,"title":{},"body":{"modules/MaterialModule.html":{}}}],["link",{"_index":1159,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["list",{"_index":480,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["list.component",{"_index":589,"title":{},"body":{"modules/AdminModule.html":{}}}],["list.component.css",{"_index":2133,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":2134,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2132,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":2136,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:19",{"_index":2137,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.filter(x",{"_index":1300,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list/user",{"_index":588,"title":{},"body":{"modules/AdminModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list[0",{"_index":1302,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":1312,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":1304,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["literal",{"_index":1345,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"miscellaneous/typealiases.html":{}}}],["load/save",{"_index":1996,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadalltournaments",{"_index":1514,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadchildren",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["loaduser",{"_index":799,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localede",{"_index":738,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage.getitem('lang",{"_index":1251,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.getitem('selected_matchday",{"_index":1736,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.getitem('selected_team",{"_index":1737,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.getitem('selected_tournament",{"_index":2082,"title":{},"body":{"components/TournamentComponent.html":{}}}],["localstorage.setitem('access_token",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localstorage.setitem('hide_played",{"_index":1732,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('lang",{"_index":1254,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.setitem('selected_matchday",{"_index":1735,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_season",{"_index":1896,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage.setitem('selected_team",{"_index":1739,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_tournament",{"_index":2084,"title":{},"body":{"components/TournamentComponent.html":{}}}],["locatematch",{"_index":160,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch($match_id",{"_index":276,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(match_id",{"_index":277,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(matchid",{"_index":1669,"title":{},"body":{"injectables/MatchService.html":{}}}],["locatematchgql",{"_index":275,"title":{"injectables/LocateMatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["locatematchqgl",{"_index":1661,"title":{},"body":{"injectables/MatchService.html":{}}}],["location",{"_index":1850,"title":{},"body":{"components/PitchesComponent.html":{}}}],["location_latitude",{"_index":240,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_longitude",{"_index":239,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_off",{"_index":1066,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":1070,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["login",{"_index":1354,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":448,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["login.component.css",{"_index":1355,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1356,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":800,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["logincomponent",{"_index":447,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":825,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1358,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":801,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["losses",{"_index":212,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["mail",{"_index":2025,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["manager",{"_index":2264,"title":{},"body":{"index.html":{}}}],["manageseason",{"_index":1271,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'name",{"_index":450,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageseason.component.css",{"_index":1384,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseason.component.html",{"_index":1385,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseason/manageseason.component",{"_index":578,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":582,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasonchanged",{"_index":1395,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseasonchanged(event",{"_index":1415,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseasoncomponent",{"_index":449,"title":{"components/ManageseasonComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageseasonid",{"_index":1388,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["managetournament",{"_index":1502,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'name",{"_index":452,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managetournament.component.css",{"_index":1503,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1504,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.component",{"_index":581,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.component",{"_index":580,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcomponent",{"_index":451,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentid",{"_index":1506,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentroundcount",{"_index":1507,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentrounds",{"_index":1508,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageusers",{"_index":1561,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'name",{"_index":454,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageusers.component.css",{"_index":1562,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1563,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/add",{"_index":585,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/manageusers.component",{"_index":579,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/user",{"_index":587,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscomponent",{"_index":453,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["map(({data",{"_index":1841,"title":{},"body":{"injectables/PitchService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{}}}],["map(value",{"_index":1023,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(x",{"_index":1027,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["margin",{"_index":668,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["mat_snack_bar_data",{"_index":1341,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":1790,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1776,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":231,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["match'},{'name",{"_index":456,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["match.component.css",{"_index":1567,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1568,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.fragment",{"_index":237,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["match.guest_score",{"_index":1609,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":2101,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.id).canplay",{"_index":1301,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team.name",{"_index":1065,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":2106,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_score",{"_index":1610,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":2100,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.id).canplay",{"_index":1299,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team.name",{"_index":1064,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":2108,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":1121,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":1303,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.id",{"_index":1330,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":1069,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1655,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match:${matchid",{"_index":1686,"title":{},"body":{"injectables/MatchService.html":{}}}],["match_days",{"_index":243,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["match_id",{"_index":153,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchcomponent",{"_index":455,"title":{"components/MatchComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchday",{"_index":236,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["matchday.end_date",{"_index":1468,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.fragment",{"_index":245,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchday.from",{"_index":1497,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchday.matches.foreach",{"_index":1294,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.number",{"_index":1499,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_date",{"_index":1467,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.to",{"_index":1498,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchdayfragment",{"_index":260,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchdaylength",{"_index":1275,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdays",{"_index":244,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchdays.filter(x",{"_index":1744,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcher",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":209,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches.filter(x",{"_index":1747,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matches.foreach",{"_index":1327,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchesinseason",{"_index":1389,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchesqgl",{"_index":1697,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchesql",{"_index":1401,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchfragment",{"_index":259,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchid",{"_index":1671,"title":{},"body":{"injectables/MatchService.html":{}}}],["matching",{"_index":121,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchkickoff",{"_index":1109,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"injectables/MatchService.html":{}}}],["matchkickoff.toisostring",{"_index":1690,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchplan",{"_index":197,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan'},{'name",{"_index":458,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["matchplan($id",{"_index":314,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan.component",{"_index":1769,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1695,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1696,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.season",{"_index":1272,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchplancomponent",{"_index":457,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplangql",{"_index":313,"title":{"injectables/MatchPlanGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchplanmodule",{"_index":1763,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanqgl",{"_index":1662,"title":{},"body":{"injectables/MatchService.html":{},"components/MatchplanComponent.html":{}}}],["matchplanroutingmodule",{"_index":1767,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchschedulingcomponent",{"_index":459,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservice",{"_index":985,"title":{"injectables/MatchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"coverage.html":{}}}],["matchviewmodel",{"_index":2104,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matdatepickermodule",{"_index":1794,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":489,"title":{},"body":{"components/AddteamComponent.html":{},"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["matdialogmodule",{"_index":1787,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["matdividermodule",{"_index":1780,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["material.module",{"_index":729,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodule",{"_index":716,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1549,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1336,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodule",{"_index":1778,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1789,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1793,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1792,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":1795,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":1798,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1801,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectchange",{"_index":363,"title":{},"body":{"components/AddUserComponent.html":{},"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodule",{"_index":1782,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":1774,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1799,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1800,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":352,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["matsnackbarmodule",{"_index":1797,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":1788,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabchangeevent",{"_index":1421,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["mattabsmodule",{"_index":1791,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1772,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1796,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maybe",{"_index":138,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["memberof",{"_index":2011,"title":{},"body":{"injectables/TeamService.html":{}}}],["menu.admin",{"_index":652,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contacts",{"_index":650,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":648,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.table",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":651,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tournament",{"_index":649,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":396,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{}}}],["message.data",{"_index":1227,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["metadata",{"_index":339,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["methods",{"_index":347,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["minwidth",{"_index":503,"title":{},"body":{"components/AddteamComponent.html":{}}}],["miscellaneous",{"_index":2252,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":553,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":555,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1265,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentjs",{"_index":1264,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":1305,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["mt.number",{"_index":1558,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["multi",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["mutation",{"_index":131,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":170,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":151,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["nbsp",{"_index":1756,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1611,"title":{},"body":{"components/MatchComponent.html":{}}}],["network",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{}}}],["new",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["new_kickoff_time",{"_index":1123,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_name",{"_index":183,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["new_password",{"_index":167,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["new_pitch",{"_index":1071,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":1078,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_label",{"_index":1074,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newelement",{"_index":1279,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchdays",{"_index":1390,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["newmatchpitch",{"_index":970,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.value.label",{"_index":1072,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newname",{"_index":1864,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["newpassword",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'name",{"_index":462,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["newpassword.component",{"_index":1832,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1803,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1804,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcomponent",{"_index":461,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodule",{"_index":1825,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodule",{"_index":1829,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":971,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchformcontrol",{"_index":972,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchlabelexist",{"_index":973,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplace",{"_index":1020,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplaceformgroup",{"_index":974,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newroundplandatefrom",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newroundplandateto",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newwinner(match",{"_index":2103,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":783,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["next.handle(req",{"_index":791,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req.clone",{"_index":792,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":573,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchanges",{"_index":1277,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1317,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":932,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":1067,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1615,"title":{},"body":{"components/MatchComponent.html":{}}}],["no_tournament_rounds_yet",{"_index":2110,"title":{},"body":{"components/TournamentComponent.html":{}}}],["nswag",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":139,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":34,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["occurred_at",{"_index":247,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["occurredat",{"_index":1348,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["offset",{"_index":1281,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old",{"_index":2287,"title":{},"body":{"todo.html":{}}}],["old_kickoff_time",{"_index":1120,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":1068,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldmatchdays",{"_index":1412,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["oldpassword",{"_index":816,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":891,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchanges",{"_index":1263,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":348,"title":{},"body":{"components/AddUserComponent.html":{}}}],["onchangeteamselect(event",{"_index":362,"title":{},"body":{"components/AddUserComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["onlangselect",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["onpitchselect",{"_index":980,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":996,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclicked",{"_index":981,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["onshowcreatenewpitch",{"_index":982,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["ontournamentselected",{"_index":1515,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openchangepassworddialog",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmodal",{"_index":1570,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog",{"_index":1571,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog(match",{"_index":1582,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1572,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog(match",{"_index":1584,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1573,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog(match",{"_index":1586,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["openrenameteamdialog",{"_index":488,"title":{},"body":{"components/AddteamComponent.html":{}}}],["openrenameteamdialog(team",{"_index":495,"title":{},"body":{"components/AddteamComponent.html":{}}}],["operation",{"_index":1194,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operation.getcontext",{"_index":1179,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operationdefinition",{"_index":1196,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["optional",{"_index":357,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":569,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1922,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["outputs",{"_index":1910,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2272,"title":{"overview.html":{}},"body":{"overview.html":{},"todo.html":{}}}],["owldatetimeintl",{"_index":701,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodule",{"_index":1942,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodule",{"_index":1943,"title":{},"body":{"modules/SharedModule.html":{}}}],["ownservice",{"_index":2259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ownservice.subscriptionclient",{"_index":1187,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["p.label",{"_index":1059,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["package",{"_index":2176,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":398,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["param",{"_index":2010,"title":{},"body":{"injectables/TeamService.html":{}}}],["parameters",{"_index":356,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1813,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["params['token",{"_index":1814,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["passt",{"_index":1321,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":188,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["password_forgot_text",{"_index":1823,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_required",{"_index":1381,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordchange",{"_index":166,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchange($new_password",{"_index":282,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchangegql",{"_index":281,"title":{"injectables/PasswordChangeGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["passwordforgot",{"_index":1360,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1366,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordreset",{"_index":162,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordreset($email",{"_index":279,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordresetgql",{"_index":278,"title":{"injectables/PasswordResetGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["path",{"_index":597,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":761,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1349,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["penalties",{"_index":206,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["perm_contact_calendar",{"_index":1616,"title":{},"body":{"components/MatchComponent.html":{}}}],["person",{"_index":656,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'name",{"_index":438,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["person.component",{"_index":1945,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":920,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":921,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts",{"_index":919,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":923,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":924,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":918,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":181,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pitch",{"_index":235,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pitch.fragment",{"_index":202,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["pitch.label",{"_index":1032,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["pitch_contact",{"_index":1851,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":161,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["pitch_required",{"_index":1076,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitches",{"_index":200,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/ContactlistModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{}}}],["pitches'},{'name",{"_index":464,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["pitches.component.css",{"_index":1845,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":1846,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitchescomponent",{"_index":463,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchesgql",{"_index":316,"title":{"injectables/PitchesGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["pitchesqgl",{"_index":1839,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitchexist",{"_index":1061,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchfragment",{"_index":258,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pitchid",{"_index":1053,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{}}}],["pitchid.id",{"_index":1055,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchservice",{"_index":984,"title":{"injectables/PitchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["place",{"_index":1040,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lat",{"_index":1043,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lng",{"_index":1045,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["places",{"_index":975,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["plan_date_from",{"_index":531,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":533,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["points",{"_index":215,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["popper.js",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_goals",{"_index":1980,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draws",{"_index":1977,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.losses",{"_index":1978,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.matches",{"_index":1975,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.number",{"_index":1973,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.points",{"_index":1981,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_goals",{"_index":1979,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.team.name",{"_index":1974,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.wins",{"_index":1976,"title":{},"body":{"components/TableComponent.html":{}}}],["positions",{"_index":205,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["possiblekickoffs",{"_index":1273,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":1296,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possibletypes",{"_index":330,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["preparation",{"_index":143,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["production",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":144,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":819,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["provide",{"_index":706,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["providedin",{"_index":266,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["provider",{"_index":2260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.init",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":559,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["public",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["query",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["queueing",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["radius",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["ranking",{"_index":203,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["ranking($id",{"_index":318,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["ranking.updated_at",{"_index":1982,"title":{},"body":{"components/TableComponent.html":{}}}],["rankinggql",{"_index":317,"title":{"injectables/RankingGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rankingpenalty",{"_index":216,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{}}}],["rankingposition",{"_index":207,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingqgl",{"_index":1206,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"injectables/MatchService.html":{},"components/TableComponent.html":{}}}],["reactiveformsmodule",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["reason",{"_index":217,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["reconnect",{"_index":1190,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["red",{"_index":693,"title":{},"body":{"components/AppComponent.html":{}}}],["redirectto",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redis",{"_index":1209,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["redisevent",{"_index":1347,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["rediseventgql",{"_index":1205,"title":{"injectables/RedisEventGQL.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{}}}],["refetchqueries",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["registerlocaledata",{"_index":736,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(new",{"_index":2012,"title":{},"body":{"injectables/TeamService.html":{}}}],["related",{"_index":1998,"title":{},"body":{"injectables/TeamService.html":{}}}],["remove",{"_index":1652,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_eye",{"_index":905,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1627,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":1284,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removeteam",{"_index":507,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(tupel",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["removeteamfromseason",{"_index":172,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason($season_id",{"_index":288,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(season_id",{"_index":289,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(teamid",{"_index":1418,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["removeteamfromseasongql",{"_index":287,"title":{"injectables/RemoveTeamFromSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["removeteamgql",{"_index":1402,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["rename",{"_index":466,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["renameteam",{"_index":182,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam($team_id",{"_index":300,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(newname",{"_index":1862,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["renameteam(team_id",{"_index":301,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteamcomponent",{"_index":465,"title":{"components/RenameTeamComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renameteamgql",{"_index":299,"title":{"injectables/RenameTeamGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["req",{"_index":786,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('authorization",{"_index":790,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":794,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["require",{"_index":2174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1379,"title":{},"body":{"components/LoginComponent.html":{}}}],["reschedulematchday",{"_index":2279,"title":{},"body":{"todo.html":{}}}],["reset",{"_index":568,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resetpasswordqgl",{"_index":813,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["resolve",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(result.data.authenticateduser",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["resolve(true",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response",{"_index":885,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":120,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.data.authenticateduser",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["result.data.tournament.rounds",{"_index":1544,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.length",{"_index":1546,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["results",{"_index":122,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":551,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["returns",{"_index":359,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["rgba(0",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":672,"title":{},"body":{"components/AppComponent.html":{}}}],["role",{"_index":189,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":267,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["root'},{'name",{"_index":430,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["round.number",{"_index":2114,"title":{},"body":{"components/TournamentComponent.html":{}}}],["rounds",{"_index":246,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roundteam",{"_index":45,"title":{"interfaces/RoundTeam.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["roundteams",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["router",{"_index":810,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["routermodule",{"_index":595,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":598,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":775,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2044,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routes",{"_index":594,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":575,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":593,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxjs",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["s.state",{"_index":1927,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["save",{"_index":959,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{}}}],["savecontact",{"_index":2021,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":2027,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematches",{"_index":1322,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematch",{"_index":158,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch($match_id",{"_index":273,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(match_id",{"_index":274,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(matchid",{"_index":1672,"title":{},"body":{"injectables/MatchService.html":{}}}],["schedulematches",{"_index":1288,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchgql",{"_index":272,"title":{"injectables/ScheduleMatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["scheduling",{"_index":1268,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling'},{'name",{"_index":460,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["scheduling.component",{"_index":584,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":1270,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":1269,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts",{"_index":1258,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:116",{"_index":1637,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:131",{"_index":1639,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:31",{"_index":1631,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1644,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1640,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1642,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1645,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1647,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1630,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1643,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1641,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:48",{"_index":1635,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:60",{"_index":1634,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1633,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1632,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:80",{"_index":1636,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:84",{"_index":1638,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":583,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1668,"title":{},"body":{"injectables/MatchService.html":{}}}],["scored_goals",{"_index":213,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["screen",{"_index":1599,"title":{},"body":{"components/MatchComponent.html":{}}}],["season",{"_index":198,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["season(id",{"_index":315,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["season.fragment",{"_index":199,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["season.match_days",{"_index":1465,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season.match_days.map((matchday",{"_index":1466,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season.name",{"_index":1490,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["season.service",{"_index":1678,"title":{},"body":{"injectables/MatchService.html":{}}}],["season.state",{"_index":1491,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season_id",{"_index":135,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonchanged",{"_index":1911,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser",{"_index":1905,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'name",{"_index":469,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["seasonchooser.component.css",{"_index":1906,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":1907,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoosercomponent",{"_index":468,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompare",{"_index":1875,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":1881,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonfragment",{"_index":261,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonlist",{"_index":1391,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["seasonname",{"_index":1407,"title":{},"body":{"components/ManageseasonComponent.html":{},"injectables/SeasonService.html":{}}}],["seasons",{"_index":2288,"title":{},"body":{"todo.html":{}}}],["seasonservice",{"_index":1392,"title":{"injectables/SeasonService.html":{}},"body":{"components/ManageseasonComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonsqgl",{"_index":1874,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonstate",{"_index":142,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["seasonstate.progress",{"_index":1913,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["selectedmatchdayid",{"_index":1702,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedmatchdayid(value",{"_index":1734,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedtabchanged",{"_index":1396,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["selectedtabchanged(event",{"_index":1420,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["selectedteamid",{"_index":1703,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid(value",{"_index":1738,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selector",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["sendmatchdays",{"_index":1397,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["sendpasswordmail",{"_index":802,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sendpasswordmail(email",{"_index":829,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["sendpasswordresetmail",{"_index":165,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["sendpasswordresetmail(email",{"_index":280,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["sendusermail",{"_index":349,"title":{},"body":{"components/AddUserComponent.html":{}}}],["server",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["serverurl",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":1995,"title":{},"body":{"injectables/TeamService.html":{}}}],["services",{"_index":265,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["services/authentication.service",{"_index":376,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/i18.service",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.service",{"_index":1016,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["services/pitch.service",{"_index":1015,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.service",{"_index":1440,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.service",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["set",{"_index":1218,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["set('authorization",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["set_currentseason(season",{"_index":1891,"title":{},"body":{"injectables/SeasonService.html":{}}}],["setaccesstoken",{"_index":803,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setaccesstoken(value",{"_index":831,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["setcontext",{"_index":1164,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":1183,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["sethideplayed(value",{"_index":1718,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setmatchdayfromdate",{"_index":1398,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdayfromdate(index",{"_index":1424,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdaytodate",{"_index":1399,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdaytodate(index",{"_index":1426,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setplandatefrom",{"_index":508,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(event",{"_index":117,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setplandateto",{"_index":509,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(event",{"_index":119,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setselectedmatchdayid(value",{"_index":1722,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setselectedteamid(value",{"_index":1726,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setsubscriptionclient(value",{"_index":1214,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["settournamentid(t",{"_index":2080,"title":{},"body":{"components/TournamentComponent.html":{}}}],["settournamentround",{"_index":186,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["shadow",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["shared.module",{"_index":576,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["shared/snackbar/snackbar.component",{"_index":378,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["sharedmodule",{"_index":566,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":2286,"title":{},"body":{"todo.html":{}}}],["showcreatenewpitch",{"_index":976,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["shuffle",{"_index":1628,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1332,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":351,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{}}}],["snackbar'},{'name",{"_index":470,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["snackbar.component.css",{"_index":1343,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1342,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.component",{"_index":1093,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{}}}],["snackbarcomponent",{"_index":377,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort_index",{"_index":208,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["spacer",{"_index":1760,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["spec\\.ts",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":1315,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":1314,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["split",{"_index":1170,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/.../app.module.ts",{"_index":2257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.app.local.ts",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.ts",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.module.ts",{"_index":2256,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":2254,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphqlsubs.ts",{"_index":2292,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/graphql",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["src/api/graphql.ts",{"_index":126,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphql.ts:1017",{"_index":1125,"title":{},"body":{"injectables/EventGQL.html":{}}}],["src/api/graphql.ts:1034",{"_index":1351,"title":{},"body":{"injectables/LatestEventGQL.html":{}}}],["src/api/graphql.ts:1051",{"_index":1625,"title":{},"body":{"injectables/MatchPlanGQL.html":{}}}],["src/api/graphql.ts:1065",{"_index":1852,"title":{},"body":{"injectables/PitchesGQL.html":{}}}],["src/api/graphql.ts:1079",{"_index":1853,"title":{},"body":{"injectables/RankingGQL.html":{}}}],["src/api/graphql.ts:1121",{"_index":599,"title":{},"body":{"injectables/AllSeasonsListGQL.html":{}}}],["src/api/graphql.ts:1138",{"_index":600,"title":{},"body":{"injectables/AllTeamsGQL.html":{}}}],["src/api/graphql.ts:1155",{"_index":601,"title":{},"body":{"injectables/AllTournamentListGQL.html":{}}}],["src/api/graphql.ts:1171",{"_index":2120,"title":{},"body":{"injectables/TournamentGQL.html":{}}}],["src/api/graphql.ts:1185",{"_index":2130,"title":{},"body":{"injectables/UserGQL.html":{}}}],["src/api/graphql.ts:1202",{"_index":602,"title":{},"body":{"injectables/AllUsersGQL.html":{}}}],["src/api/graphql.ts:766",{"_index":1952,"title":{},"body":{"injectables/SubmitResultGQL.html":{}}}],["src/api/graphql.ts:787",{"_index":1871,"title":{},"body":{"injectables/ScheduleMatchGQL.html":{}}}],["src/api/graphql.ts:800",{"_index":1352,"title":{},"body":{"injectables/LocateMatchGQL.html":{}}}],["src/api/graphql.ts:813",{"_index":1835,"title":{},"body":{"injectables/PasswordResetGQL.html":{}}}],["src/api/graphql.ts:826",{"_index":1834,"title":{},"body":{"injectables/PasswordChangeGQL.html":{}}}],["src/api/graphql.ts:839",{"_index":949,"title":{},"body":{"injectables/CreateSeasonGQL.html":{}}}],["src/api/graphql.ts:852",{"_index":137,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{}}}],["src/api/graphql.ts:865",{"_index":1855,"title":{},"body":{"injectables/RemoveTeamFromSeasonGQL.html":{}}}],["src/api/graphql.ts:878",{"_index":948,"title":{},"body":{"injectables/CreateMatchesForSeasonGQL.html":{}}}],["src/api/graphql.ts:894",{"_index":1951,"title":{},"body":{"injectables/StartSeasonGQL.html":{}}}],["src/api/graphql.ts:904",{"_index":2063,"title":{},"body":{"injectables/TeamsGQL.html":{}}}],["src/api/graphql.ts:917",{"_index":2129,"title":{},"body":{"injectables/UpdateTeamContactGQL.html":{}}}],["src/api/graphql.ts:942",{"_index":1870,"title":{},"body":{"injectables/RenameTeamGQL.html":{}}}],["src/api/graphql.ts:955",{"_index":950,"title":{},"body":{"injectables/CreateTournamentGQL.html":{}}}],["src/api/graphql.ts:968",{"_index":951,"title":{},"body":{"injectables/CreateTournamentRoundGQL.html":{}}}],["src/api/graphql.ts:991",{"_index":952,"title":{},"body":{"injectables/CreateUserGQL.html":{}}}],["src/api/graphqlsubs",{"_index":1216,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["src/api/graphqlsubs.ts",{"_index":1346,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphqlsubs.ts:52",{"_index":1854,"title":{},"body":{"injectables/RedisEventGQL.html":{}}}],["src/app/app",{"_index":699,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["src/app/app.component.ts",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":612,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":614,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.interceptor.ts",{"_index":778,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth.interceptor.ts:12",{"_index":785,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:8",{"_index":780,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts",{"_index":483,"title":{},"body":{"components/AddteamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:12",{"_index":490,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:15",{"_index":498,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:16",{"_index":497,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:21",{"_index":494,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:24",{"_index":492,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:32",{"_index":496,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/rename",{"_index":1856,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin",{"_index":592,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":535,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":539,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":538,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.ts",{"_index":543,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":548,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":549,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":547,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.ts",{"_index":570,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/events/events",{"_index":1151,"title":{},"body":{"modules/EventsRoutingModule.html":{}}}],["src/app/components/admin/events/events.component.ts",{"_index":1126,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/events/events.component.ts:15",{"_index":1130,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:19",{"_index":1133,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:22",{"_index":1132,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.module.ts",{"_index":1147,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts",{"_index":1383,"title":{},"body":{"components/ManageseasonComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:119",{"_index":1419,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:142",{"_index":1422,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:152",{"_index":1413,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:167",{"_index":1423,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:201",{"_index":1428,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:23",{"_index":1435,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:232",{"_index":1425,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:239",{"_index":1427,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:25",{"_index":1436,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:26",{"_index":1432,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:27",{"_index":1430,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:29",{"_index":1437,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:30",{"_index":1434,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:31",{"_index":1404,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:34",{"_index":1438,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:35",{"_index":1439,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:36",{"_index":1433,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:71",{"_index":1417,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:74",{"_index":1406,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:82",{"_index":1416,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:96",{"_index":1409,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":1257,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts",{"_index":6,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25",{"_index":523,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":522,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":518,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:29",{"_index":525,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":524,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":511,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:35",{"_index":521,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":526,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:42",{"_index":520,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:51",{"_index":514,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:55",{"_index":512,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:66",{"_index":515,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:70",{"_index":513,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:95",{"_index":516,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:99",{"_index":517,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts",{"_index":1501,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":1532,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":1527,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":1528,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":1531,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:20",{"_index":1525,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:21",{"_index":1529,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:22",{"_index":1517,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:25",{"_index":1526,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1523,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:35",{"_index":1522,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:41",{"_index":1519,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:53",{"_index":1524,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:72",{"_index":1521,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:83",{"_index":1520,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/add",{"_index":336,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts",{"_index":1560,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:14",{"_index":1565,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:8",{"_index":1564,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/user",{"_index":2131,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts",{"_index":888,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":896,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":897,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":892,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":895,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":894,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":893,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":947,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.ts",{"_index":933,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":938,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":937,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.ts",{"_index":944,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts",{"_index":1844,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":1849,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:15",{"_index":1848,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:9",{"_index":1847,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts",{"_index":2056,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":2061,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:15",{"_index":2060,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:9",{"_index":2059,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1353,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1370,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1369,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":1362,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1368,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1365,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":1363,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":1364,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":1367,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1770,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.ts",{"_index":1694,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:15",{"_index":1713,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:17",{"_index":1717,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1719,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1723,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:28",{"_index":1721,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:32",{"_index":1725,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:36",{"_index":1727,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:40",{"_index":1729,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:42",{"_index":1705,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:45",{"_index":1715,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:46",{"_index":1712,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:47",{"_index":1714,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:50",{"_index":1711,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:56",{"_index":1707,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:62",{"_index":1709,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:70",{"_index":1710,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.ts",{"_index":1768,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1833,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.ts",{"_index":1802,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:16",{"_index":1811,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:17",{"_index":1807,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:20",{"_index":1810,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:31",{"_index":1808,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:47",{"_index":1809,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.ts",{"_index":1830,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/contact",{"_index":917,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts",{"_index":908,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:10",{"_index":912,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:13",{"_index":914,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:14",{"_index":915,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:16",{"_index":913,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts",{"_index":964,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:17",{"_index":1003,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:18",{"_index":1001,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":1011,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:21",{"_index":1004,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:22",{"_index":1005,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:23",{"_index":1008,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:24",{"_index":1006,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:26",{"_index":1010,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:27",{"_index":989,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:30",{"_index":1002,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:43",{"_index":995,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:55",{"_index":993,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:59",{"_index":997,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:63",{"_index":998,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:72",{"_index":999,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:82",{"_index":991,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:97",{"_index":990,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts",{"_index":1082,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:15",{"_index":1089,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:16",{"_index":1086,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:19",{"_index":1090,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:22",{"_index":1091,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:23",{"_index":1092,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:29",{"_index":1087,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:33",{"_index":1088,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts",{"_index":1105,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":1111,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":1117,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":1116,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":1114,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":1113,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":1115,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.ts",{"_index":1566,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:102",{"_index":1579,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:21",{"_index":1576,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:22",{"_index":1577,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1575,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:26",{"_index":1589,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:27",{"_index":1588,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:28",{"_index":1590,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1592,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1591,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1593,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1580,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:37",{"_index":1585,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:56",{"_index":1583,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:74",{"_index":1587,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:92",{"_index":1581,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts",{"_index":1904,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":1914,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:15",{"_index":1919,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":1920,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:17",{"_index":1912,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:19",{"_index":1921,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:21",{"_index":1918,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:34",{"_index":1917,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts",{"_index":1340,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:12",{"_index":1947,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:15",{"_index":1949,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:19",{"_index":1948,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/table",{"_index":1992,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.ts",{"_index":1953,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:15",{"_index":1957,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:18",{"_index":1961,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:19",{"_index":1960,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":1959,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:29",{"_index":1958,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.ts",{"_index":1990,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":2055,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts",{"_index":2016,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:17",{"_index":2029,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:18",{"_index":2022,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":2031,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":2030,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:24",{"_index":2032,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:29",{"_index":2026,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:32",{"_index":2028,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:65",{"_index":2024,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts",{"_index":2040,"title":{},"body":{"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":2046,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":2045,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":2041,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.ts",{"_index":2053,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tournament",{"_index":2128,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.ts",{"_index":2064,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/tournament/tournament.component.ts:14",{"_index":2077,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:15",{"_index":2076,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:17",{"_index":2079,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:20",{"_index":2081,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:22",{"_index":2071,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:25",{"_index":2075,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":2073,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:39",{"_index":2074,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:65",{"_index":2072,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.ts",{"_index":2126,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/graphql.module.ts",{"_index":1154,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/material.module.ts",{"_index":1771,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":796,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:103",{"_index":817,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:126",{"_index":830,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:22",{"_index":835,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:24",{"_index":833,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:28",{"_index":837,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:33",{"_index":839,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:35",{"_index":814,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:45",{"_index":826,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:70",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:85",{"_index":828,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:91",{"_index":841,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:95",{"_index":843,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:99",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/graphql",{"_index":626,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"coverage.html":{}}}],["src/app/services/i18.service",{"_index":1134,"title":{},"body":{"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{}}}],["src/app/services/i18.service.ts",{"_index":1230,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{}}}],["src/app/services/i18.service.ts:11",{"_index":1242,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:13",{"_index":1244,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:15",{"_index":1236,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":1239,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:33",{"_index":1238,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":703,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts",{"_index":953,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":955,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service",{"_index":1266,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/services/match.service.ts",{"_index":1657,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:123",{"_index":1670,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1665,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:23",{"_index":1667,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1677,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:79",{"_index":1673,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:8",{"_index":1663,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/pitch.service.ts",{"_index":1836,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:11",{"_index":1843,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:13",{"_index":1838,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service.ts",{"_index":1872,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{}}}],["src/app/services/season.service.ts:11",{"_index":1888,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:13",{"_index":1890,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:17",{"_index":1892,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:23",{"_index":1878,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:38",{"_index":1880,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:63",{"_index":1883,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.service",{"_index":1441,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/TeamsComponent.html":{}}}],["src/app/services/team.service.ts",{"_index":1993,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:17",{"_index":2009,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:19",{"_index":2001,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:33",{"_index":2003,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared.module",{"_index":1148,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/shared.module.ts",{"_index":1935,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["src/environments/environment.app.local.ts",{"_index":2169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.ts",{"_index":2170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":248,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["start_date",{"_index":194,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["start_season_date",{"_index":1495,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["startdate",{"_index":1414,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["started",{"_index":2262,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1548,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":1274,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startseason",{"_index":175,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason($id",{"_index":293,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(season_id",{"_index":294,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseasongql",{"_index":292,"title":{"injectables/StartSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["startteamcount",{"_index":1509,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":1013,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":222,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["statements",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":1683,"title":{},"body":{"injectables/MatchService.html":{},"components/RenameTeamComponent.html":{}}}],["store.readfragment",{"_index":1684,"title":{},"body":{"injectables/MatchService.html":{},"components/RenameTeamComponent.html":{}}}],["store.writefragment",{"_index":1687,"title":{},"body":{"injectables/MatchService.html":{},"components/RenameTeamComponent.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["styles",{"_index":333,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":341,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["subject",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["submit",{"_index":1805,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":157,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["submitmatchresult(matchid",{"_index":1674,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitresult",{"_index":152,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["submitresultgql",{"_index":268,"title":{"injectables/SubmitResultGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["subscribe",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["subscription",{"_index":1197,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.service",{"_index":627,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{}}}],["subscription.service.ts",{"_index":1201,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"coverage.html":{}}}],["subscription.service.ts:12",{"_index":1211,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:13",{"_index":1213,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:16",{"_index":1215,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:35",{"_index":1208,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:44",{"_index":1210,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient",{"_index":1173,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient(value",{"_index":1219,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptions",{"_index":1174,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"dependencies.html":{}}}],["success",{"_index":400,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["super",{"_index":957,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2267,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2268,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1462,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["switchmapto",{"_index":1014,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["switchmapto(this.pitchservice.allpitches",{"_index":1026,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["t",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["t.guestteam.id",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.hometeam.id",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.id",{"_index":881,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["table",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":472,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["table.component",{"_index":1991,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":1955,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1954,"title":{},"body":{"components/TableComponent.html":{}}}],["table.games",{"_index":1969,"title":{},"body":{"components/TableComponent.html":{}}}],["table.place",{"_index":1967,"title":{},"body":{"components/TableComponent.html":{}}}],["table.points",{"_index":1972,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":1968,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tore",{"_index":1971,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":1970,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":471,"title":{"components/TableComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":1985,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodule",{"_index":1989,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":253,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tag.id",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":637,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.type",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["target_path",{"_index":164,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team'},{'name",{"_index":467,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["team.component",{"_index":500,"title":{},"body":{"components/AddteamComponent.html":{},"modules/AdminModule.html":{}}}],["team.component.css",{"_index":1858,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.html",{"_index":1859,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts",{"_index":1857,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team.component.ts:10",{"_index":1860,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:13",{"_index":1865,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:15",{"_index":1866,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:18",{"_index":1861,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:22",{"_index":1863,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.fragment",{"_index":47,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["team.name",{"_index":413,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["team/rename",{"_index":499,"title":{},"body":{"components/AddteamComponent.html":{},"modules/AdminModule.html":{},"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team:${this.team.id",{"_index":1869,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team_contact",{"_index":2062,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_id",{"_index":133,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_id_pairs",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_ids",{"_index":190,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_manager",{"_index":149,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamadmin",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'name",{"_index":474,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teamadmin.component",{"_index":2054,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":2017,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":2018,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincomponent",{"_index":473,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":757,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["teamadminmodule",{"_index":2048,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodule",{"_index":2052,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamfragment",{"_index":257,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamid",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/TeamadminComponent.html":{}}}],["teamidpair",{"_index":38,"title":{"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teammanager",{"_index":148,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamname",{"_index":493,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":176,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teams'},{'name",{"_index":476,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teams($id",{"_index":296,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["teams.component.css",{"_index":2057,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":2058,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.component",{"_index":946,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teams_in_season",{"_index":1493,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["teamscanplay",{"_index":1261,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscomponent",{"_index":475,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamservice",{"_index":23,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/ManageseasonComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamsgql",{"_index":295,"title":{"injectables/TeamsGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teamsql",{"_index":2002,"title":{},"body":{"injectables/TeamService.html":{}}}],["template",{"_index":251,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["templateurl",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["terminiert",{"_index":1318,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["text",{"_index":1621,"title":{},"body":{"components/MatchComponent.html":{}}}],["text/javascript",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":1899,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this._subscriptionclient",{"_index":1217,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":1812,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.addteamgql.mutate",{"_index":1458,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.allseasonslistgql.document",{"_index":1901,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allseasonslistgql.watch",{"_index":1887,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allteamsgql.document",{"_index":2015,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.allteamsgql.watch().valuechanges.pipe",{"_index":2007,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.alltournamentqgl.watch().valuechanges.pipe",{"_index":2085,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.alltournamentsqgl.document",{"_index":108,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.alltournamentsqgl.watch().valuechanges.pipe",{"_index":1537,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.allusers",{"_index":2138,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.watch().valuechanges.pipe",{"_index":2139,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.apiclient.createpitch(body).subscribe",{"_index":1052,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.authenticationservice.loginasync(this.loginform.value",{"_index":1374,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.sendpasswordmail(email",{"_index":1377,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":629,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.authservice.changepassword(this.loginform.value.password",{"_index":1817,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.newpassword.value",{"_index":900,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":552,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":2047,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loaduser",{"_index":630,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":903,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.sendpasswordmail(this.email.value.tolowercase",{"_index":404,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.authservice.setaccesstoken",{"_index":1815,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.user",{"_index":2033,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.betweenmatchdaysoffset",{"_index":1473,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.cancelbtnlabel",{"_index":963,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cdref.detectchanges",{"_index":1036,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.changelang(defaultlang",{"_index":1253,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.changepasswordqgl.mutate",{"_index":882,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.createform",{"_index":1371,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createroundgql.mutate",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.createroundnr",{"_index":1547,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createseasongql.mutate",{"_index":1900,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.createtournament.mutate",{"_index":1539,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createusergql.mutate",{"_index":389,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.currentseason.subscribe",{"_index":1898,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.data.tournamentid",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.dialog.open(changepasswordcomponent",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcomponent",{"_index":1606,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchpitchcomponent",{"_index":1602,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcomponent",{"_index":1598,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecomponent",{"_index":1604,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(logincomponent",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(renameteamcomponent",{"_index":502,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.dialogref.close",{"_index":904,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{}}}],["this.dialogref.close(true",{"_index":113,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.email",{"_index":381,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.email.value.tolowercase",{"_index":390,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":2038,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.error",{"_index":1376,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.eventsgql.fetch(null",{"_index":1229,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["this.filteredpitches",{"_index":1021,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterstate",{"_index":1928,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.firstname",{"_index":384,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.firstname.value",{"_index":392,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.formbuilder.group",{"_index":1019,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.fromtooffset",{"_index":1477,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.getranking",{"_index":1962,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getround(m.match_day_id).number",{"_index":2092,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinner",{"_index":2095,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.graphsubscription.connect",{"_index":628,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guest_score",{"_index":1096,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteam",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.handlegetmatches",{"_index":1742,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplayed",{"_index":1740,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_score",{"_index":1094,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeam",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.i18service.changelang(lang",{"_index":646,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloading",{"_index":1373,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isteamadmin",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_score",{"_index":1680,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.isvalidresult(match.home_score",{"_index":1679,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.lastname",{"_index":385,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.lastname.value",{"_index":393,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.latestevents",{"_index":1135,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.latesteventsgql.watch().valuechanges.pipe",{"_index":1136,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadalltournaments",{"_index":1535,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadgooglemapsscript",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1554,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.locatematchqgl.mutate",{"_index":1692,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.loginform",{"_index":1372,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls['username'].seterrors",{"_index":1378,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1375,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.manageseason",{"_index":1457,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.manageseason.match_days.filter",{"_index":1290,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days.map(x",{"_index":1323,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days[0].matches.length",{"_index":1276,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.teams.map(x",{"_index":1282,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseasonid",{"_index":1459,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.managetournamentid",{"_index":1542,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentroundcount",{"_index":1545,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds",{"_index":1540,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match.guest_score",{"_index":1097,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team",{"_index":1608,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_score",{"_index":1095,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team",{"_index":1607,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":1033,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matches",{"_index":2093,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches.reverse",{"_index":2094,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":2097,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":2098,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesqgl",{"_index":1750,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchesql.mutate",{"_index":1479,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.matchkickoff",{"_index":1118,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchplangql.document",{"_index":1460,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.matchplanqgl.document",{"_index":1693,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.matchplanqgl.watch",{"_index":1751,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchservice.isvalidresult(this.guest_score",{"_index":1099,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_score",{"_index":1098,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.locatematch(match.id",{"_index":1329,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.locatematch(this.match.id",{"_index":1034,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchservice.schedulematch(match.id",{"_index":1331,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.schedulematch(this.match.id",{"_index":1119,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":1100,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.newmatchdays",{"_index":1456,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays.push(dp",{"_index":1478,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index",{"_index":1486,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index].from",{"_index":1487,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index].to",{"_index":1489,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchpitch.setvalue(this.newpitch",{"_index":1056,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.value",{"_index":1028,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.value.id",{"_index":1035,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.valuechanges.pipe",{"_index":1022,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":898,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch.id",{"_index":1054,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.label",{"_index":1049,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_latitude",{"_index":1042,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_longitude",{"_index":1044,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol",{"_index":1017,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors",{"_index":1060,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors(null",{"_index":1062,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalidity",{"_index":1063,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":1018,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newroundplandatefrom",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.newroundplandateto",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.oldpassword",{"_index":899,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpassword.value",{"_index":901,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":902,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":386,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.password.value",{"_index":391,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.pitchesqgl.watch().valuechanges.pipe",{"_index":1840,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.pitchadded.next(null",{"_index":1057,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.find(p",{"_index":1058,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places",{"_index":1037,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.addlistener('place_changed",{"_index":1039,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.getplace",{"_index":1041,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.possiblekickoffs",{"_index":1285,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":1286,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":1280,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newelement",{"_index":1283,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.ranking.watch({id",{"_index":1964,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankingqgl",{"_index":1963,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankingqgl.document",{"_index":1688,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.redis.subscribe().subscribe",{"_index":1226,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["this.removeteamgql.mutate",{"_index":1461,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.renameteamgql.mutate",{"_index":1867,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.resetpasswordqgl.mutate",{"_index":887,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.rounds",{"_index":1550,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1552,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.roundteams",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.filter(t",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.map((t",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.push",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.router.navigatebyurl",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.schedulematchgql.mutate",{"_index":1691,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.season",{"_index":1925,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonchanged.emit(event.value",{"_index":1930,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonlist",{"_index":1442,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.getvalue",{"_index":1741,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id",{"_index":1689,"title":{},"body":{"injectables/MatchService.html":{},"components/MatchplanComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id}).valuechanges.pipe",{"_index":1965,"title":{},"body":{"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.next(event.value",{"_index":1929,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.subscribe",{"_index":1924,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.seasonsqgl.valuechanges.pipe",{"_index":1443,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchdayid",{"_index":1743,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1746,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.setaccesstoken(null",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setbtnlabel",{"_index":960,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.shuffle(possiblekickoffs",{"_index":1295,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":395,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.startmatchday).foreach",{"_index":1292,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.startseasongql.mutate",{"_index":1483,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.submitresultgql.mutate",{"_index":1681,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.subscriptionclient.onconnected",{"_index":1220,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["this.subscriptionclient.onconnecting",{"_index":1222,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["this.subscriptionclient.onerror",{"_index":1224,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["this.team.id",{"_index":1868,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.teamservice.addnewteam(teamname",{"_index":501,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.teamsql.mutate",{"_index":2014,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.token",{"_index":1816,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tournament",{"_index":2088,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentchanged",{"_index":2087,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentid",{"_index":2086,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentqgl.document",{"_index":109,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.tournamentqgl.watch",{"_index":1541,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments",{"_index":1536,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1247,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":1252,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('create_match_days_error",{"_index":1482,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('create_match_days_success",{"_index":1481,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('create_user_error",{"_index":402,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.translateservice.instant('create_user_success",{"_index":397,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.translateservice.instant('edit_result_error",{"_index":1101,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.translateservice.instant('password_changed_error",{"_index":1820,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('password_changed_success",{"_index":1818,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('pitch_save_success",{"_index":1603,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_save_success",{"_index":1601,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_error",{"_index":406,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_success",{"_index":405,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.instant('start_season_error",{"_index":1485,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('start_season_success",{"_index":1484,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('team_contact_save_error",{"_index":2037,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('team_contact_save_success",{"_index":2036,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('time_save_success",{"_index":1605,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.onlangchange.subscribe",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.translateservice.settranslation('de",{"_index":1248,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":1249,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":1255,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscribe",{"_index":961,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscribe",{"_index":958,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.updateteamcontact.mutate",{"_index":2034,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.user",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.role",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":880,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.document",{"_index":2035,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.userqgl.fetch",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.watch().valuechanges.subscribe",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userrole",{"_index":394,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.userteamlist",{"_index":388,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.winnerlastround",{"_index":2096,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":2105,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":2109,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_score",{"_index":2099,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":2107,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":2102,"title":{},"body":{"components/TournamentComponent.html":{}}}],["todo",{"_index":2277,"title":{"todo.html":{}},"body":{}}],["toidvalue",{"_index":1165,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["token",{"_index":849,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["topromise",{"_index":112,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["tournament",{"_index":225,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tournament'},{'name",{"_index":478,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["tournament($id",{"_index":321,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament(id",{"_index":322,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament.component",{"_index":2127,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":2066,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":2065,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.fragment",{"_index":226,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["tournament.name",{"_index":1555,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament_id",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournamentchanged",{"_index":2068,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcomponent",{"_index":477,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentfragment",{"_index":262,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentgql",{"_index":40,"title":{"injectables/TournamentGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["tournamentid",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentid(t",{"_index":2083,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentmodule",{"_index":2121,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentqgl",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentroutingmodule",{"_index":2125,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":1510,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["translate",{"_index":415,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["translate/core",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1759,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodule",{"_index":704,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":705,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["translation",{"_index":2281,"title":{},"body":{"todo.html":{}}}],["translationservice",{"_index":956,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["transport",{"_index":1175,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"dependencies.html":{}}}],["tree",{"_index":335,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["tslint:disable",{"_index":1784,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tupel",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["tupel.guestteam.name",{"_index":530,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["tupel.hometeam.name",{"_index":529,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2290,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1024,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{}}}],["types",{"_index":328,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["types/googlemaps",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2265,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":994,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["update",{"_index":1682,"title":{},"body":{"injectables/MatchService.html":{},"components/RenameTeamComponent.html":{},"todo.html":{}}}],["updated_at",{"_index":204,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontact",{"_index":178,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontactgql",{"_index":298,"title":{"injectables/UpdateTeamContactGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["uri",{"_index":1176,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":707,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["useexisting",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{}}}],["usefactory",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["user",{"_index":227,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":426,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["user.authenticateduser",{"_index":834,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["user.component",{"_index":586,"title":{},"body":{"modules/AdminModule.html":{}}}],["user.component.css",{"_index":342,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.html",{"_index":343,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts",{"_index":338,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:18",{"_index":373,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:20",{"_index":371,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:22",{"_index":372,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":367,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":368,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":369,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":355,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":370,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:45",{"_index":360,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:47",{"_index":364,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:51",{"_index":358,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:81",{"_index":365,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":2144,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.first_name",{"_index":2145,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.fragment",{"_index":229,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["user.last_name",{"_index":2146,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":2147,"title":{},"body":{"components/UserListComponent.html":{}}}],["user/add",{"_index":337,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["user_role",{"_index":2143,"title":{},"body":{"components/UserListComponent.html":{}}}],["userfragment",{"_index":263,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergql",{"_index":323,"title":{"injectables/UserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["userlistcomponent",{"_index":479,"title":{"components/UserListComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":848,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/UserListComponent.html":{}}}],["username_required",{"_index":1380,"title":{},"body":{"components/LoginComponent.html":{}}}],["userqgl",{"_index":811,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/TeamadminComponent.html":{}}}],["userrole",{"_index":146,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":411,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userrole.teammanager",{"_index":412,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userteamlist",{"_index":346,"title":{},"body":{"components/AddUserComponent.html":{}}}],["usevalue",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":1167,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["uuid",{"_index":379,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":380,"title":{},"body":{"components/AddUserComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["uuidv4",{"_index":1534,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["val",{"_index":1325,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["validators",{"_index":374,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.email",{"_index":383,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.minlength(6",{"_index":387,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{}}}],["validators.required",{"_index":382,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["value",{"_index":129,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":1025,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["value.tostring",{"_index":1733,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["valuechanges.pipe",{"_index":1543,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["var",{"_index":421,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["variable",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":110,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["viertelfinale",{"_index":2113,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":1012,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplete",{"_index":1000,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["void",{"_index":361,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["websocketlink",{"_index":1168,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["websocketlink(ownservice.subscriptionclient",{"_index":1192,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["websockets",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["werden",{"_index":1319,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["width",{"_index":666,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{}}}],["winner.name",{"_index":2112,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":2111,"title":{},"body":{"components/TournamentComponent.html":{}}}],["wins",{"_index":210,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["ws",{"_index":1169,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"dependencies.html":{}}}],["ws://${window.location.hostname}/ws",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://192.168.178.23:3001/ws",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://localhost:4000",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wsclient",{"_index":1191,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["wss://manager.wildeligabremen.de/ws",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":1031,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.filter(y",{"_index":1029,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.guest_team.id",{"_index":1748,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.home_team.id",{"_index":1749,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.id",{"_index":1745,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.index",{"_index":1287,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.matches).reduce((acc",{"_index":1324,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.number",{"_index":1291,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(y",{"_index":1297,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.label.tolowercase().includes(this.newmatchpitch.value.tolowercase",{"_index":1030,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":1298,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["yes",{"_index":818,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["zip",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddTeamToSeasonGQL.html":{"url":"injectables/AddTeamToSeasonGQL.html","title":"injectable - AddTeamToSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddTeamToSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:852\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                ./add-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                userRole\n                            \n                            \n                                UserRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                            \n                                    Async\n                                sendUsermail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, translateService: TranslateService, snackBar: MatSnackBar, authService: AuthenticationService, createUserGQL: CreateUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserGQL\n                                                  \n                                                        \n                                                                        CreateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeTeamSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeTeamSelect(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUsermail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUsermail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRole, CreateUserGQL } from 'src/api/graphql';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TeamService } from '../../../../services/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSelectChange } from '@angular/material';\nimport { AuthenticationService } from '../../../../services/authentication.service';\nimport { SnackbarComponent } from '../../../shared/snackbar/snackbar.component';\nimport * as uuid from 'uuid/v4';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  userTeamList: string[] = new Array();\n\n  userRole: UserRole;\n\n  UserRole = UserRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    public teamService: TeamService,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    private authService: AuthenticationService,\n    private createUserGQL: CreateUserGQL\n  ) {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6)\n    ]);\n  }\n\n  ngOnInit() {\n  }\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  async createUser() {\n    try {\n      await this.createUserGQL.mutate(\n        {\n          id: uuid(),\n          email: this.email.value.toLowerCase(),\n          password: this.password.value,\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('CREATE_USER_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('CREATE_USER_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  async sendUsermail() {\n    try {\n      await this.authService.sendPasswordMail(this.email.value.toLowerCase());\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_EMAIL\n      \n    \n  \n  \n    \n      \n        \n        FIRST_NAME_REQUIRED\n      \n      \n        \n        LAST_NAME_REQUIRED\n      \n    \n  \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_PASSWORD\n      \n    \n  \n  \n    \n      \n        \n          \n            {{ UserRole.Admin }}\n          \n          \n            {{ UserRole.TeamManager }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n  \n  \n    \n      \n        {{ 'BUTTON.ADD_USER' | translate}}\n      \n    \n    \n      \n        {{ 'BUTTON.SEND_USER_MAIL' | translate}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./add-user.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ERRORS.ENTER_VALID_EMAIL                                        FIRST_NAME_REQUIRED                            LAST_NAME_REQUIRED                                        ERRORS.ENTER_VALID_PASSWORD                                                      {{ UserRole.Admin }}                                {{ UserRole.TeamManager }}                                                                        {{team.name}}                                                  {{ \\'BUTTON.ADD_USER\\' | translate}}                            {{ \\'BUTTON.SEND_USER_MAIL\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddteamComponent.html":{"url":"components/AddteamComponent.html","title":"component - AddteamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddteamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/addteam.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addteam\n            \n\n            \n                styleUrls\n                ./addteam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./addteam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openRenameTeamDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/addteam.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openRenameTeamDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenRenameTeamDialog(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from 'src/api/graphql';\nimport { MatDialog } from '@angular/material';\nimport { RenameTeamComponent } from './rename-team/rename-team.component';\n\n@Component({\n  selector: 'app-addteam',\n  templateUrl: './addteam.component.html',\n  styleUrls: ['./addteam.component.css']\n})\nexport class AddteamComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService,\n    public dialog: MatDialog\n  ) {\n\n  }\n\n  async ngOnInit() {\n  }\n\n  async addNewTeam(teamName: string) {\n    try {\n      await this.teamService.addNewTeam(teamName);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  openRenameTeamDialog(team: Team.Fragment) {\n    this.dialog.open(RenameTeamComponent, { data: team, minWidth: '50vw' });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              edit\n            \n          \n          {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./addteam.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        edit                                {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddteamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeam\n                            \n                            \n                                homeTeam\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                roundTeams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                    Async\n                                createRound\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allTournamentsQGL: AllTournamentListGQL, dialogRef: MatDialogRef, teamService: TeamService, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, createRoundGQL: CreateTournamentRoundGQL, tournamentQGL: TournamentGQL, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createRoundGQL\n                                                  \n                                                        \n                                                                        CreateTournamentRoundGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTeam(tupel: TeamIdPair)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tupel\n                                    \n                                                TeamIdPair\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateFrom\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateFrom(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateTo\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateTo(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roundTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoundTeam[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{ tupel.homeTeam.name }}\n      \n      \n        -\n      \n      \n        {{ tupel.guestTeam.name }}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        -\n      \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n        {{ 'PLAN_DATE_TO'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{ tupel.homeTeam.name }}                    -                    {{ tupel.guestTeam.name }}                              -                                                                        {{team.name}}                                                  -                                                        {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                            {{ \\'PLAN_DATE_TO\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                                {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddUserComponent->AdminModule\n\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddUserComponent\n                        \n                        \n                            AddteamComponent\n                        \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            AdminComponent\n                        \n                        \n                            ManageseasonComponent\n                        \n                        \n                            ManagetournamentComponent\n                        \n                        \n                            ManageusersComponent\n                        \n                        \n                            MatchSchedulingComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddteamComponent } from './addteam/addteam.component';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\nimport { AddUserComponent } from './manageusers/add-user/add-user.component';\nimport { UserListComponent } from './manageusers/user-list/user-list.component';\nimport { RenameTeamComponent } from './addteam/rename-team/rename-team.component';\nimport { EventsModule } from './events';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule,\n    EventsModule\n  ],\n  declarations: [\n    AdminComponent,\n    AddteamComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent,\n    MatchSchedulingComponent,\n    AddUserComponent,\n    UserListComponent,\n    RenameTeamComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent,\n    RenameTeamComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllSeasonsListGQL.html":{"url":"injectables/AllSeasonsListGQL.html","title":"injectable - AllSeasonsListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllSeasonsListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1121\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTeamsGQL.html":{"url":"injectables/AllTeamsGQL.html","title":"injectable - AllTeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1138\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTournamentListGQL.html":{"url":"injectables/AllTournamentListGQL.html","title":"injectable - AllTournamentListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTournamentListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1155\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllUsersGQL.html":{"url":"injectables/AllUsersGQL.html","title":"injectable - AllUsersGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllUsersGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1202\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, dialog: MatDialog, graphSubscription: GraphqlSubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphSubscription\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGoogleMapsScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadGoogleMapsScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLangSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLangSelect(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openChangePasswordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenChangePasswordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private graphSubscription: GraphqlSubscriptionService) {\n  }\n\n  async ngOnInit() {\n    this.graphSubscription.connect();\n    if (this.authService.accessToken) {\n      this.authService.loadUser();\n    }\n    this.loadGoogleMapsScript();\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n        \n       -->\n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .led-box {\n    height: 25px;\n    width: 25%;\n    margin: 10px 0;\n    float: right;\n  }\n  .led-green {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #ABFF00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;\n  }\n  .led-red {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #F00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                           -->              {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                          Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { GraphQLModule } from './graphql.module';\nimport { AuthenticationService } from './services/authentication.service';\n\nregisterLocaleData(localeDe);\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthenticationService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 2500 }\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'matchplan',\n    pathMatch: 'full'\n  },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './services/authentication.service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthenticationService) {\n    }\n    public intercept(req: HttpRequest,\n        next: HttpHandler): Observable> {\n\n        if (req.headers.get('Authorization')) {\n            return next.handle(req);\n        }\n\n        if (this.authService.accessToken) {\n            return next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n            }));\n        }\n\n        return next.handle(req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                sendPasswordMail\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userQGL: UserGQL, changePasswordQGL: PasswordChangeGQL, resetPasswordQGL: PasswordResetGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswordQGL\n                                                  \n                                                        \n                                                                        PasswordChangeGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPasswordQGL\n                                                  \n                                                        \n                                                                        PasswordResetGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string, oldPassword?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTeamAdminForTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeamAdminForTeam(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAsync(context: LoginContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                LoginContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAccessToken(value: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User.AuthenticatedUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:95\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nexport interface Credentials {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.watch().valueChanges.subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                ./changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      try {\n        await this.authService.changePassword(this.newPassword.value, this.oldPassword.value);\n        this.oldPasswordWrong = false;\n        this.authService.logout();\n        this.dialogRef.close();\n      } catch (error) {\n          console.error(error);\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./changepassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teams: Team.Fragment[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    Team.Fragment[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact/contact.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public teams: Team.Fragment[]) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n    \n\n    \n        \n   {{ 'CONTACT' | translate }}\n  \n    \n      \n        \n          {{ team.name }}\n        \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CLOSE' | translate }}\n  \n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'CONTACT\\' | translate }}                              {{ team.name }}                                                    {{ \\'BUTTON.CLOSE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                ./contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n                \n                    ./contact-person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                ./contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./contactlist.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactlistComponent\n                        \n                        \n                            PitchesComponent\n                        \n                        \n                            TeamsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactlistRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMatchesForSeasonGQL.html":{"url":"injectables/CreateMatchesForSeasonGQL.html","title":"injectable - CreateMatchesForSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMatchesForSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:878\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateSeasonGQL.html":{"url":"injectables/CreateSeasonGQL.html","title":"injectable - CreateSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:839\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentGQL.html":{"url":"injectables/CreateTournamentGQL.html","title":"injectable - CreateTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:955\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentRoundGQL.html":{"url":"injectables/CreateTournamentRoundGQL.html","title":"injectable - CreateTournamentRoundGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentRoundGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:968\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserGQL.html":{"url":"injectables/CreateUserGQL.html","title":"injectable - CreateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:991\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nexport interface Credentials {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.watch().valueChanges.subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OwlDateTimeIntl\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePeriod.html":{"url":"interfaces/DatePeriod.html","title":"interface - DatePeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatePeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        from\n                                \n                                \n                                            Optional\n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                ./editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                createNewPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                            \n                                onShowCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, pitchService: PitchService, matchService: MatchService, cdRef: ChangeDetectorRef, formBuilder: FormBuilder, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkNewPitchName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckNewPitchName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPitchSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonPitchSelect(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onShowCreateNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \nonShowCreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('adressAutoComplete')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Pitch.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreateNewPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { map, startWith, switchMapTo } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Match, Pitch } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n  showCreateNewPitch: boolean;\n\n  newPitch: Pitch.Fragment;\n  newPitchFormControl: FormControl;\n  newPitchPlaceFormGroup: FormGroup;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private pitchService: PitchService,\n    private matchService: MatchService,\n    private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch.Fragment) {\n    this.match.pitch = pitch;\n  }\n\n  async onSaveClicked() {\n    try {\n      await this.matchService.locateMatch(this.match.id, this.newMatchPitch.value.id);\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  onShowCreateNewPitch() {\n    this.cdRef.detectChanges();\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n\n  createNewPitch() {\n    // if (this.newPitch.location_latitude && this.newPitch.location_longitude) {\n    //   const body: CreatePitchBody = new CreatePitchBody();\n    //   body.label = this.newPitch.label;\n    //   body.location_latitude = this.newPitch.location_latitude;\n    //   body.location_longitude = this.newPitch.location_longitude;\n    //   this.apiClient.createPitch(body).subscribe(\n    //     async (pitchId) => {\n    //       this.newPitch.id = pitchId.id;\n    //       this.newMatchPitch.setValue(this.newPitch);\n    //       this.pitchService.pitchAdded.next(null);\n    //     }\n    //   );\n    // }\n  }\n  checkNewPitchName() {\n    // const pitch = this.pitchService.pitches.find(p => p.label === this.newPitch.label);\n    // if (pitch) {\n    //   this.newPitchFormControl.setErrors({ pitchexist: true });\n    // } else {\n    //   this.newPitchFormControl.setErrors(null);\n    //   this.newPitchFormControl.updateValueAndValidity();\n    // }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.value.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n     -->\n    \n      \n        \n          {{ 'NEW_PITCH_LABEL' | translate }}\n          \n            \n            ERRORS.PITCH_EXIST\n            PITCH_REQUIRED\n          \n          \n            \n          \n          \n            {{'BUTTON.NEXT' | translate}}\n          \n        \n        \n          \n            {{ 'NEW_PITCH_ADRESS' | translate}}\n            \n              \n            \n            \n              {{'BUTTON.BACK' | translate}}\n              {{'BUTTON.CREATE_PITCH' | translate}}\n            \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.pitch.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.value.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                             -->                            {{ \\'NEW_PITCH_LABEL\\' | translate }}                                  ERRORS.PITCH_EXIST            PITCH_REQUIRED                                                                {{\\'BUTTON.NEXT\\' | translate}}                                                {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                                                {{\\'BUTTON.BACK\\' | translate}}              {{\\'BUTTON.CREATE_PITCH\\' | translate}}                                                {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                ./editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, matchService: MatchService, dialogRef: MatDialogRef, snackBar: MatSnackBar, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { MatchService } from '../../../services/match.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService\n  ) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score)\n        .then( () => {\n          this.dialogRef.close(true);\n        })\n        .catch( (error) => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('EDIT_RESULT_ERROR')\n            },\n            panelClass: ['alert', 'alert-danger'],\n          });\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.result.component.css\n                \n                .inputsize {\n    width: 8ch;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                ./editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            kickoffSet\n                        \n                        \n                    \n                \n            \n            \n                \nkickoffSet(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\nimport { MatchService } from '../../../services/match.service';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private matchService: MatchService\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.matchService.scheduleMatch(this.match.id, this.matchKickoff)\n      .then(\n        () => {\n          this.dialogRef.close(true);\n        }\n      )\n      .catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n                \n                    ./editmatch.time.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventGQL.html":{"url":"injectables/EventGQL.html","title":"injectable - EventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1017\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                latestEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(latestEventsGQL: LatestEventGQL, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latestEventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/events/events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { LatestEventGQL, Event } from 'src/api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  latestEvents: Observable;\n\n  constructor(\n    private latestEventsGQL: LatestEventGQL,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.latestEvents = this.latestEventsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.latestEvents.sort((a, b) => a.occurred_at \n    \n\n    \n        \n  \n    \n      {{ event.occurred_at | date:'short':'':i18Service.currentLang}}\n    \n    \n      {{ event.type }}\n    \n  \n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.occurred_at | date:\\'short\\':\\'\\':i18Service.currentLang}}              {{ event.type }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nEventsComponent\n\nEventsComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            EventsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { SharedModule } from 'src/app/shared.module';\nimport { EventsComponent } from './events.component';\nimport { AppCoreModule } from 'src/app/app-core.module';\n\n@NgModule({\n  imports: [\n    EventsRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    EventsComponent\n  ],\n  exports: [\n    EventsComponent\n  ]\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsRoutingModule.html":{"url":"modules/EventsRoutingModule.html","title":"module - EventsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class EventsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { toIdValue, getMainDefinition } from 'apollo-utilities';\nimport { AuthenticationService, Credentials } from './services/authentication.service';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split, ApolloLink } from 'apollo-link';\nimport { environment } from '../environments/environment';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\n\nconst uri = environment.graphqlUrl; //  {\n    return forward(operation).map(response => {\n      const { response: { headers } } = operation.getContext();\n      if (headers) {\n        const token = headers.get('x-token');\n        if (token) {\n          authService.setAccessToken({ token: token });\n        }\n      }\n      return response;\n    });\n  });\n\n  const auth = setContext((_, { headers }) => {\n    if (!headers) {\n      headers = new HttpHeaders();\n    }\n    const token = authService.accessToken;\n    if (token) {\n      return {\n        headers: headers.get('Authorization') ? null : headers.append('Authorization', `Bearer ${token}`)\n      };\n    } else {\n      return {};\n    }\n  });\n\n  ownService.subscriptionClient = new SubscriptionClient(\n    environment.graphqlWsUrl,\n    {\n      lazy: true,\n      reconnect: true\n    });\n  const wsClient = new WebSocketLink(ownService.subscriptionClient);\n\n  const link = split(\n    // split based on operation type\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsClient,\n    afterwareLink.concat(auth).concat(http),\n  );\n  const cache = new InMemoryCache(\n    {\n      addTypename: true\n    }\n  );\n  return {\n    link: link,\n    cache: cache\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    GraphqlSubscriptionService,\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [\n        HttpLink,\n        AuthenticationService,\n        GraphqlSubscriptionService\n      ],\n    },\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlSubscriptionService.html":{"url":"injectables/GraphqlSubscriptionService.html","title":"injectable - GraphqlSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptionClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptionClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisEventGQL, rankingQGL: RankingGQL, eventsGQL: LatestEventGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql-subscription.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql-subscription.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptionClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptionClient\n                    \n                \n\n                \n                    \n                        getsubscriptionClient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:13\n                                \n                            \n\n                \n                    \n                        setsubscriptionClient(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL } from '../../api/graphql';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: GraphqlSubscriptionService\n})\nexport class GraphqlSubscriptionService {\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connecting');\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('error', error);\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          await this.eventsGQL.fetch(null, {\n            fetchPolicy: 'network-only'\n          }).toPromise();\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    let defaultLang = localStorage.getItem('LANG');\n    if (!defaultLang) {\n      defaultLang = this.translateService.getBrowserLang();\n    }\n    if (!defaultLang) {\n      defaultLang = 'de';\n    }\n    this.changeLang(defaultLang);\n  }\n\n  changeLang(lang: string) {\n    localStorage.setItem('LANG', lang);\n    this.translateService.use(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:         ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch.id);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch.id);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData.html":{"url":"interfaces/IntrospectionResultData.html","title":"interface - IntrospectionResultData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData-1.html":{"url":"interfaces/IntrospectionResultData-1.html","title":"interface - IntrospectionResultData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatestEventGQL.html":{"url":"injectables/LatestEventGQL.html","title":"injectable - LatestEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LatestEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1034\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateMatchGQL.html":{"url":"injectables/LocateMatchGQL.html","title":"injectable - LocateMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocateMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:800\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordForgot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordForgot(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PasswordResetGQL } from '../../../api/graphql';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isLoading: boolean;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    this.isLoading = true;\n    if (await this.authenticationService.loginAsync(this.loginForm.value)) {\n      this.loginForm.markAsPristine();\n      this.isLoading = false;\n      this.dialogRef.close();\n    } else {\n      this.isLoading = false;\n      this.error = true;\n    }\n  }\n\n  async passwordForgot(email: string) {\n    if (email) {\n      try {\n        await this.authenticationService.sendPasswordMail(email);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      } catch (error) {\n        console.error(error);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    } else {\n      this.loginForm.controls['username'].setErrors({ required: true });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          ERRORS.USERNAME_PASSWORD_WRONG\n        \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.LOGIN' | translate}}\n        \n      \n    \n    \n      FORGOT_PASSWORD\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              ERRORS.USERNAME_PASSWORD_WRONG                                                USERNAME_REQUIRED                                                          PASSWORD_REQUIRED                                remove_red_eye                                                        {{ \\'BUTTON.LOGIN\\' | translate}}                            FORGOT_PASSWORD      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nexport interface Credentials {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.watch().valueChanges.subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageseasonComponent.html":{"url":"components/ManageseasonComponent.html","title":"component - ManageseasonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageseasonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manageseason.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageseason\n            \n\n            \n                styleUrls\n                ./manageseason.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageseason.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                betweenMatchDaysOffset\n                            \n                            \n                                fromToOffset\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                manageSeason\n                            \n                            \n                                manageSeasonId\n                            \n                            \n                                matchesInSeason\n                            \n                            \n                                newMatchDays\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewSeason\n                            \n                            \n                                    Async\n                                addTeamToSeason\n                            \n                            \n                                createMatchDays\n                            \n                            \n                                manageSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                removeTeamFromSeason\n                            \n                            \n                                selectedTabChanged\n                            \n                            \n                                sendMatchDays\n                            \n                            \n                                setMatchDayFromDate\n                            \n                            \n                                setMatchDayToDate\n                            \n                            \n                                    Async\n                                startSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, teamService: TeamService, i18Service: I18Service, snackBar: MatSnackBar, translateService: TranslateService, matchesQL: CreateMatchesForSeasonGQL, matchPlanGQL: MatchPlanGQL, removeTeamGQL: RemoveTeamFromSeasonGQL, addTeamGQL: AddTeamToSeasonGQL, startSeasonGQL: StartSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manageseason.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchesQL\n                                                  \n                                                        \n                                                                        CreateMatchesForSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeTeamGQL\n                                                  \n                                                        \n                                                                        RemoveTeamFromSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addTeamGQL\n                                                  \n                                                        \n                                                                        AddTeamToSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startSeasonGQL\n                                                  \n                                                        \n                                                                        StartSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTeamToSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTeamToSeason(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMatchDays(startDate: any, length: number, oldMatchDays: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldMatchDays\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            manageSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \nmanageSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeTeamFromSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTeamFromSeason(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectedTabChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectedTabChanged(event: MatTabChangeEvent, season: MatchPlan.Season)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                MatTabChangeEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    season\n                                    \n                                            MatchPlan.Season\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nsendMatchDays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMatchDayFromDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetMatchDayFromDate(index: number, date: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMatchDayToDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetMatchDayToDate(index: number, date: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startSeason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            betweenMatchDaysOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 7\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromToOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageSeasonId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchesInSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePeriod[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange, MatTabChangeEvent, MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TeamService } from 'src/app/services/team.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {\n  AllSeasonsList, Match,\n  MatchPlan, MatchPlanGQL, CreateMatchesForSeasonGQL, RemoveTeamFromSeasonGQL,\n  AddTeamToSeasonGQL, DatePeriod, StartSeasonGQL\n} from '../../../../api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n@Component({\n  selector: 'app-manageseason',\n  templateUrl: './manageseason.component.html',\n  styleUrls: ['./manageseason.component.css']\n})\nexport class ManageseasonComponent implements OnInit {\n\n  matchesInSeason: Match.Fragment[];\n\n  newMatchDays: DatePeriod[];\n  fromToOffset = 2;\n  betweenMatchDaysOffset = 7;\n\n  seasonList: Observable;\n  manageSeason: Observable;\n  manageSeasonId: string;\n\n  constructor(\n    public seasonService: SeasonService,\n    public teamService: TeamService,\n    public i18Service: I18Service,\n    private snackBar: MatSnackBar,\n    private translateService: TranslateService,\n    private matchesQL: CreateMatchesForSeasonGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private removeTeamGQL: RemoveTeamFromSeasonGQL,\n    private addTeamGQL: AddTeamToSeasonGQL,\n    private startSeasonGQL: StartSeasonGQL\n  ) {\n    this.seasonList = this.seasonService.seasonsQGL.valueChanges.pipe(\n      map(\n        ({ data }) => {\n          return data.allSeasons.sort(\n            (a, b) => {\n              const aState = a.state.toLocaleLowerCase();\n              const bState = b.state.toLocaleLowerCase();\n              if (aState > bState) {\n                return 1;\n              }\n              if (aState  bName) {\n                return 1;\n              }\n              if (aName  {\n        if (data.season.teams) {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n        }\n        return data.season;\n      })\n    );\n    delete this.newMatchDays;\n  }\n\n  async addTeamToSeason(teamId: string) {\n    if (this.manageSeason) {\n      try {\n        await this.addTeamGQL.mutate(\n          {\n            season_id: this.manageSeasonId,\n            team_id: teamId\n          },\n          {\n            refetchQueries: [\n              {\n                query: this.matchPlanGQL.document,\n                variables: { id: this.manageSeasonId }\n              }\n            ]\n          }\n        ).toPromise();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  async removeTeamFromSeason(teamId: string) {\n    if (this.manageSeason) {\n      try {\n        await this.removeTeamGQL.mutate(\n          {\n            season_id: this.manageSeasonId,\n            team_id: teamId\n          },\n          {\n            refetchQueries: [\n              {\n                query: this.matchPlanGQL.document,\n                variables: { id: this.manageSeasonId }\n              }\n            ]\n          }\n        ).toPromise();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  selectedTabChanged(event: MatTabChangeEvent, season: MatchPlan.Season) {\n    switch (event.index) {\n      case 1:\n        if (season.match_days) {\n          this.newMatchDays = season.match_days.map((matchDay) => ({ from: matchDay.start_date, to: matchDay.end_date }));\n        }\n        break;\n    }\n  }\n\n  createMatchDays(startDate: any, length: number, oldMatchDays: any) {\n    this.newMatchDays = new Array();\n    if (length % 2 !== 0) {\n      length += 1;\n    }\n    for (let i = 0; i {};\n      dp.from = new Date(startDate.value);\n      dp.from.setDate(dp.from.getDate() + (i * this.betweenMatchDaysOffset));\n      dp.to = new Date(dp.from);\n      dp.to.setDate(dp.to.getDate() + this.fromToOffset);\n      this.newMatchDays.push(dp);\n    }\n  }\n\n  sendMatchDays() {\n    this.matchesQL.mutate(\n      {\n        season_id: this.manageSeasonId,\n        dates: this.newMatchDays\n      },\n      {\n        refetchQueries: [\n          {\n            query: this.matchPlanGQL.document,\n            variables: { id: this.manageSeasonId }\n          }\n        ]\n      }\n    ).subscribe(\n      (d) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_MATCH_DAYS_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_MATCH_DAYS_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n\n  async startSeason() {\n    try {\n      await this.startSeasonGQL.mutate(\n        {\n          id: this.manageSeasonId\n        },\n        {\n          refetchQueries: [\n            {\n              query: this.matchPlanGQL.document,\n              variables: { id: this.manageSeasonId }\n            }\n          ]\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('START_SEASON_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('START_SEASON_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  setMatchDayFromDate(index: number, date: any) {\n    if (!this.newMatchDays[index]) {\n      this.newMatchDays[index] = {};\n    }\n    this.newMatchDays[index].from = date.value;\n  }\n\n  setMatchDayToDate(index: number, date: any) {\n    if (!this.newMatchDays[index]) {\n      this.newMatchDays[index] = {};\n    }\n    this.newMatchDays[index].to = date.value;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ season.name }} | {{ season.state }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_SEASON' | translate\n        }}\n      \n    \n  \n  \n    \n      \n        \n          \n            TEAMS_IN_SEASON\n            \n              \n                {{team.name}}\n                \n                  ->\n                \n              \n            \n          \n          \n            ALL_TEAMS\n            \n              \n                \n                  \n                    {{team.name}}\n                    \n              \n            \n          \n        \n      \n      \n        \n          \n            {{ 'START_SEASON_DATE' | translate}}:\n            \n            {{ 'BUTTON.SET_DAY' | translate }}\n            \n          \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n        \n        \n          \n            {{ i + 1 }}. Spieltag\n          \n          \n            {{ matchDay.from | date:'short':'':i18Service.currentLang }}\n          \n          \n            {{ 'BUTTON.SET_TIME' | translate }}\n            \n            \n          \n          \n            {{ matchDay.to | date:'short':'':i18Service.currentLang }}\n          \n          \n            {{ 'BUTTON.SET_TIME' | translate }}\n            \n            \n          \n        \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n      \n        \n          \n            \n              \n                {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{matchDay.start_date | date }}-{{matchDay.end_date\n                  | date}})\n              \n            \n            \n              \n                {{ match.home_team.name }} - {{ match.guest_team.name }}\n              \n            \n          \n          \n            \n              {{ 'BUTTON.START_SEASON' | translate}}\n            \n          \n        \n      \n      \n          \n        \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./manageseason.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ season.name }} | {{ season.state }}                                                                  {{ \\'BUTTON.CREATE_SEASON\\' | translate        }}                                                      TEAMS_IN_SEASON                                          {{team.name}}                                  ->                                                                          ALL_TEAMS                                                                                {{team.name}}                                                                                                          {{ \\'START_SEASON_DATE\\' | translate}}:                        {{ \\'BUTTON.SET_DAY\\' | translate }}                                                                                                                                                                                {{ i + 1 }}. Spieltag                                {{ matchDay.from | date:\\'short\\':\\'\\':i18Service.currentLang }}                                {{ \\'BUTTON.SET_TIME\\' | translate }}                                                        {{ matchDay.to | date:\\'short\\':\\'\\':i18Service.currentLang }}                                {{ \\'BUTTON.SET_TIME\\' | translate }}                                                            {{ \\'BUTTON.OK\\' | translate }}                                                                                {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{matchDay.start_date | date }}-{{matchDay.end_date                  | date}})                                                                    {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                        {{ \\'BUTTON.START_SEASON\\' | translate}}                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageseasonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                ./managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournamentId\n                            \n                            \n                                manageTournamentRoundCount\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, allTournamentsQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL, createTournament: CreateTournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTournament\n                                                  \n                                                        \n                                                                        CreateTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewTournament\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTournament(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editRound\n                        \n                        \n                    \n                \n            \n            \n                \neditRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genRounds\n                        \n                        \n                    \n                \n            \n            \n                \ngenRounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllTournaments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onTournamentSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTournamentSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRoundCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, MatchDay, CreateTournamentGQL } from '../../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport * as uuidv4 from 'uuid/v4';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  manageTournamentId: string;\n  manageTournamentRounds: Observable;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRoundCount: number;\n\n  constructor(\n    public dialog: MatDialog,\n    private allTournamentsQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private createTournament: CreateTournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.tournaments = this.allTournamentsQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n  }\n\n  async createNewTournament(name: string) {\n    await this.createTournament.mutate({\n      id: uuidv4(),\n      name: name\n    },\n      {\n        refetchQueries: [\n          {query: this.allTournamentsQGL.document}\n        ]\n      }).toPromise();\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = this.tournamentQGL.watch(\n      {\n        id: this.manageTournamentId\n      }\n    ).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.data.tournament.rounds) {\n            this.manageTournamentRoundCount = result.data.tournament.rounds.length;\n          } else {\n            this.manageTournamentRoundCount = 0;\n          }\n          this.createRoundNr = this.manageTournamentRoundCount;\n          return result.data.tournament.rounds;\n        })\n    );\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT'\n        | translate}}\n    \n  \n  \n    \n      \n        \n          \n        \n      \n      \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n    \n    \n      \n        {{ mt.number }}. {{ 'ROUND' | translate }}\n        \n          \n            {{ match.home_team.name }} - {{ match.guest_team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n   -->\n\n    \n\n    \n                \n                    ./managetournament.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\'        | translate}}                                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                {{ mt.number }}. {{ \\'ROUND\\' | translate }}                              {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                          {{ \\'MATCH\\' | translate }} {{ game }}       -->'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                ./manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  constructor(\n  ) {\n  }\n\n  async ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n      \n    \n\n    \n\n    \n                \n                    ./manageusers.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                ./match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, matchService: MatchService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :     Match.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openContactModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenContactModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditPitchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditPitchDialog(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditResultDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditResultDialog(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditTimeDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditTimeDialog(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: Match.Fragment;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    public matchService: MatchService,\n    public translateService: TranslateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog(match: Match.Fragment) {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('RESULT_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditPitchDialog(match: Match.Fragment) {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('PITCH_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditTimeDialog(match: Match.Fragment) {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('TIME_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openContactModal() {\n    this.dialog.open(ContactComponent, {\n      data: [\n        this.match.home_team,\n        this.match.guest_team\n      ],\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    access_time\n                \n                \n                    \n                        {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                        {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                    \n                    {{ 'NO_TIME_SET' | translate }}\n                \n                \n                    location_off\n                    location_on\n                \n                \n                    {{ 'NO_PTICH_SET' | translate }}\n                \n                \n                    \n                        {{ match.pitch.label }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n\n    \n\n    \n                \n                    ./match.component.css\n                \n                .card-text {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                            access_time                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                         {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                        {{ \\'NO_TIME_SET\\' | translate }}                                                    location_off                    location_on                                                    {{ \\'NO_PTICH_SET\\' | translate }}                                                                            {{ match.pitch.label }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPlanGQL.html":{"url":"injectables/MatchPlanGQL.html","title":"injectable - MatchPlanGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchPlanGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1051\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                ./match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                    Public\n                                pitchService\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                \n                \n                    \n                        Type :     MatchPlan.Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addKickoffDateToPitch\n                        \n                        \n                    \n                \n            \n            \n                \naddKickoffDateToPitch(offset: number, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePair\n                        \n                        \n                    \n                \n            \n            \n                \nremovePair(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveMatches\n                        \n                        \n                    \n                \n            \n            \n                \nsaveMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatches\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(a)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch.id);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n    \n      scheduleMatches\n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      \n        {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:'short':'':i18Service.currentLang}}\n          - {{ matchDay.end_date | date:'shortDate'}})\n      \n    \n    \n      \n        {{ match.home_team.name }} - {{ match.guest_team.name }}\n      \n      \n        {{ match.kickoff | date:'short':'':i18Service.currentLang}}\n      \n      \n        ({{ match.pitch?.label }})\n      \n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./match-scheduling.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                    scheduleMatches                  {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove                  ab Spieltag:                                {{ matchDay.number }}                                        {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:\\'short\\':\\'\\':i18Service.currentLang}}          - {{ matchDay.end_date | date:\\'shortDate\\'}})                            {{ match.home_team.name }} - {{ match.guest_team.name }}                    {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}}                    ({{ match.pitch?.label }})                        save      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                locateMatch\n                            \n                            \n                                scheduleMatch\n                            \n                            \n                                submitMatchResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submitResultGQL: SubmitResultGQL, rankingQGL: RankingGQL, scheduleMatchGQL: ScheduleMatchGQL, locateMatchQGL: LocateMatchGQL, seasonService: SeasonService, matchPlanQGL: MatchPlanGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submitResultGQL\n                                                  \n                                                        \n                                                                        SubmitResultGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleMatchGQL\n                                                  \n                                                        \n                                                                        ScheduleMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locateMatchQGL\n                                                  \n                                                        \n                                                                        LocateMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanQGL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMatchPlayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPlayed(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidResult(score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locateMatch\n                        \n                        \n                    \n                \n            \n            \n                \nlocateMatch(matchId: string, pitchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pitchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatch\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatch(matchId: string, matchKickoff: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchKickoff\n                                    \n                                                Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    homeScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubmitResultGQL, RankingGQL, MatchFragment, ScheduleMatchGQL, LocateMatchGQL, MatchPlanGQL, Match } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  constructor(\n    private submitResultGQL: SubmitResultGQL,\n    private rankingQGL: RankingGQL,\n    private scheduleMatchGQL: ScheduleMatchGQL,\n    private locateMatchQGL: LocateMatchGQL,\n    private seasonService: SeasonService,\n    private matchPlanQGL: MatchPlanGQL\n  ) { }\n\n  public isMatchPlayed(match: Match.Fragment): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    const result = { home_score: homeScore, guest_score: guestScore };\n    return new Promise(\n      (resolve, reject) => {\n        this.submitResultGQL.mutate(\n          {\n            match_id: matchId,\n            ...result\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    ...result\n                  }\n                }\n              );\n            },\n            refetchQueries: [\n              {\n                query: this.rankingQGL.document,\n                variables: {\n                  id: this.seasonService.currentSeason.getValue().id\n                }\n              }\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  scheduleMatch(matchId: string, matchKickoff: Date | string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const kickoff = typeof matchKickoff === 'string' ? matchKickoff : matchKickoff.toISOString();\n        this.scheduleMatchGQL.mutate(\n          {\n            match_id: matchId,\n            kickoff: kickoff\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    kickoff: matchKickoff\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  locateMatch(matchId: string, pitchId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.locateMatchQGL.mutate(\n          {\n            match_id: matchId,\n            pitch_id: pitchId\n          },\n          {\n            refetchQueries: [\n              {\n                query: this.matchPlanQGL.document,\n                variables: {\n                  id: this.seasonService.currentSeason.getValue().id\n                }\n              }\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                ./matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchesQGL\n                            \n                            \n                                    Public\n                                matchPlanQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMatchDays\n                            \n                            \n                                filterMatches\n                            \n                            \n                                handleGetMatches\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidePlayed\n                                \n                                \n                                    selectedMatchDayId\n                                \n                                \n                                    selectedTeamId\n                                \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, matchPlanQGL: MatchPlanGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanQGL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatchDays(matchDays: MatchDay.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchDays\n                                    \n                                            MatchDay.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatchDay.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatches\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatches(matches: Match.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            Match.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Match.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGetMatches\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGetMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchesQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchPlanQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchPlanGQL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidePlayed\n                    \n                \n\n                \n                    \n                        gethidePlayed()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:17\n                                \n                            \n\n                \n                    \n                        sethidePlayed(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMatchDayId\n                    \n                \n\n                \n                    \n                        getselectedMatchDayId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:28\n                                \n                            \n\n                \n                    \n                        setselectedMatchDayId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeamId\n                    \n                \n\n                \n                    \n                        getselectedTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:32\n                                \n                            \n\n                \n                    \n                        setselectedTeamId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { I18Service } from '../../services/i18.service';\nimport { Observable } from 'rxjs';\nimport { MatchPlanGQL, MatchPlan, Match, MatchDay } from '../../../api/graphql';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matchesQGL: Observable;\n\n  public get hidePlayed(): boolean {\n    return JSON.parse(localStorage.getItem('HIDE_PLAYED'));\n  }\n  public set hidePlayed(value: boolean) {\n    localStorage.setItem('HIDE_PLAYED', value.toString());\n  }\n\n  public set selectedMatchDayId(value: string) {\n    localStorage.setItem('SELECTED_MATCHDAY', value);\n  }\n\n  public get selectedMatchDayId(): string {\n    return localStorage.getItem('SELECTED_MATCHDAY') || '0';\n  }\n\n  public get selectedTeamId(): string {\n    return localStorage.getItem('SELECTED_TEAM') || '0';\n  }\n\n  public set selectedTeamId(value: string) {\n    localStorage.setItem('SELECTED_TEAM', value);\n  }\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public matchPlanQGL: MatchPlanGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.handleGetMatches();\n    }\n  }\n\n  filterMatchDays(matchDays: MatchDay.Fragment[]): MatchDay.Fragment[] {\n\n    return this.selectedMatchDayId !== '0' ? matchDays.filter(x => x.id === this.selectedMatchDayId) : matchDays;\n\n  }\n\n  filterMatches(matches: Match.Fragment[]): Match.Fragment[] {\n\n    return this.selectedTeamId !== '0' ?\n      matches.filter(x => x.guest_team.id === this.selectedTeamId || x.home_team.id === this.selectedTeamId) :\n      matches;\n\n  }\n\n  handleGetMatches() {\n    this.matchesQGL = this.matchPlanQGL.watch({ id: this.seasonService.currentSeason.getValue().id }).valueChanges.pipe(\n      map(\n        ({ data }) => {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n          if (this.selectedMatchDayId && !data.season.match_days.find(x => x.id === this.selectedMatchDayId)) {\n            this.selectedMatchDayId = '0';\n          }\n          if (this.selectedTeamId && !data.season.teams.find(x => x.id === this.selectedTeamId)) {\n            this.selectedTeamId = '0';\n          }\n          return data.season;\n        }\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ 'ALL_MATCHDAYS' | translate }}\n            \n            \n              {{ matchDay.number }}\n              \n                {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ 'ALL_TEAMS' | translate }}\n            \n            \n              {{ team.name }}\n            \n          \n        \n      \n      \n        \n          filter_list\n          filter_list\n        \n        \n          \n            {{ 'HIDE_PLAYED_MATCHES' | translate }}\n          \n        \n      \n    \n  \n  \n    \n        \n          {{ 'MATCHDAY' | translate:{matchDay: matchDay.number} }}\n        \n        \n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./matchplan.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ \\'ALL_MATCHDAYS\\' | translate }}                                      {{ matchDay.number }}                              {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                      {{ team.name }}                                                            filter_list          filter_list                                      {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                                      {{ \\'MATCHDAY\\' | translate:{matchDay: matchDay.number} }}                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchplanComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            MatchplanRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                ./newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, activatedRoute: ActivatedRoute, formBuilder: FormBuilder, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.setAccessToken({ token: params['token'] });\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.setAccessToken({ token: null });\n          }\n        }\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      await this.authService.changePassword(this.loginForm.value.password);\n      this.authService.logout();\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success'],\n          duration: 30000\n        });\n    } catch (error) {\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('PASSWORD_CHANGED_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger'],\n        duration: 30000\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n                \n                    ./newpassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewpasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NewpasswordRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordChangeGQL.html":{"url":"injectables/PasswordChangeGQL.html","title":"injectable - PasswordChangeGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordChangeGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:826\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetGQL.html":{"url":"injectables/PasswordResetGQL.html","title":"injectable - PasswordResetGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:813\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPitches\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchesQGL: PitchesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchesQGL\n                                                  \n                                                        \n                                                                        PitchesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.pitchesQGL.watch().valueChanges.pipe(\n    map(({data}) => data.allPitches)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pitch, PitchesGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  allPitches: Observable = this.pitchesQGL.watch().valueChanges.pipe(\n    map(({data}) => data.allPitches)\n  );\n\n  constructor(\n    private pitchesQGL: PitchesGQL\n  ) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                ./pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./pitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchesGQL.html":{"url":"injectables/PitchesGQL.html","title":"injectable - PitchesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1065\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingGQL.html":{"url":"injectables/RankingGQL.html","title":"injectable - RankingGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RankingGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1079\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisEventGQL.html":{"url":"injectables/RedisEventGQL.html","title":"injectable - RedisEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RedisEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphqlsubs.ts:52\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveTeamFromSeasonGQL.html":{"url":"injectables/RemoveTeamFromSeasonGQL.html","title":"injectable - RemoveTeamFromSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveTeamFromSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:865\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenameTeamComponent.html":{"url":"components/RenameTeamComponent.html","title":"component - RenameTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RenameTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/rename-team/rename-team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rename-team\n            \n\n            \n                styleUrls\n                ./rename-team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rename-team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, renameTeamGQL: RenameTeamGQL, team: Team.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameTeamGQL\n                                                  \n                                                        \n                                                                        RenameTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    Team.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, RenameTeamGQL, TeamFragment } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-rename-team',\n  templateUrl: './rename-team.component.html',\n  styleUrls: ['./rename-team.component.css']\n})\nexport class RenameTeamComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private renameTeamGQL: RenameTeamGQL,\n    @Inject(MAT_DIALOG_DATA) public team: Team.Fragment\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async renameTeam(newName: string) {\n    try {\n      await this.renameTeamGQL.mutate(\n        {\n          team_id: this.team.id,\n          new_name: newName\n        },\n        {\n          update: (store, { data }) => {\n            const team: any = store.readFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${this.team.id}`\n              }\n            );\n            store.writeFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${this.team.id}`,\n                data: {\n                  __typename: 'Team',\n                  ...team,\n                  name: newName\n                }\n              }\n            );\n          },\n        }\n      ).toPromise();\n      this.dialogRef.close();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ 'TEAM' | translate }} {{team.name}}\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          save\n        \n      \n    \n  \n\n\n  {{'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./rename-team.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'TEAM\\' | translate }} {{team.name}}                                                          save                      {{\\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenameTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenameTeamGQL.html":{"url":"injectables/RenameTeamGQL.html","title":"injectable - RenameTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RenameTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:942\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoundTeam.html":{"url":"interfaces/RoundTeam.html","title":"interface - RoundTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoundTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeam\n                                \n                                \n                                        homeTeam\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeam\n                                    \n                                \n                                \n                                    \n                                        guestTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeam\n                                    \n                                \n                                \n                                    \n                                        homeTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleMatchGQL.html":{"url":"injectables/ScheduleMatchGQL.html","title":"injectable - ScheduleMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:787\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeason\n                            \n                            \n                                seasonsQGL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSeason\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _currentSeason\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allSeasonsListGQL: AllSeasonsListGQL, createSeasonGQL: CreateSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSeasonGQL\n                                                  \n                                                        \n                                                                        CreateSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seasonCompare\n                        \n                        \n                    \n                \n            \n            \n                \nseasonCompare(c1: Season.Fragment, c2: Season.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                            Season.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                            Season.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonsQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.allSeasonsListGQL.watch()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _currentSeason\n                    \n                \n\n                \n                    \n                        get_currentSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:13\n                                \n                            \n\n                \n                    \n                        set_currentSeason(season)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            season\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Season, AllSeasonsList, AllSeasonsListGQL, CreateSeasonGQL } from '../../api/graphql';\nimport * as uuid from 'uuid/v4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  seasonsQGL = this.allSeasonsListGQL.watch();\n\n  private get _currentSeason(): AllSeasonsList.AllSeasons {\n    return JSON.parse(localStorage.getItem('SELECTED_SEASON')) || '';\n  }\n\n  private set _currentSeason(season: AllSeasonsList.AllSeasons) {\n    if (season) {\n      localStorage.setItem('SELECTED_SEASON', JSON.stringify(season));\n    }\n  }\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n\n  constructor(\n    private allSeasonsListGQL: AllSeasonsListGQL,\n    private createSeasonGQL: CreateSeasonGQL\n  ) {\n    this.currentSeason.subscribe(\n      (season) => {\n        if (season) {\n          this._currentSeason = season;\n        }\n      }\n    );\n  }\n\n  public async createSeason(seasonName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.createSeasonGQL.mutate(\n          {\n            id: uuid(),\n            name: seasonName\n          },\n          {\n            refetchQueries: [\n              {query: this.allSeasonsListGQL.document}\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: Season.Fragment, c2: Season.Fragment) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                ./seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterState\n                    \n                \n                \n                    \n                        Default value : SeasonState.Progress\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\nimport { AllSeasonsList, SeasonState } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  @Input() filterState = SeasonState.Progress;\n  season: AllSeasonsList.AllSeasons;\n  seasonList: Observable;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  constructor(public seasonService: SeasonService) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    this.seasonList = this.seasonService.seasonsQGL.valueChanges.pipe(\n      map(\n        ({ data }) => data.allSeasons.filter(s => s.state === this.filterState)\n      )\n    );\n  }\n\n  currentSeasonChanged(event: MatSelectChange) {\n    this.seasonService.currentSeason.next(event.value);\n    this.seasonChanged.emit(event.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ season.name }}\n    \n  \n\n    \n\n    \n                \n                    ./seasonchooser.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nContactComponent\n\nContactComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            SeasonchooserComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ContactComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContactPersonComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SeasonchooserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './components/shared/match/match.component';\nimport { MaterialModule } from './material.module';\nimport { ContactComponent } from './components/shared/contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './components/shared/seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './components/shared/editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './components/shared/editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './components/shared/editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { ContactPersonComponent } from './components/shared/contact-person/contact-person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.message }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartSeasonGQL.html":{"url":"injectables/StartSeasonGQL.html","title":"injectable - StartSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:894\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitResultGQL.html":{"url":"injectables/SubmitResultGQL.html","title":"injectable - SubmitResultGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmitResultGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:766\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                rankingQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRanking\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, ranking: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRanking\n                        \n                        \n                    \n                \n            \n            \n                \ngetRanking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rankingQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Ranking, RankingGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  rankingQGL: Observable;\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    private ranking: RankingGQL) {\n  }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.getRanking();\n    }\n  }\n\n  getRanking() {\n    this.rankingQGL = this.ranking.watch({id: this.seasonService.currentSeason.getValue().id}).valueChanges.pipe(\n      map(({data}) => data.season.ranking)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            TABLE.PLACE\n            TABLE.TEAM\n            TABLE.GAMES\n            TABLE.WIN_DRAW_LOST\n            TABLE.TORE:TORE\n            TABLE.POINTS\n          \n        \n        \n          \n            \n              {{ pos.number }}\n              {{ pos.team.name }}\n              {{ pos.matches }}\n              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n              {{ pos.points }}\n            \n          \n        \n      \n      \n        ({{ ranking.updated_at | date:'medium':'':i18Service.currentLang}})\n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            TABLE.PLACE            TABLE.TEAM            TABLE.GAMES            TABLE.WIN_DRAW_LOST            TABLE.TORE:TORE            TABLE.POINTS                                                              {{ pos.number }}              {{ pos.team.name }}              {{ pos.matches }}              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})              {{ pos.points }}                                                  ({{ ranking.updated_at | date:\\'medium\\':\\'\\':i18Service.currentLang}})                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TableRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TableRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamIdPair.html":{"url":"interfaces/TeamIdPair.html","title":"interface - TeamIdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeamIdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        guest_team_id\n                                \n                                \n                                            Optional\n                                        home_team_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guest_team_id\n                                    \n                                \n                                \n                                    \n                                        guest_team_id:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        home_team_id\n                                    \n                                \n                                \n                                    \n                                        home_team_id:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamsQL: TeamsGQL, allTeamsGQL: AllTeamsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamsQL\n                                                  \n                                                        \n                                                                        TeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTeamsGQL\n                                                  \n                                                        \n                                                                        AllTeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:33\n                \n            \n\n\n            \n                \n                    Calls the API to create a new Team\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/team.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TeamsGQL, Team, AllTeamsGQL } from '../../api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuid from 'uuid/v4';\n\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  allTeams: Observable = this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private teamsQL: TeamsGQL,\n    private allTeamsGQL: AllTeamsGQL\n  ) {\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamName) {\n          reject(new Error('Empty Teamname'));\n        }\n        this.teamsQL.mutate(\n          {\n            id: uuid(),\n            name: teamName\n          },\n          {\n            refetchQueries: [\n              {query: this.allTeamsGQL.document}\n            ]\n          }\n        ).subscribe(\n          async (result) => {\n            resolve();\n          },\n            (error) => {\n              reject(error);\n            }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                ./teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, teamService: TeamService, snackBar: MatSnackBar, translateService: TranslateService, updateTeamContact: UpdateTeamContactGQL, userQGL: UserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTeamContact\n                                                  \n                                                        \n                                                                        UpdateTeamContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmailValidOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmailValidOrEmpty(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveContact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(teamId: string, firstname: string, lastname: string, email: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.authService.user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { UpdateTeamContactGQL, UserGQL } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n  user = this.authService.user;\n\n  constructor(\n    private authService: AuthenticationService,\n    public teamService: TeamService,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private updateTeamContact: UpdateTeamContactGQL,\n    private userQGL: UserGQL\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async saveContact(teamId: string, firstname: string, lastname: string, email: string, phone: string) {\n    try {\n      await this.updateTeamContact.mutate(\n        {\n          team_id: teamId,\n          email: email,\n          first_name: firstname,\n          last_name: lastname,\n          phone: phone\n        },\n        {\n          refetchQueries: [\n            { query: this.userQGL.document }\n          ]\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('TEAM_CONTACT_SAVE_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      {{ 'BUTTON.SAVE' | translate }}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./teamadmin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ \\'BUTTON.SAVE\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamadminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamadminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../../shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/teams/teams.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./teams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsGQL.html":{"url":"injectables/TeamsGQL.html","title":"injectable - TeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:904\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                tournament\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWinner\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tournamentChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tournamentId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(i18Service: I18Service, allTournamentQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWinner\n                        \n                        \n                    \n                \n            \n            \n                \ngetWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tournamentId\n                    \n                \n\n                \n                    \n                        gettournamentId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:17\n                                \n                            \n\n                \n                    \n                        settournamentId(t: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { I18Service } from '../../services/i18.service';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, Tournament } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  tournament: Observable;\n\n  get tournamentId(): string {\n    return localStorage.getItem('SELECTED_TOURNAMENT');\n  }\n  set tournamentId(t: string) {\n    localStorage.setItem('SELECTED_TOURNAMENT', t);\n  }\n\n  constructor(\n    public i18Service: I18Service,\n    private allTournamentQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.tournaments = this.allTournamentQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n    if (this.tournamentId) {\n      this.tournamentChanged();\n    }\n  }\n\n  tournamentChanged() {\n\n    this.tournament = this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).valueChanges.pipe(\n      map(({ data }) => {\n        if (data.tournament.rounds) {\n          data.tournament.rounds = data.tournament.rounds.sort((a, b) => a.number ();\n    // for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    // }\n    // this.matches = this.matches.reverse();\n    // this.getWinner();\n  }\n\n  getWinner() {\n    // this.winnerLastRound = new Array();\n    // if (this.matches[0]) {\n    //   this.matches[0].forEach(\n    //     (match) => {\n    //       if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n    //         this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n    //       }\n    //     });\n    //   this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    // }\n  }\n\n  // newWinner(match: MatchViewModel) {\n  //   if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n  //     if (match.home_score > match.guest_score) {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n  //       this.winnerLastRound.push(match.home_team);\n  //     } else {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n  //       this.winnerLastRound.push(match.guest_team);\n  //     }\n\n  //     this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n    \n  \n  \n    \n      {{ 'NO_TOURNAMENT_ROUNDS_YET' | translate}}\n    \n    \n      \n        \n          {{ 'WINNER_LAST_ROUND' | translate }}\n        \n        \n          \n            {{ winner.name }}\n          \n        \n       -->\n      \n        \n          {{ 'VIERTELFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'HALBFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'FINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ round.number + 1 }}. {{ 'ROUND' | translate }}\n        \n        \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          {{ 'VIERTELFINALE' | translate }}\n          {{ 'HALBFINALE' | translate }}\n          {{ 'FINALE' | translate }}\n          {{ getRound(round[0].match_day_id).number }}. {{ 'ROUND' | translate }}\n        \n        ({{ getRound(round[0].match_day_id).start_date | date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{\n          getRound(round[0].match_day_id).end_date | date:'shortDate':'':i18Service.currentLang }})\n      \n    \n    \n      \n        \n          \n        \n      \n    \n   -->\n\n    \n\n    \n                \n                    ./tournament.component.less\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                        {{ \\'NO_TOURNAMENT_ROUNDS_YET\\' | translate}}                                {{ \\'WINNER_LAST_ROUND\\' | translate }}                                      {{ winner.name }}                         -->                        {{ \\'VIERTELFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'HALBFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'FINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ round.number + 1 }}. {{ \\'ROUND\\' | translate }}                                                                            {{ \\'VIERTELFINALE\\' | translate }}          {{ \\'HALBFINALE\\' | translate }}          {{ \\'FINALE\\' | translate }}          {{ getRound(round[0].match_day_id).number }}. {{ \\'ROUND\\' | translate }}                ({{ getRound(round[0].match_day_id).start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{          getRound(round[0].match_day_id).end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                           -->'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentGQL.html":{"url":"injectables/TournamentGQL.html","title":"injectable - TournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1171\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../../shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTeamContactGQL.html":{"url":"injectables/UpdateTeamContactGQL.html","title":"injectable - UpdateTeamContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTeamContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:917\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGQL.html":{"url":"injectables/UserGQL.html","title":"injectable - UserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1185\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        id\n        ranking {\n          updated_at\n          positions {\n            team {\n              ...Team\n            }\n            sort_index\n            number\n            matches\n            wins\n            draws\n            losses\n            scored_goals\n            conceded_goals\n            points\n          }\n          penalties {\n            team {\n              ...Team\n            }\n            reason\n            created_at\n            points\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        id\n        name\n        state\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        id\n        name\n      }\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allUsersGQL: AllUsersGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allUsersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AllUsersGQL, User } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  allUsers: Observable;\n\n  constructor(\n    private allUsersGQL: AllUsersGQL\n  ) { }\n\n  ngOnInit() {\n    this.allUsers = this.allUsersGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allUsers.sort((a, b) => a.email.toLowerCase() > b.email.toLowerCase() ? 1 : -1))\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        USERNAME\n        FIRST_NAME\n        LAST_NAME\n        USER_ROLE\n        TEAMS\n        \n      \n    \n    \n      \n        \n          {{ user.email }}\n        \n        \n          {{ user.first_name }}\n        \n        \n          {{ user.last_name }}\n        \n        \n          {{ user.role }}\n        \n        \n          \n            {{ team.name }}\n          \n        \n        \n          \n            \n              edit\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./user-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    USERNAME        FIRST_NAME        LAST_NAME        USER_ROLE        TEAMS                                              {{ user.email }}                          {{ user.first_name }}                          {{ user.last_name }}                          {{ user.role }}                                      {{ team.name }}                                                              edit                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddTeamToSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllSeasonsListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTournamentListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllUsersGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateMatchesForSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentRoundGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LatestEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LocateMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchPlanGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordChangeGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordResetGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PitchesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RankingGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveTeamFromSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RenameTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            ScheduleMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            StartSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SubmitResultGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateTeamContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            DatePeriod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            TeamIdPair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            ContactFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            EventFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchDayFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PitchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            SeasonFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TeamFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TournamentFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            UserFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            injectable\n            RedisEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            i18ServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/addteam.component.ts\n            \n            component\n            AddteamComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/rename-team/rename-team.component.ts\n            \n            component\n            RenameTeamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            component\n            ManageseasonComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            component\n            MatchSchedulingComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            IPossibleKickoffs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            ITeamCanPlayAtDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            component\n            AddtournamentroundComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            AddMatchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            RoundTeam\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            component\n            ManagetournamentComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/add-user/add-user.component.ts\n            \n            component\n            AddUserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            component\n            ManageusersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            component\n            ChangepasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            component\n            ContactlistComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            component\n            PitchesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            component\n            MatchplanComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            component\n            NewpasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            component\n            ContactPersonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            component\n            EditmatchPitchComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            component\n            EditmatchResultComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            component\n            EditmatchTimeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            component\n            SeasonchooserComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            interface\n            ISnackBarData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            component\n            TeamadminComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n            guard\n            TeamadminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createApollo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            uri\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            Credentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            LoginContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            injectable\n            GraphqlSubscriptionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            injectable\n            I18Service\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            injectable\n            CustomOwlDateTimeIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            injectable\n            PitchService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            injectable\n            SeasonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.9\n        \n            @angular/cdk : ^7.3.4\n        \n            @angular/common : ^7.2.9\n        \n            @angular/compiler : ^7.2.9\n        \n            @angular/core : ^7.2.9\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.9\n        \n            @angular/http : ^7.2.9\n        \n            @angular/material : ^7.3.4\n        \n            @angular/platform-browser : ^7.2.9\n        \n            @angular/platform-browser-dynamic : ^7.2.9\n        \n            @angular/router : ^7.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/googlemaps : ^3.30.19\n        \n            adm-zip : >=0.4.13\n        \n            apollo-angular : ^1.5.0\n        \n            apollo-angular-link-http : ^1.5.0\n        \n            apollo-cache-inmemory : ^1.5.1\n        \n            apollo-client : ^2.5.1\n        \n            apollo-link-context : ^1.0.17\n        \n            apollo-link-ws : ^1.0.17\n        \n            bootstrap : ^4.3.1\n        \n            codacy-coverage : ^3.4.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.4\n        \n            core-js : ^2.6.5\n        \n            exec : ^0.2.1\n        \n            graphql : ^14.1.1\n        \n            graphql-code-generator : ^0.18.0\n        \n            graphql-codegen-add : ^0.18.0\n        \n            graphql-codegen-fragment-matcher : ^0.18.0\n        \n            graphql-codegen-introspection : ^0.18.0\n        \n            graphql-codegen-typescript-apollo-angular : ^0.18.0\n        \n            graphql-codegen-typescript-client : ^0.18.0\n        \n            graphql-codegen-typescript-common : ^0.18.0\n        \n            graphql-codegen-typescript-server : ^0.18.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.5.1\n        \n            jslint : ^0.12.1\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-pick-datetime : ^7.0.0\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.7\n        \n            queueing-subject : ^0.3.0\n        \n            rxjs : ^6.4.0\n        \n            rxjs-websockets : ^6.0.2\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SeasonState   (src/.../graphql.ts)\n                        \n                        \n                            UserRole   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                Value : preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n                        \n                            \n                                Value : ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 TeamManager\n                            \n                        \n                        \n                            \n                                Value : team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createApollo   (src/.../graphql.module.ts)\n                        \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createApollo\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApollo(httpLink, authService, ownService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpLink\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            i18ServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \ni18ServiceFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddUserComponent->AdminModule\n\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    36 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nImplement rescheduleMatchDay()\nImplement RankingPenalty\nImplement endSeason()\nUpdate Translation\nImplenet CreatePitches\nImplement EventComponent\nImplement Edit User\nImplement Edit Pitches (Overview + Contacts + Delete)\nImplement Cancel Match\nImplement Season History (show old Seasons)\nImplement Rename Teams - done\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _Team   (src/.../graphql.ts)\n                        \n                        \n                            AllPitches   (src/.../graphql.ts)\n                        \n                        \n                            AllSeasons   (src/.../graphql.ts)\n                        \n                        \n                            AllTeams   (src/.../graphql.ts)\n                        \n                        \n                            AllTournaments   (src/.../graphql.ts)\n                        \n                        \n                            AllUsers   (src/.../graphql.ts)\n                        \n                        \n                            AuthenticatedUser   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Date   (src/.../graphql.ts)\n                        \n                        \n                            DateTime   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Event   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            GuestTeam   (src/.../graphql.ts)\n                        \n                        \n                            HomeTeam   (src/.../graphql.ts)\n                        \n                        \n                            LatestEvents   (src/.../graphql.ts)\n                        \n                        \n                            MatchDays   (src/.../graphql.ts)\n                        \n                        \n                            Matches   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Pitch   (src/.../graphql.ts)\n                        \n                        \n                            Positions   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Redisevent   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Rounds   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Subscription   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Tournament   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    _Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllPitches\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllSeasons\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTeams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTournaments\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllUsers\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedUser\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Date\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Event\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuestTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HomeTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LatestEvents\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MatchDays\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Matches\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pitch\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Positions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Rounds\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Season.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tournament\n                \n            \n            \n                \n                        Tournament.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/api/graphqlsubs.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redisevent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContactFragment   (src/.../graphql.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            EventFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchDayFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchFragment   (src/.../graphql.ts)\n                        \n                        \n                            PitchFragment   (src/.../graphql.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            result   (src/.../graphql.ts)\n                        \n                        \n                            result   (src/.../graphqlsubs.ts)\n                        \n                        \n                            SeasonFragment   (src/.../graphql.ts)\n                        \n                        \n                            TeamFragment   (src/.../graphql.ts)\n                        \n                        \n                            TournamentFragment   (src/.../graphql.ts)\n                        \n                        \n                            uri   (src/.../graphql.module.ts)\n                        \n                        \n                            UserFragment   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ContactFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchDayFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PitchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TeamFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TournamentFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  graphqlUrl: 'api/graphql',\n  graphqlWsUrl: 'ws://localhost:4000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  graphqlUrl: 'api/graphql',\n  graphqlWsUrl: `ws://${window.location.hostname}/ws`\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'https://manager.wildeligabremen.de/api',\n    graphqlUrl: 'https://manager.wildeligabremen.de/api/graphql',\n    graphqlWsUrl: 'wss://manager.wildeligabremen.de/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'http://192.168.178.23/api',\n    graphqlUrl: 'http:/192.168.178.23/api/graphql',\n    graphqlWsUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/graphqlsubs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.graphqlUrl\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
