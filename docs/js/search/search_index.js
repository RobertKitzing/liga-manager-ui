var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,0.542,1,3.281]],["body/interfaces/AddMatchData.html",[0,0.922,1,6.017,2,3.028,3,0.12,4,0.12,5,0.109,6,4.862,7,0.899,8,4.343,9,4.862,10,0.331,11,0.6,12,2.1,13,2.148,14,1.8,15,5.664,16,5.579,17,0.546,18,0.008,19,1.666,20,6.089,21,0.906,22,0.193,23,3.588,24,3.028,25,4.579,26,1.987,27,0.744,28,1.945,29,2.867,30,4.141,31,0.12,32,4.494,33,4.141,34,6.389,35,3.965,36,3.965,37,3.538,38,3.669,39,3.312,40,3.1,41,1.908,42,2.161,43,3.402,44,2.591,45,1.242,46,1.835,47,1.506,48,1.766,49,1.732,50,2.072,51,2.867,52,2.867,53,2.941,54,2.655,55,0.158,56,1.835,57,2.112,58,1.765,59,2.148,60,1.597,61,1.536,62,2.103,63,1.597,64,5.217,65,0.131,66,1.66,67,1.536,68,5.217,69,5.217,70,5.217,71,5.217,72,5.217,73,5.217,74,5.217,75,5.217,76,1.506,77,5.217,78,2.414,79,3.666,80,5.217,81,5.217,82,1.194,83,2.367,84,5.217,85,2.098,86,2.529,87,5.217,88,2.655,89,4.579,90,3.028,91,2.414,92,4.862,93,4.862,94,4.141,95,4.862,96,6.356,97,5.217,98,5.217,99,7.135,100,5.217,101,7.135,102,5.217,103,1.597,104,5.217,105,5.217,106,5.217,107,1.603,108,5.217,109,5.217,110,5.217,111,3.211,112,1.832,113,5.217,114,2.161,115,2.029,116,5.217,117,1.536,118,6.356,119,1.566,120,5.217,121,1.566,122,5.217,123,1.566,124,5.217,125,1.566,126,5.217,127,3.211,128,1.484,129,5.217,130,5.217,131,1.316,132,1.082,133,2.655,134,5.217,135,3.965,136,2.116,137,2.232,138,5.217,139,5.217,140,4.83,141,5.217,142,5.217,143,2.867,144,2.257,145,5.217,146,3.312,147,0.005,148,0.006,149,0.005]],["title/injectables/AddRankingPenaltyGQL.html",[150,0.202,151,1.101]],["body/injectables/AddRankingPenaltyGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.004,48,0.614,49,0.603,55,0.185,56,1.362,57,1.004,58,1.508,59,1.004,65,0.192,76,1.529,107,0.558,117,1.655,119,1.829,121,1.462,123,0.664,125,0.664,128,1.776,131,1.926,132,1.616,147,0.002,148,0.003,149,0.002,150,0.413,151,1.024,152,0.569,153,0.651,154,2.342,155,0.477,156,0.459,157,2.329,158,2.46,159,1.789,160,2.152,161,2.144,162,1.947,163,1.925,164,1.685,165,0.252,166,2.719,167,2.357,168,0.639,169,1.721,170,1.106,171,1.064,172,1.085,173,1.085,174,1.085,175,1.024,176,1.024,177,0.69,178,0.69,179,0.677,180,2.371,181,1.106,182,1.963,183,1.688,184,1.688,185,2.244,186,1.085,187,1.085,188,1.721,189,1.085,190,1.925,191,1.085,192,0.704,193,2.053,194,1.491,195,0.704,196,0.704,197,1.064,198,0.704,199,1.55,200,1.52,201,1.064,202,1.55,203,2.111,204,2.111,205,1.963,206,1.55,207,1.688,208,1.52,209,1.52,210,1.085,211,0.704,212,1.106,213,1.106,214,1.367,215,1.367,216,1.367,217,1.085,218,1.106,219,1.106,220,1.52,221,1.064,222,1.52,223,1.064,224,1.085,225,1.106,226,1.106,227,1.085,228,1.52,229,1.407,230,1.963,231,1.901,232,1.52,233,1.721,234,1.085,235,1.551,236,1.085,237,0.704,238,1.52,239,1.755,240,1.064,241,0.771,242,0.948,243,0.626,244,1.898,245,0.69,246,0.664,247,0.9,248,1.655,249,1.004,250,1.024,251,1.315,252,0.894,253,0.69,254,1.064,255,1.688,256,0.69,257,1.064,258,1.721,259,0.69,260,0.69,261,0.825,262,1.341,263,1.044,264,1.621,265,2.129,266,1.085,267,1.085,268,0.771,269,1.085,270,1.085,271,1.593,272,1.5,273,1.085,274,1.085,275,0.9,276,1.004,277,1.52,278,1.085,279,0.677,280,1.064,281,1.064,282,1.29,283,1.085,284,1.085,285,1.315,286,0.704,287,1.085,288,1.085,289,1.085,290,1.085,291,1.085,292,1.085,293,1.407,294,1.064,295,0.677,296,1.5,297,1.217,298,0.493,299,1.024,300,0.664,301,0.704,302,1.023,303,1.315,304,1.794,305,1.315,306,1.29,307,1.315,308,1.064,309,1.064,310,1.064,311,1.064,312,1.315,313,1.315,314,1.315,315,1.064,316,0.677,317,1.747,318,1.714,319,0.664,320,2.291,321,2.361,322,0.664,323,0.704,324,0.704,325,0.664,326,0.704,327,0.704,328,0.664,329,0.704,330,0.704,331,0.651,332,0.704,333,0.704,334,0.651,335,0.704,336,0.704,337,0.664,338,0.664,339,0.704,340,0.704,341,0.664,342,0.664,343,1.085,344,0.664,345,0.704,346,0.704,347,0.677,348,0.704,349,0.704,350,0.677,351,0.704,352,0.704,353,0.677,354,0.704,355,0.677,356,0.704,357,0.664,358,0.704,359,0.704,360,0.677,361,0.704,362,0.704,363,0.664,364,0.704,365,0.704,366,0.651,367,0.651,368,0.704,369,0.704,370,0.664,371,0.704,372,0.704,373,0.664,374,0.704,375,0.704,376,0.664,377,0.704,378,0.704,379,0.664,380,0.664,381,0.664,382,0.704,383,0.704,384,0.677,385,2.145,386,0.704,387,0.704,388,0.639,389,0.704,390,0.704,391,0.639,392,0.704,393,0.704,394,0.614,395,0.704,396,1.367,397,0.639,398,0.704,399,0.651,400,0.58,401,0.704,402,0.651,403,0.664,404,0.704,405,0.704,406,0.626,407,0.651,408,0.677]],["title/injectables/AddTeamToSeasonGQL.html",[150,0.202,347,1.144]],["body/injectables/AddTeamToSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.126,161,2.145,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,1.067,348,1.109,349,1.109,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,409,2.728]],["title/components/AdminComponent.html",[27,0.437,410,1.213]],["body/components/AdminComponent.html",[3,0.124,4,0.124,5,0.113,7,0.679,10,0.342,18,0.008,22,0.163,27,0.813,28,2.127,31,0.124,32,3.532,33,4.276,55,0.124,60,2.457,61,2.364,62,2.442,63,1.983,65,0.135,66,1.714,67,1.908,82,1.591,103,2.207,147,0.005,148,0.006,149,0.005,165,0.739,176,1.908,211,0.629,241,0.797,247,0.729,261,0.877,268,0.797,275,0.877,298,0.764,410,2.34,411,2.276,412,1.97,413,1.93,414,1.93,415,5.877,416,1.93,417,2.103,418,8.544,419,7.966,420,1.835,421,6.622,422,6.622,423,1.526,424,1.855,425,1.526,426,2.322,427,2.322,428,1.93,429,2.585,430,1.93,431,1.93,432,1.783,433,1.93,434,1.783,435,1.855,436,2.644,437,1.783,438,1.93,439,1.748,440,1.855,441,1.748,442,2.322,443,1.748,444,1.93,445,1.783,446,1.93,447,1.783,448,1.855,449,1.783,450,1.783,451,1.93,452,1.783,453,1.93,454,1.783,455,1.93,456,1.783,457,1.748,458,2.322,459,1.93,460,1.783,461,1.748,462,1.93,463,1.783,464,1.93,465,1.783,466,1.93,467,1.783,468,1.93,469,1.818,470,1.93,471,1.783,472,1.93,473,1.783,474,1.93,475,1.783,476,1.93,477,1.783,478,1.93,479,1.748,480,1.93,481,1.714,482,1.93,483,1.748,484,1.93,485,1.783,486,1.93,487,1.783,488,1.93,489,1.93,490,1.783,491,1.93,492,1.681,493,1.93,494,1.748,495,1.93,496,1.748,497,1.93,498,1.783,499,1.93,500,1.748,501,1.93,502,1.783,503,1.855,504,1.93,505,1.93]],["title/guards/AdminGuard.html",[506,3.738,507,3.281]],["body/guards/AdminGuard.html",[3,0.137,4,0.137,5,0.125,10,0.378,17,0.437,18,0.008,22,0.182,31,0.137,55,0.137,65,0.15,67,1.752,82,1.574,83,1.894,144,2.973,147,0.006,148,0.007,149,0.006,150,0.371,165,0.827,211,0.578,317,1.363,318,1.336,420,1.947,423,1.947,507,6.033,508,5.953,509,6.495,510,7.664,511,7.664,512,5.225,513,4.324,514,7.317,515,1.752,516,1.752,517,5.016,518,7.317,519,7.317,520,3.556,521,4.344,522,8.449]],["title/modules/AdminModule.html",[523,1.424,524,3.484]],["body/modules/AdminModule.html",[3,0.123,4,0.123,5,0.112,7,0.812,8,4.446,18,0.008,22,0.198,31,0.123,55,0.123,65,0.134,66,2.429,147,0.005,148,0.006,149,0.005,176,1.572,247,0.873,261,0.873,410,2.427,425,1.513,457,2.477,460,2.526,465,2.475,467,2.475,469,2.525,471,2.475,473,2.475,475,2.475,481,2.38,487,2.526,502,2.475,523,2.034,524,7.47,525,2.471,526,3.287,527,4.262,528,3.39,529,3.39,530,3.287,531,5.827,532,5.827,533,5.827,534,6.565,535,6.565,536,4.904,537,4.227,538,3.501,539,3.501,540,6.565,541,6.447,542,3.281,543,3.201,544,5.827,545,3.898,546,4.239,547,6.565,548,6.565,549,6.565,550,6.565,551,4.688,552,6.565,553,6.565,554,5.341,555,6.565,556,6.565,557,4.978,558,5.827,559,5.341,560,6.565,561,6.565,562,7.925,563,5.341,564,7.034,565,5.659,566,6.565,567,4.239,568,3.898,569,6.565,570,5.827]],["title/modules/AdminRoutingModule.html",[523,1.424,534,3.281]],["body/modules/AdminRoutingModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,27,0.708,31,0.139,55,0.139,65,0.152,147,0.006,148,0.007,149,0.006,302,0.918,410,2.251,507,5.311,520,3.615,525,2.8,534,6.09,542,3.079,543,3.445,544,6.602,571,7.438,572,4.416,573,4.783,574,4.416,575,7.438,576,4.253,577,4.598]],["title/injectables/AllSeasonsListGQL.html",[150,0.202,402,1.101]],["body/injectables/AllSeasonsListGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.11,171,1.067,172,1.088,173,1.088,174,1.088,175,1.027,176,1.027,177,0.693,178,0.693,179,0.679,180,2.371,181,1.11,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.088,218,1.11,219,1.11,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.11,226,1.11,227,1.088,228,1.523,229,1.41,230,1.965,231,1.904,232,1.523,233,1.723,234,1.088,235,1.553,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.629,244,1.9,245,0.693,246,0.666,247,0.901,248,1.658,249,1.007,250,1.027,251,1.318,252,0.897,253,0.693,254,1.318,255,1.831,256,0.693,257,1.067,258,1.723,259,0.693,260,0.693,261,0.826,262,1.344,263,1.047,264,1.624,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.503,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.41,294,1.067,295,0.679,296,1.503,297,1.22,298,0.494,299,1.027,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.318,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.363,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.654,332,0.706,333,0.706,334,0.654,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.654,367,0.654,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.617,395,0.706,396,1.371,397,0.641,398,0.706,399,0.654,400,0.582,401,0.706,402,1.027,403,0.666,404,0.706,405,0.706,406,0.629,407,0.654,408,0.679,578,2.729]],["title/injectables/AllTeamsGQL.html",[150,0.202,403,1.122]],["body/injectables/AllTeamsGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.718,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.701,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.11,171,1.067,172,1.088,173,1.088,174,1.088,175,1.027,176,1.027,177,0.693,178,0.693,179,0.679,180,2.371,181,1.11,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.088,218,1.11,219,1.11,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.11,226,1.11,227,1.088,228,1.523,229,1.41,230,1.965,231,1.904,232,1.523,233,1.723,234,1.088,235,1.553,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.629,244,1.9,245,0.693,246,0.666,247,0.901,248,1.658,249,1.007,250,1.027,251,1.318,252,0.897,253,0.693,254,1.067,255,1.69,256,0.693,257,1.067,258,1.723,259,0.693,260,0.693,261,0.826,262,1.344,263,1.047,264,1.624,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.503,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.41,294,1.067,295,0.679,296,1.503,297,1.22,298,0.494,299,1.027,300,0.666,301,0.706,302,1.023,303,1.318,304,1.847,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.363,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.654,332,0.706,333,0.706,334,0.654,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.654,367,0.654,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.617,395,0.706,396,1.371,397,0.641,398,0.706,399,0.654,400,0.582,401,0.706,402,0.654,403,1.047,404,0.706,405,0.706,406,0.629,407,0.654,408,0.679,579,2.729]],["title/injectables/AllTournamentListGQL.html",[48,1.039,150,0.202]],["body/injectables/AllTournamentListGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.969,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.11,171,1.067,172,1.088,173,1.088,174,1.088,175,1.027,176,1.027,177,0.693,178,0.693,179,0.679,180,2.371,181,1.11,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.088,218,1.11,219,1.11,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.11,226,1.11,227,1.088,228,1.523,229,1.41,230,1.965,231,1.904,232,1.523,233,1.723,234,1.088,235,1.553,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.629,244,1.9,245,0.693,246,0.666,247,0.901,248,1.658,249,1.007,250,1.027,251,1.318,252,0.897,253,0.693,254,1.067,255,1.69,256,0.693,257,1.318,258,1.867,259,0.693,260,0.693,261,0.826,262,1.344,263,1.047,264,1.624,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.503,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.41,294,1.067,295,0.679,296,1.503,297,1.22,298,0.494,299,1.027,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.318,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.363,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.654,332,0.706,333,0.706,334,0.654,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.654,367,0.654,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.617,395,0.706,396,1.371,397,0.641,398,0.706,399,0.654,400,0.582,401,0.706,402,0.654,403,0.666,404,0.706,405,0.706,406,0.629,407,0.654,408,0.679,580,2.729]],["title/injectables/AllUsersGQL.html",[150,0.202,407,1.101]],["body/injectables/AllUsersGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.11,171,1.067,172,1.088,173,1.088,174,1.088,175,1.027,176,1.027,177,0.693,178,0.693,179,0.679,180,2.371,181,1.11,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.088,218,1.11,219,1.11,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.11,226,1.11,227,1.088,228,1.523,229,1.41,230,1.965,231,1.904,232,1.523,233,1.723,234,1.088,235,1.553,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.629,244,1.9,245,0.693,246,0.666,247,0.901,248,1.658,249,1.007,250,1.027,251,1.318,252,0.897,253,0.693,254,1.067,255,1.69,256,0.693,257,1.067,258,1.723,259,0.693,260,0.693,261,0.849,262,1.344,263,1.047,264,1.803,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.503,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.41,294,1.067,295,0.679,296,1.503,297,1.22,298,0.494,299,1.027,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.494,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.363,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.654,332,0.706,333,0.706,334,0.654,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.654,367,0.654,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.617,395,0.706,396,1.371,397,0.641,398,0.706,399,0.654,400,0.582,401,0.706,402,0.654,403,0.666,404,0.706,405,0.706,406,0.629,407,1.027,408,0.679,581,2.729]],["title/components/AppComponent.html",[27,0.437,432,1.237]],["body/components/AppComponent.html",[3,0.099,4,0.099,5,0.09,7,0.542,10,0.273,11,0.531,15,4.979,17,0.53,18,0.008,21,0.913,22,0.193,26,1.639,27,0.734,28,1.919,31,0.099,38,3.997,39,2.732,41,1.574,49,1.966,50,1.709,55,0.099,60,2.434,61,2.342,62,2.284,63,1.723,65,0.108,66,1.369,67,1.657,82,1.289,83,2.296,85,2.317,94,3.417,103,2.036,112,2.487,115,2.439,132,1.301,133,3.192,146,4.873,147,0.004,148,0.005,149,0.004,165,0.863,211,0.646,241,0.692,247,0.9,261,0.762,268,0.692,275,0.762,296,1.594,297,1.219,298,0.61,300,1.292,302,0.854,318,1.264,343,1.343,394,2.004,400,1.744,410,1.397,411,1.977,412,1.574,413,1.542,414,1.542,416,1.542,417,1.826,420,1.594,423,2.006,424,2.29,425,1.219,426,2.017,427,2.017,428,1.542,429,2.384,430,1.542,431,1.542,432,2.201,433,1.542,434,1.424,435,1.482,436,2.474,437,1.863,438,1.542,439,1.397,440,1.482,441,1.397,442,2.017,443,1.397,444,1.542,445,1.424,446,1.542,447,1.424,448,1.482,449,1.424,450,1.424,451,1.542,452,1.424,453,1.542,454,1.424,455,1.542,456,1.424,457,1.397,458,2.017,459,1.542,460,1.424,461,1.397,462,1.542,463,1.863,464,1.542,465,1.424,466,1.542,467,1.424,468,1.542,469,1.453,470,1.542,471,1.424,472,1.542,473,1.424,474,1.542,475,1.424,476,1.542,477,1.424,478,1.542,479,1.397,480,1.542,481,1.369,482,1.542,483,1.397,484,1.542,485,1.424,486,1.542,487,1.424,488,1.542,489,1.542,490,1.424,491,1.542,492,1.343,493,1.542,494,1.397,495,1.542,496,1.397,497,1.542,498,1.424,499,1.542,500,1.397,501,1.542,502,1.424,503,1.482,504,1.542,505,1.542,512,3.778,513,4.007,515,1.657,516,1.657,517,4.855,521,3.141,582,4.696,583,7.71,584,6.919,585,5.248,586,6.059,587,8.177,588,6.919,589,8.177,590,8.177,591,8.705,592,6.904,593,3.86,594,5.055,595,6.006,596,5.727,597,5.483,598,6.919,599,5.291,600,5.291,601,6.919,602,5.291,603,5.291,604,5.291,605,5.291,606,5.291,607,5.291,608,5.291,609,5.291,610,2.246,611,6.141,612,4.696,613,4.696,614,4.011,615,4.696,616,4.011,617,4.304,618,4.696,619,3.271,620,2.822,621,4.011,622,5.291,623,4.696,624,4.696,625,5.291,626,4.696,627,5.291,628,4.304,629,4.696,630,5.291,631,5.291,632,5.291,633,6.919,634,5.291,635,5.291,636,5.291,637,5.291,638,5.291,639,5.291,640,5.291,641,5.291,642,5.291,643,5.291,644,5.291,645,5.291,646,5.629,647,5.291,648,4.686,649,4.979,650,4.979,651,5.291,652,5.629,653,5.291,654,6.919,655,6.919,656,6.919,657,6.919,658,6.919,659,6.919,660,6.141,661,2.997,662,6.919,663,6.919,664,6.141,665,6.919,666,6.919,667,6.919,668,6.919,669,6.919,670,7.71,671,7.71,672,6.843,673,5.291,674,6.843,675,5.291,676,7.71,677,5.291,678,5.291,679,5.291,680,6.141,681,8.177,682,6.919,683,6.141,684,5.291,685,6.919,686,6.919,687,6.919,688,6.919,689,6.919,690,6.919,691,8.705,692,6.919,693,6.919,694,5.291,695,6.919,696,5.291,697,6.919,698,6.919,699,4.696,700,5.291,701,5.291,702,5.291,703,5.291]],["title/modules/AppCoreModule.html",[523,1.424,704,3.112]],["body/modules/AppCoreModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,31,0.139,35,4.601,36,4.601,37,4.106,41,2.214,42,2.508,55,0.139,65,0.152,147,0.006,148,0.007,149,0.006,525,2.801,529,3.843,542,3.081,543,3.447,704,5.778,705,6.055,706,7.443,707,7.573,708,6.469,709,7.443,710,6.055,711,7.443,712,6.606,713,7.443]],["title/modules/AppModule.html",[523,1.424,714,3.484]],["body/modules/AppModule.html",[3,0.123,4,0.123,5,0.112,18,0.008,22,0.199,26,2.037,31,0.123,38,3.709,39,3.395,41,2.36,42,2.216,55,0.16,61,1.575,65,0.134,144,2.791,147,0.005,148,0.006,149,0.005,425,1.515,432,2.579,437,2.526,463,2.526,492,2.162,513,4.343,521,3.904,523,2.037,525,2.475,526,3.292,527,4.265,528,4.399,529,4.399,530,3.292,537,4.23,538,3.507,539,3.507,541,6.453,542,3.284,543,3.204,545,3.904,596,5.501,612,5.836,613,5.836,620,3.507,623,5.836,710,5.349,712,7.04,714,7.376,715,5.836,716,5.836,717,5.836,718,5.836,719,5.836,720,6.567,721,6.567,722,6.229,723,5.349,724,7.932,725,7.04,726,5.349,727,8.518,728,7.932,729,6.575,730,6.575,731,7.932,732,5.836,733,5.836,734,5.836,735,7.932,736,4.453,737,7.04,738,7.04,739,3.395,740,6.575,741,4.065,742,6.575,743,6.575,744,6.575,745,5.836,746,6.575,747,7.932,748,6.575,749,7.04,750,5.836,751,7.932,752,5.836,753,6.575,754,7.932,755,5.349,756,7.932,757,7.932,758,4.23,759,5.349]],["title/modules/AppRoutingModule.html",[523,1.424,720,3.281]],["body/modules/AppRoutingModule.html",[3,0.135,4,0.135,5,0.122,7,0.737,18,0.008,22,0.186,31,0.135,55,0.157,65,0.147,147,0.006,148,0.007,149,0.006,176,1.721,243,1.927,302,0.887,507,6.315,510,7.195,511,7.195,520,3.493,525,2.706,530,3.599,542,2.976,543,3.378,572,4.268,573,4.46,574,4.965,576,5.448,705,5.848,720,5.971,760,7.188,761,7.029,762,7.188,763,7.188,764,7.188,765,7.188,766,5.848,767,5.45,768,9.467,769,7.188,770,7.188,771,7.188,772,4.868,773,7.188,774,7.188,775,7.188,776,7.188,777,5.848,778,7.188,779,7.188]],["title/interfaces/AppsettingsModel.html",[0,0.542,780,3.484]],["body/interfaces/AppsettingsModel.html",[0,0.849,2,3.398,3,0.135,4,0.135,5,0.123,10,0.372,11,0.642,17,0.528,18,0.008,21,1.03,22,0.171,31,0.135,55,0.157,65,0.147,78,2.709,112,2.056,114,2.425,115,2.276,133,2.979,136,2.76,137,2.391,144,2.532,147,0.006,148,0.007,149,0.006,150,0.367,317,1.34,318,1.314,596,4.647,736,4.874,780,6.708,781,5.854,782,8.085,783,8.085,784,8.085,785,7.853,786,6.387,787,5.138,788,5.854,789,6.387,790,6.387,791,6.387,792,6.387,793,4.968,794,4.449,795,4.449,796,6.387,797,6.387,798,6.387,799,4.449]],["title/injectables/AppsettingsService.html",[150,0.202,596,2.968]],["body/injectables/AppsettingsService.html",[0,0.841,3,0.134,4,0.134,5,0.121,10,0.368,11,0.639,17,0.497,18,0.008,21,0.948,22,0.17,31,0.134,55,0.156,65,0.146,78,2.683,82,1.328,112,2.518,114,2.402,115,2.255,133,2.951,136,2.745,137,2.378,144,2.509,147,0.006,148,0.007,149,0.006,150,0.365,152,1.492,165,0.843,211,0.563,317,1.328,318,1.302,420,1.917,423,1.917,515,1.707,516,1.707,596,5.374,736,4.828,780,6.683,781,5.8,782,6.328,783,6.328,784,6.328,785,8.314,786,7.823,787,5.09,788,7.389,789,6.328,790,6.328,791,6.328,792,8.061,793,5.233,794,4.407,795,4.407,796,6.328,797,6.328,798,6.328,799,4.407,800,7.129,801,8.322,802,7.129,803,7.129]],["title/injectables/AuthenticationService.html",[150,0.202,513,2.17]],["body/injectables/AuthenticationService.html",[0,0.708,3,0.112,4,0.112,5,0.102,10,0.31,11,0.576,17,0.545,18,0.008,21,1.032,22,0.184,31,0.112,41,1.786,55,0.141,65,0.123,78,3.387,82,1.397,83,2.284,85,2.24,107,1.811,112,2.571,137,2.338,143,2.685,144,3.248,147,0.006,148,0.006,149,0.005,150,0.329,152,1.256,155,1.054,156,1.013,165,0.879,175,1.438,193,1.885,194,1.495,197,1.495,211,0.697,229,1.411,261,0.944,302,0.741,317,1.118,318,1.097,331,2.053,334,2.053,406,1.975,420,1.729,423,2.073,424,1.682,513,3.864,515,2.113,516,2.113,520,2.918,610,2.549,619,3.713,620,3.203,649,3.878,650,3.878,736,4.067,772,5.542,793,5.623,794,5.563,795,5.454,799,5.059,804,4.553,805,7.263,806,6.659,807,7.503,808,7.608,809,7.503,810,7.608,811,7.503,812,5.357,813,7.263,814,7.263,815,7.263,816,6.005,817,7.987,818,6.657,819,7.263,820,7.263,821,8.102,822,6.005,823,6.659,824,7.177,825,6.005,826,4.067,827,6.659,828,6.005,829,5.689,830,6.005,831,6.659,832,6.499,833,6.005,834,5.542,835,6.005,836,6.659,837,6.005,838,6.659,839,6.005,840,6.659,841,6.005,842,6.005,843,6.005,844,6.005,845,6.005,846,6.005,847,6.005,848,6.104,849,6.104,850,4.885,851,3.566,852,4.553,853,4.553,854,4.885,855,5.33,856,7.321,857,5.33,858,5.33,859,6.104,860,5.33,861,6.659,862,5.33,863,5.33,864,6.204,865,6.659,866,5.33,867,6.659,868,5.33,869,5.33,870,5.33,871,5.33,872,6.104,873,4.885,874,4.845,875,4.885,876,5.33,877,5.33,878,4.553,879,5.33,880,5.33,881,5.33,882,4.885,883,5.33,884,5.33]],["title/components/CancelMatchDialogComponent.html",[27,0.437,434,1.237]],["body/components/CancelMatchDialogComponent.html",[3,0.11,4,0.11,5,0.1,7,0.605,10,0.305,11,0.569,17,0.509,18,0.008,21,0.873,22,0.183,23,4.031,24,2.786,26,1.828,27,0.773,28,2.021,29,2.637,31,0.11,40,3.346,41,1.755,42,1.988,50,1.906,53,3.206,54,2.442,55,0.11,60,2.446,61,2.353,62,2.363,63,1.847,65,0.121,66,1.527,67,1.777,82,1.382,83,2.272,85,2.23,86,3.461,88,3.36,90,3.504,103,2.12,112,2.319,114,1.988,115,1.866,127,2.954,128,1.12,131,1.211,132,0.996,133,2.442,136,1.946,137,2.12,147,0.005,148,0.006,149,0.005,162,1.907,165,0.814,182,1.469,191,1.883,211,0.672,241,0.974,242,1.888,247,0.65,261,0.817,268,0.742,275,0.817,298,0.68,328,2.22,394,2.055,410,1.557,411,2.12,412,1.755,413,1.72,414,1.72,416,1.72,417,1.958,420,1.709,423,1.709,424,1.652,425,1.359,426,2.163,427,2.163,428,1.72,429,2.483,430,1.72,431,1.72,432,1.588,433,1.72,434,2.293,435,2.576,436,2.558,437,1.588,438,1.72,439,1.557,440,1.652,441,1.557,442,2.163,443,1.557,444,1.72,445,1.588,446,1.72,447,1.588,448,1.652,449,1.588,450,1.588,451,1.72,452,1.588,453,1.72,454,1.588,455,1.72,456,1.588,457,1.557,458,2.163,459,1.72,460,1.588,461,1.557,462,1.72,463,1.588,464,1.72,465,1.588,466,1.72,467,1.588,468,1.72,469,1.62,470,1.72,471,1.588,472,1.72,473,1.588,474,1.72,475,1.588,476,1.72,477,1.588,478,1.72,479,1.557,480,1.72,481,1.527,482,1.72,483,1.557,484,1.72,485,1.588,486,1.72,487,1.588,488,1.72,489,1.72,490,1.588,491,1.72,492,1.497,493,1.72,494,1.557,495,1.72,496,1.557,497,1.72,498,1.588,499,1.72,500,1.557,501,1.72,502,1.588,503,1.652,504,1.72,505,1.72,515,1.777,516,1.777,585,5.199,593,3.715,610,2.504,618,5.236,648,3.995,661,3.085,885,7.951,886,6.792,887,3.81,888,5.497,889,5.025,890,4.473,891,5.236,892,7.42,893,5.899,894,4.799,895,5.236,896,4.799,897,5.236,898,5.899,899,5.899,900,5.899,901,5.236,902,5.899,903,5.899,904,3.81,905,5.899,906,7.42,907,4.405,908,4.405,909,7.42,910,7.42,911,5.625,912,6.585]],["title/injectables/CancelMatchGQL.html",[150,0.202,328,1.122]],["body/injectables/CancelMatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.948,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,2.003,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,1.046,329,1.109,330,1.109,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,913,2.728]],["title/components/ChangepasswordComponent.html",[27,0.437,437,1.237]],["body/components/ChangepasswordComponent.html",[3,0.115,4,0.115,5,0.105,7,0.63,10,0.317,11,0.584,17,0.53,18,0.008,22,0.177,23,4.079,26,1.904,27,0.787,28,2.058,31,0.115,55,0.115,60,2.45,61,2.357,62,2.391,63,1.895,65,0.126,66,1.59,67,1.822,78,2.864,82,1.417,83,1.59,85,2.058,86,3.503,103,2.151,112,2.362,114,2.07,115,1.944,136,2.027,137,1.755,143,3.402,147,0.005,148,0.006,149,0.005,165,0.851,211,0.653,241,0.761,247,0.677,261,0.838,268,0.761,275,0.838,298,0.709,410,1.622,411,2.174,412,1.828,413,1.791,414,1.791,416,1.791,417,2.009,420,1.753,423,1.753,424,1.721,425,1.416,426,2.218,427,2.218,428,1.791,429,2.519,430,1.791,431,1.791,432,1.654,433,1.791,434,1.654,435,1.721,436,2.589,437,2.326,438,1.791,439,1.622,440,1.721,441,1.622,442,2.218,443,1.622,444,1.791,445,1.654,446,1.791,447,1.654,448,1.721,449,1.654,450,1.654,451,1.791,452,1.654,453,1.791,454,1.654,455,1.791,456,1.654,457,1.622,458,2.218,459,1.791,460,1.654,461,1.622,462,1.791,463,1.654,464,1.791,465,1.654,466,1.791,467,1.654,468,1.791,469,1.687,470,1.791,471,1.654,472,1.791,473,1.654,474,1.791,475,1.654,476,1.791,477,1.654,478,1.791,479,1.622,480,1.791,481,1.59,482,1.791,483,1.622,484,1.791,485,1.654,486,1.791,487,1.654,488,1.791,489,1.791,490,1.654,491,1.791,492,1.56,493,1.791,494,1.622,495,1.791,496,1.622,497,1.791,498,1.654,499,1.791,500,1.622,501,1.791,502,1.654,503,1.721,504,1.791,505,1.791,512,4.387,513,4.08,515,1.471,516,1.471,517,4.518,521,3.648,661,3.192,739,3.173,758,3.277,772,5.599,806,8.032,824,6.726,874,3.968,904,3.968,914,5.453,915,8.268,916,7.61,917,8.268,918,7.61,919,6.144,920,6.144,921,6.144,922,5.671,923,6.144,924,6.144,925,3.968,926,6.144,927,5.154,928,5.453,929,6.144,930,6.144,931,6.144,932,7.61,933,4.998,934,3.798,935,7.67,936,7.67,937,7.61,938,6.755]],["title/components/ConfirmDialogComponent.html",[27,0.437,439,1.213]],["body/components/ConfirmDialogComponent.html",[0,0.749,3,0.119,4,0.119,5,0.108,7,0.651,10,0.328,11,0.596,17,0.464,18,0.008,21,0.683,22,0.159,24,2.997,26,1.967,27,0.798,28,2.088,29,2.838,31,0.119,55,0.145,60,2.453,61,2.36,62,2.413,63,1.933,65,0.13,66,1.643,67,1.859,82,1.446,85,2.088,90,3.666,91,3.29,103,2.176,147,0.005,148,0.006,149,0.005,165,0.778,211,0.662,241,0.777,247,0.699,261,0.855,268,0.777,275,0.855,298,0.732,410,1.676,411,2.218,412,1.888,413,1.85,414,1.85,416,1.85,417,2.05,420,1.789,423,1.463,424,1.778,425,1.463,426,2.263,427,2.263,428,1.85,429,2.548,430,1.85,431,1.85,432,1.709,433,1.85,434,1.709,435,1.778,436,2.613,437,1.709,438,1.85,439,2.307,440,2.612,441,1.676,442,2.263,443,1.676,444,1.85,445,1.709,446,1.85,447,1.709,448,1.778,449,1.709,450,1.709,451,1.85,452,1.709,453,1.85,454,1.709,455,1.85,456,1.709,457,1.676,458,2.263,459,1.85,460,1.709,461,1.676,462,1.85,463,1.709,464,1.85,465,1.709,466,1.85,467,1.709,468,1.85,469,1.743,470,1.85,471,1.709,472,1.85,473,1.709,474,1.85,475,1.709,476,1.85,477,1.709,478,1.85,479,1.676,480,1.85,481,1.643,482,1.85,483,1.676,484,1.85,485,1.709,486,1.85,487,1.709,488,1.85,489,1.85,490,1.709,491,1.85,492,1.611,493,1.85,494,1.676,495,1.85,496,1.676,497,1.85,498,1.709,499,1.85,500,1.676,501,1.85,502,1.709,503,1.778,504,1.85,505,1.85,515,1.52,516,1.52,593,3.887,610,2.694,661,3.141,887,4.099,888,5.681,889,5.258,891,5.634,896,5.164,939,6.24,940,5.189,941,5.164,942,6.797,943,5.634,944,3.278,945,7.764,946,6.891,947,7.764,948,7.764]],["title/interfaces/ConfirmDialogComponentData.html",[0,0.542,942,3.484]],["body/interfaces/ConfirmDialogComponentData.html",[0,0.87,2,3.481,3,0.138,4,0.138,5,0.126,10,0.381,11,0.651,17,0.44,18,0.008,21,0.961,22,0.173,24,3.481,26,2.284,27,0.808,28,2.112,29,3.295,31,0.138,55,0.159,60,1.835,61,1.765,63,1.835,65,0.151,67,1.765,82,1.373,85,1.835,90,3.481,91,2.774,103,1.835,147,0.006,148,0.007,149,0.006,417,1.946,439,1.946,440,2.502,593,3.69,887,4.76,888,4.992,889,4.992,939,5.263,940,4.376,942,6.774,944,4.74]],["title/components/ContactComponent.html",[27,0.437,441,1.213]],["body/components/ContactComponent.html",[0,0.748,3,0.119,4,0.119,5,0.108,7,0.65,10,0.327,11,0.595,14,1.301,17,0.501,18,0.008,22,0.171,23,4.116,24,2.993,26,1.964,27,0.798,28,2.087,29,2.833,31,0.119,45,1.227,50,2.047,55,0.119,58,1.276,60,2.453,61,2.36,62,2.412,63,1.931,65,0.13,66,1.641,67,1.858,82,1.445,85,2.27,86,3.445,90,3.663,91,3.373,103,2.175,147,0.005,148,0.006,149,0.005,165,0.811,211,0.662,241,0.776,247,0.698,252,1.326,261,0.854,268,0.874,275,1.004,298,0.731,410,1.673,411,2.216,412,1.885,413,1.848,414,1.848,416,1.848,417,2.048,420,1.787,423,1.46,424,1.775,425,1.46,426,2.261,427,2.261,428,1.848,429,2.546,430,1.848,431,1.848,432,1.706,433,1.848,434,1.706,435,1.775,436,2.612,437,1.706,438,1.848,439,1.673,440,1.775,441,2.306,442,2.261,443,1.673,444,1.848,445,1.706,446,1.848,447,1.706,448,1.775,449,1.706,450,1.706,451,1.848,452,1.706,453,1.848,454,1.706,455,1.848,456,1.706,457,1.673,458,2.261,459,1.848,460,1.706,461,1.673,462,1.848,463,1.706,464,1.848,465,1.706,466,1.848,467,1.706,468,1.848,469,1.74,470,1.848,471,1.706,472,1.848,473,1.706,474,1.848,475,1.706,476,1.848,477,1.706,478,1.848,479,1.673,480,1.848,481,1.641,482,1.848,483,1.673,484,1.848,485,1.706,486,1.848,487,1.706,488,1.848,489,1.848,490,1.706,491,1.848,492,1.609,493,1.848,494,1.673,495,1.848,496,1.673,497,1.848,498,1.706,499,1.848,500,1.673,501,1.848,502,1.706,503,1.775,504,1.848,505,1.848,515,1.518,516,1.518,610,2.69,661,3.008,949,5.156,950,6.82,951,6.311,952,5.626,953,6.794,954,6.338,955,6.338,956,6.338,957,6.338,958,4.606,959,7.757,960,6.885]],["title/interfaces/ContactComponentData.html",[0,0.542,953,3.484]],["body/interfaces/ContactComponentData.html",[0,0.864,2,3.457,3,0.137,4,0.137,5,0.125,10,0.378,11,0.649,14,1.88,17,0.505,18,0.008,22,0.182,23,3.882,24,3.457,26,2.269,27,0.804,28,2.104,29,3.273,31,0.137,45,1.418,50,2.365,55,0.137,58,1.794,60,1.823,61,1.753,63,1.823,65,0.15,67,1.753,82,1.363,85,2.104,86,2.887,90,3.457,91,2.756,103,1.823,147,0.006,148,0.007,149,0.006,252,1.864,268,0.932,275,0.806,417,1.933,441,1.933,949,5.956,950,5.956,951,5.956,953,6.756]],["title/components/ContactPersonComponent.html",[27,0.437,445,1.237]],["body/components/ContactPersonComponent.html",[3,0.121,4,0.121,5,0.11,7,0.663,10,0.334,17,0.386,18,0.008,22,0.16,27,0.805,28,2.105,31,0.121,50,2.088,55,0.121,60,2.455,61,2.361,62,2.426,63,1.954,65,0.132,66,1.673,67,1.88,82,1.575,103,2.189,147,0.005,148,0.006,149,0.005,165,0.785,211,0.62,241,0.785,247,0.712,261,0.864,268,0.785,275,1.056,276,1.844,298,0.745,410,1.706,411,2.243,412,1.923,413,1.884,414,1.884,416,1.884,417,2.072,420,1.809,423,1.489,424,1.81,425,1.489,426,2.289,427,2.289,428,1.884,429,2.564,430,1.884,431,1.884,432,1.74,433,1.884,434,1.74,435,1.81,436,2.627,437,1.74,438,1.884,439,1.706,440,1.81,441,1.706,442,2.289,443,1.706,444,1.884,445,2.367,446,1.884,447,1.74,448,1.81,449,1.74,450,1.74,451,1.884,452,1.74,453,1.884,454,1.74,455,1.884,456,1.74,457,1.706,458,2.289,459,1.884,460,1.74,461,1.706,462,1.884,463,1.74,464,1.884,465,1.74,466,1.884,467,1.74,468,1.884,469,1.775,470,1.884,471,1.74,472,1.884,473,1.74,474,1.884,475,1.74,476,1.884,477,1.74,478,1.884,479,1.706,480,1.884,481,1.673,482,1.884,483,1.706,484,1.884,485,1.74,486,1.884,487,1.74,488,1.884,489,1.884,490,1.74,491,1.884,492,1.641,493,1.884,494,1.706,495,1.884,496,1.706,497,1.884,498,1.74,499,1.884,500,1.706,501,1.884,502,1.74,503,1.81,504,1.884,505,1.884,661,2.703,664,7.805,961,7.805,962,7.154,963,5.737,964,8.456,965,7.851,966,5.317,967,7.851,968,6.464,969,4.854,970,7.851,971,7.851,972,7.851,973,7.851,974,7.851,975,7.851,976,6.387]],["title/components/ContactlistComponent.html",[27,0.437,443,1.213]],["body/components/ContactlistComponent.html",[3,0.124,4,0.124,5,0.113,7,0.681,10,0.343,18,0.008,22,0.136,27,0.814,28,2.13,31,0.124,55,0.124,60,2.457,61,2.364,62,2.444,63,1.987,65,0.136,66,1.719,67,1.911,82,1.593,103,2.209,147,0.005,148,0.006,149,0.005,165,0.741,211,0.63,241,0.798,247,0.731,261,0.879,268,0.798,275,0.879,298,0.766,410,1.753,411,2.28,412,1.976,413,1.936,414,1.936,416,1.936,417,2.107,420,1.839,423,1.53,424,1.86,425,1.53,426,2.326,427,2.326,428,1.936,429,2.587,430,1.936,431,1.936,432,1.788,433,1.936,434,1.788,435,1.86,436,2.647,437,1.788,438,1.936,439,1.753,440,1.86,441,1.753,442,2.326,443,2.343,444,1.936,445,1.788,446,1.936,447,1.788,448,1.86,449,1.788,450,1.788,451,1.936,452,1.788,453,1.936,454,1.788,455,1.936,456,1.788,457,1.753,458,2.326,459,1.936,460,1.788,461,1.753,462,1.936,463,1.788,464,1.936,465,1.788,466,1.936,467,1.788,468,1.936,469,1.824,470,1.936,471,1.788,472,1.936,473,1.788,474,1.936,475,1.788,476,1.936,477,1.788,478,1.936,479,1.753,480,1.936,481,1.719,482,1.936,483,1.753,484,1.936,485,1.788,486,1.936,487,1.788,488,1.936,489,1.936,490,1.788,491,1.936,492,1.686,493,1.936,494,1.753,495,1.936,496,1.753,497,1.936,498,1.788,499,1.936,500,1.753,501,1.936,502,1.788,503,1.86,504,1.936,505,1.936,977,5.895,978,7.083,979,8.556,980,7.981,981,6.642,982,6.642]],["title/modules/ContactlistModule.html",[523,1.424,983,3.484]],["body/modules/ContactlistModule.html",[3,0.135,4,0.135,5,0.123,18,0.008,22,0.192,31,0.135,55,0.135,65,0.147,147,0.006,148,0.007,149,0.006,250,1.725,425,1.66,443,2.478,485,2.528,498,2.528,523,2.232,525,2.712,526,3.607,527,4.432,528,3.72,529,3.72,530,3.607,536,5.007,537,4.466,538,3.842,539,3.842,542,3.466,543,3.382,545,4.277,546,4.652,978,6.394,983,7.374,984,6.394,985,6.394,986,6.394,987,6.704,988,7.204,989,6.394,990,7.204]],["title/modules/ContactlistRoutingModule.html",[523,1.424,987,3.281]],["body/modules/ContactlistRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,147,0.006,148,0.007,149,0.006,302,0.92,443,2.255,520,3.625,525,2.808,542,3.088,543,3.451,572,4.429,573,4.788,574,4.429,576,4.265,577,4.612,987,6.1,989,6.621,991,7.46]],["title/injectables/CreateMatchesForSeasonGQL.html",[150,0.202,353,1.144]],["body/injectables/CreateMatchesForSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.733,13,1.409,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,107,0.56,117,1.657,119,1.83,121,1.464,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.57,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.14,161,2.112,162,1.854,163,1.795,164,1.553,165,0.253,167,2.358,168,0.64,169,1.802,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.493,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.553,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.771,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.9,248,1.657,249,1.006,250,1.026,251,1.318,252,0.896,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.825,262,1.343,263,1.046,264,1.623,265,2.129,266,1.088,267,1.088,268,0.771,269,1.088,270,1.088,271,1.594,272,1.502,273,1.088,274,1.088,275,0.9,276,1.006,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.292,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.219,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.795,305,1.318,306,1.292,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.291,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,1.067,354,1.109,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.64,389,0.706,390,0.706,391,0.64,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.64,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,992,2.727]],["title/components/CreatePitchDialogComponent.html",[27,0.437,447,1.237]],["body/components/CreatePitchDialogComponent.html",[3,0.107,4,0.107,5,0.097,7,0.583,10,0.294,11,0.556,17,0.53,18,0.008,22,0.184,23,3.86,26,1.763,27,0.76,28,1.987,30,3.675,31,0.107,40,3.319,41,1.693,42,1.918,50,1.838,53,3.164,54,2.356,55,0.107,60,2.442,61,2.349,62,2.337,63,1.805,65,0.116,66,1.473,67,1.737,78,2.73,82,1.351,83,2.247,86,3.148,88,3.304,103,2.093,112,2.281,114,1.918,115,1.8,136,1.877,137,2.072,143,3.242,147,0.004,148,0.006,149,0.004,155,0.999,156,0.96,165,0.862,207,1.389,211,0.63,241,0.726,247,0.627,250,1.363,261,0.799,268,0.978,275,0.799,298,0.656,302,0.895,410,1.502,411,2.072,412,1.693,413,1.659,414,1.659,416,1.659,417,1.914,420,1.671,423,1.839,424,2.031,425,1.311,426,2.114,427,2.114,428,1.659,429,2.45,430,1.659,431,1.659,432,1.532,433,1.659,434,1.532,435,1.594,436,2.531,437,1.532,438,1.659,439,1.502,440,1.594,441,1.502,442,2.114,443,1.502,444,1.659,445,1.532,446,1.659,447,2.263,448,2.558,449,1.532,450,1.532,451,1.659,452,1.532,453,1.659,454,1.532,455,1.659,456,1.532,457,1.502,458,2.114,459,1.659,460,1.532,461,1.502,462,1.659,463,1.532,464,1.659,465,1.532,466,1.659,467,1.532,468,1.659,469,1.562,470,1.659,471,1.532,472,1.659,473,1.532,474,1.659,475,1.532,476,1.659,477,1.532,478,1.659,479,1.502,480,1.659,481,1.473,482,1.659,483,1.502,484,1.659,485,1.532,486,1.659,487,1.532,488,1.659,489,1.659,490,1.532,491,1.659,492,1.445,493,1.659,494,1.502,495,1.659,496,1.502,497,1.659,498,1.532,499,1.659,500,1.502,501,1.659,502,1.532,503,1.594,504,1.659,505,1.659,515,1.363,516,1.363,593,3.631,610,2.415,661,3.2,739,2.939,758,3.035,887,3.675,888,5.406,889,4.912,895,5.051,896,4.629,904,3.675,922,5.196,925,3.675,927,4.912,943,5.051,993,8.301,994,6.678,995,7.982,996,7.982,997,7.982,998,7.982,999,7.982,1000,7.982,1001,8.406,1002,6.838,1003,5.051,1004,6.73,1005,5.157,1006,5.9,1007,5.051,1008,5.691,1009,5.691,1010,7.252,1011,5.051,1012,7.252,1013,5.691,1014,5.051,1015,5.051,1016,5.691,1017,5.691,1018,4.629,1019,5.691,1020,5.691,1021,5.691,1022,5.691,1023,5.691,1024,5.691,1025,5.691,1026,5.691,1027,5.691,1028,5.691,1029,5.691,1030,5.691,1031,7.252,1032,5.691,1033,5.691,1034,5.691,1035,5.691,1036,5.691,1037,5.691,1038,5.691,1039,5.691,1040,5.691,1041,7.252,1042,7.252,1043,7.252,1044,7.252,1045,7.252,1046,7.252,1047,6.437]],["title/injectables/CreatePitchGQL.html",[150,0.202,342,1.122]],["body/injectables/CreatePitchGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.005,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.558,117,1.656,119,1.829,121,1.463,123,0.664,125,0.664,128,1.776,131,1.926,132,1.616,147,0.002,148,0.003,149,0.002,150,0.413,151,0.652,152,0.569,153,0.652,154,2.343,155,0.478,156,0.459,157,2.329,158,2.46,159,1.551,160,2.109,161,2.111,162,1.853,163,1.794,164,1.551,165,0.252,167,2.358,168,0.639,169,1.721,170,1.107,171,1.065,172,1.086,173,1.086,174,1.086,175,1.024,176,1.024,177,0.691,178,0.691,179,0.677,180,2.371,181,1.107,182,1.963,183,1.688,184,1.688,185,2.244,186,1.086,187,1.086,188,1.721,189,1.086,190,1.926,191,1.086,192,0.704,193,2.053,194,1.491,195,0.704,196,0.704,197,1.065,198,0.704,199,1.551,200,1.521,201,1.065,202,1.551,203,2.111,204,2.111,205,1.963,206,1.79,207,1.882,208,1.836,209,1.836,210,1.086,211,0.704,212,1.107,213,1.107,214,1.368,215,1.368,216,1.368,217,1.086,218,1.107,219,1.107,220,1.521,221,1.065,222,1.521,223,1.065,224,1.086,225,1.107,226,1.107,227,1.086,228,1.521,229,1.407,230,1.963,231,1.902,232,1.521,233,1.721,234,1.086,235,1.551,236,1.086,237,0.704,238,1.521,239,1.755,240,1.065,241,0.771,242,0.948,243,0.627,244,1.899,245,0.691,246,0.664,247,0.9,248,1.656,249,1.005,250,1.024,251,1.316,252,0.895,253,0.691,254,1.065,255,1.688,256,0.691,257,1.065,258,1.721,259,0.691,260,0.691,261,0.825,262,1.342,263,1.044,264,1.621,265,2.129,266,1.086,267,1.086,268,0.771,269,1.086,270,1.086,271,1.593,272,1.501,273,1.086,274,1.086,275,0.9,276,1.005,277,1.521,278,1.086,279,0.677,280,1.065,281,1.065,282,1.29,283,1.086,284,1.086,285,1.316,286,0.704,287,1.086,288,1.086,289,1.086,290,1.086,291,1.086,292,1.086,293,1.407,294,1.065,295,0.677,296,1.501,297,1.218,298,0.493,299,1.024,300,0.664,301,0.704,302,1.023,303,1.316,304,1.794,305,1.316,306,1.29,307,1.316,308,1.065,309,1.065,310,1.065,311,1.065,312,1.316,313,1.316,314,1.316,315,1.065,316,0.677,317,1.748,318,1.714,319,0.664,320,2.291,321,2.362,322,0.664,323,0.704,324,0.704,325,0.664,326,0.704,327,0.704,328,0.664,329,0.704,330,0.704,331,0.652,332,0.704,333,0.704,334,0.652,335,0.704,336,0.704,337,0.664,338,0.664,339,0.704,340,0.704,341,0.664,342,1.044,343,1.521,344,0.664,345,0.704,346,0.704,347,0.677,348,0.704,349,0.704,350,0.677,351,0.704,352,0.704,353,0.677,354,0.704,355,0.677,356,0.704,357,0.664,358,0.704,359,0.704,360,0.677,361,0.704,362,0.704,363,0.664,364,0.704,365,0.704,366,0.652,367,0.652,368,0.704,369,0.704,370,0.664,371,0.704,372,0.704,373,0.664,374,0.704,375,0.704,376,0.664,377,0.704,378,0.704,379,0.664,380,0.664,381,0.664,382,0.704,383,0.704,384,0.677,385,2.146,386,0.704,387,0.704,388,0.639,389,0.704,390,0.704,391,0.639,392,0.704,393,0.704,394,0.615,395,0.704,396,1.368,397,0.639,398,0.704,399,0.652,400,0.58,401,0.704,402,0.652,403,0.664,404,0.704,405,0.704,406,0.627,407,0.652,408,0.677,1048,2.721]],["title/injectables/CreateSeasonGQL.html",[150,0.202,344,1.122]],["body/injectables/CreateSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.713,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,1.046,345,1.109,346,1.109,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,1049,2.728]],["title/injectables/CreateTeamGQL.html",[150,0.202,363,1.122]],["body/injectables/CreateTeamGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.713,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,1.046,364,1.109,365,1.109,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,1050,2.728]],["title/injectables/CreateTournamentGQL.html",[150,0.202,373,1.122]],["body/injectables/CreateTournamentGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.713,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,1.046,374,1.109,375,1.109,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,1051,2.728]],["title/injectables/CreateTournamentRoundGQL.html",[46,1.079,150,0.202]],["body/injectables/CreateTournamentRoundGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.699,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,1.005,47,1.241,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.558,117,1.845,119,1.963,121,1.766,123,0.664,125,0.664,128,1.776,131,1.926,132,1.612,147,0.002,148,0.003,149,0.002,150,0.413,151,0.652,152,0.569,153,0.652,154,2.343,155,0.478,156,0.459,157,2.329,158,2.46,159,1.551,160,2.109,161,2.111,162,1.853,163,1.794,164,1.686,165,0.252,167,2.358,168,0.639,169,1.801,170,1.107,171,1.065,172,1.086,173,1.086,174,1.086,175,1.024,176,1.024,177,0.691,178,0.691,179,0.677,180,2.371,181,1.107,182,1.963,183,1.688,184,1.688,185,2.244,186,1.086,187,1.086,188,1.721,189,1.086,190,1.926,191,1.086,192,0.704,193,2.053,194,1.491,195,0.704,196,0.704,197,1.065,198,0.704,199,1.551,200,1.521,201,1.065,202,1.551,203,2.111,204,2.111,205,1.963,206,1.551,207,1.688,208,1.521,209,1.521,210,1.086,211,0.704,212,1.107,213,1.107,214,1.368,215,1.368,216,1.368,217,1.086,218,1.107,219,1.107,220,1.521,221,1.065,222,1.521,223,1.065,224,1.086,225,1.368,226,1.368,227,1.086,228,1.521,229,1.407,230,1.963,231,1.902,232,1.521,233,1.721,234,1.086,235,1.551,236,1.086,237,0.704,238,1.521,239,1.755,240,1.065,241,0.771,242,0.948,243,0.627,244,1.899,245,0.691,246,0.664,247,0.9,248,1.656,249,1.005,250,1.024,251,1.316,252,0.895,253,0.691,254,1.065,255,1.688,256,0.691,257,1.065,258,1.721,259,0.691,260,0.691,261,0.825,262,1.342,263,1.044,264,1.621,265,2.129,266,1.086,267,1.086,268,0.771,269,1.086,270,1.086,271,1.593,272,1.501,273,1.086,274,1.086,275,0.9,276,1.005,277,1.521,278,1.086,279,0.677,280,1.065,281,1.065,282,1.29,283,1.086,284,1.086,285,1.316,286,0.704,287,1.086,288,1.086,289,1.086,290,1.086,291,1.086,292,1.086,293,1.407,294,1.065,295,0.677,296,1.501,297,1.218,298,0.493,299,1.024,300,0.664,301,0.704,302,1.023,303,1.316,304,1.794,305,1.316,306,1.29,307,1.316,308,1.065,309,1.065,310,1.065,311,1.065,312,1.316,313,1.316,314,1.316,315,1.065,316,0.677,317,1.748,318,1.714,319,0.664,320,2.291,321,2.362,322,0.664,323,0.704,324,0.704,325,0.664,326,0.704,327,0.704,328,0.664,329,0.704,330,0.704,331,0.652,332,0.704,333,0.704,334,0.652,335,0.704,336,0.704,337,0.664,338,0.664,339,0.704,340,0.704,341,0.664,342,0.664,343,1.086,344,0.664,345,0.704,346,0.704,347,0.677,348,0.704,349,0.704,350,0.677,351,0.704,352,0.704,353,0.677,354,0.704,355,0.677,356,0.704,357,0.664,358,0.704,359,0.704,360,0.677,361,0.704,362,0.704,363,0.664,364,0.704,365,0.704,366,0.652,367,0.652,368,0.704,369,0.704,370,0.664,371,0.704,372,0.704,373,0.664,374,0.704,375,0.704,376,0.664,377,0.704,378,0.704,379,0.664,380,0.664,381,0.664,382,0.704,383,0.704,384,0.677,385,2.146,386,0.704,387,0.704,388,0.639,389,0.704,390,0.704,391,0.639,392,0.704,393,0.704,394,0.615,395,0.704,396,1.368,397,0.639,398,0.704,399,0.652,400,0.58,401,0.704,402,0.652,403,0.664,404,0.704,405,0.704,406,0.627,407,0.652,408,0.677,1052,2.721]],["title/injectables/CreateUserGQL.html",[150,0.202,379,1.122]],["body/injectables/CreateUserGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.405,14,1.58,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.638,47,1.003,48,0.613,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,107,0.557,117,1.654,119,1.828,121,1.461,123,0.663,125,0.663,128,1.776,131,1.925,132,1.616,147,0.002,148,0.003,149,0.002,150,0.413,151,0.65,152,0.568,153,0.65,154,2.342,155,0.477,156,0.458,157,2.329,158,2.46,159,1.549,160,2.108,161,2.111,162,1.851,163,1.793,164,1.549,165,0.252,167,2.357,168,0.638,169,1.719,170,1.105,171,1.063,172,1.084,173,1.084,174,1.084,175,1.022,176,1.022,177,0.689,178,0.689,179,0.676,180,2.371,181,1.105,182,1.962,183,1.686,184,1.686,185,2.244,186,1.084,187,1.084,188,1.719,189,1.084,190,1.924,191,1.084,192,0.703,193,2.08,194,1.489,195,0.703,196,0.703,197,1.063,198,0.703,199,1.549,200,1.519,201,1.063,202,1.549,203,2.144,204,2.144,205,1.962,206,1.549,207,1.686,208,1.519,209,1.519,210,1.084,211,0.703,212,1.105,213,1.105,214,1.366,215,1.366,216,1.366,217,1.084,218,1.105,219,1.105,220,1.519,221,1.063,222,1.519,223,1.063,224,1.084,225,1.105,226,1.105,227,1.084,228,1.753,229,1.697,230,2.063,231,2.04,232,1.519,233,1.719,234,1.084,235,1.55,236,1.084,237,0.703,238,1.519,239,1.753,240,1.063,241,0.77,242,0.946,243,0.625,244,1.898,245,0.689,246,0.663,247,0.899,248,1.654,249,1.003,250,1.022,251,1.314,252,0.893,253,0.689,254,1.063,255,1.686,256,0.689,257,1.063,258,1.719,259,0.689,260,0.689,261,0.824,262,1.339,263,1.042,264,1.619,265,2.128,266,1.084,267,1.084,268,0.77,269,1.084,270,1.084,271,1.591,272,1.499,273,1.084,274,1.084,275,0.899,276,1.003,277,1.519,278,1.084,279,0.676,280,1.063,281,1.063,282,1.288,283,1.084,284,1.084,285,1.314,286,0.703,287,1.084,288,1.084,289,1.084,290,1.084,291,1.084,292,1.084,293,1.405,294,1.063,295,0.676,296,1.499,297,1.216,298,0.492,299,1.022,300,0.663,301,0.703,302,1.022,303,1.314,304,1.793,305,1.314,306,1.288,307,1.314,308,1.063,309,1.063,310,1.063,311,1.063,312,1.314,313,1.314,314,1.314,315,1.063,316,0.676,317,1.747,318,1.713,319,0.663,320,2.291,321,2.361,322,0.663,323,0.703,324,0.703,325,0.663,326,0.703,327,0.703,328,0.663,329,0.703,330,0.703,331,0.65,332,0.703,333,0.703,334,0.65,335,0.703,336,0.703,337,0.663,338,0.663,339,0.703,340,0.703,341,0.663,342,0.663,343,1.084,344,0.663,345,0.703,346,0.703,347,0.676,348,0.703,349,0.703,350,0.676,351,0.703,352,0.703,353,0.676,354,0.703,355,0.676,356,0.703,357,0.663,358,0.703,359,0.703,360,0.676,361,0.703,362,0.703,363,0.663,364,0.703,365,0.703,366,0.65,367,0.65,368,0.703,369,0.703,370,0.663,371,0.703,372,0.703,373,0.663,374,0.703,375,0.703,376,0.663,377,0.703,378,0.703,379,1.042,380,0.663,381,0.663,382,0.703,383,0.703,384,0.676,385,2.145,386,0.703,387,0.703,388,0.638,389,0.703,390,0.703,391,0.638,392,0.703,393,0.703,394,0.613,395,0.703,396,1.366,397,0.638,398,0.703,399,0.65,400,0.579,401,0.703,402,0.65,403,0.663,404,0.703,405,0.703,406,0.625,407,0.65,408,0.676,1053,2.714]],["title/injectables/CustomOwlDateTimeIntl.html",[150,0.202,708,3.484]],["body/injectables/CustomOwlDateTimeIntl.html",[3,0.138,4,0.138,5,0.125,17,0.439,18,0.008,22,0.182,31,0.138,35,4.549,36,4.549,37,4.06,40,3.375,41,2.189,42,2.48,55,0.138,65,0.15,82,1.37,147,0.006,148,0.007,149,0.006,150,0.372,152,1.54,165,0.683,211,0.581,320,2.07,435,2.374,515,1.762,516,1.762,707,7.925,708,6.427,787,5.254,1054,6.531,1055,7.359,1056,7.359,1057,7.524,1058,7.359,1059,7.359,1060,6.896,1061,7.359,1062,7.359,1063,7.359]],["title/interfaces/DatePeriod.html",[0,0.542,169,1.144]],["body/interfaces/DatePeriod.html",[0,0.507,2,1.292,3,0.051,4,0.051,5,0.047,7,0.81,10,0.141,11,0.33,12,1.439,13,1.411,14,1.584,17,0.585,18,0.008,19,1.702,21,1.058,22,0.108,31,0.051,45,1.709,46,0.643,47,1.009,48,0.618,49,0.606,55,0.185,56,1.615,57,1.009,58,1.511,59,1.009,65,0.192,76,1.534,107,0.561,117,1.66,119,1.833,121,1.467,123,0.668,125,0.668,128,1.777,131,1.927,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.655,153,0.655,154,2.337,157,2.328,158,2.459,159,1.555,160,2.111,161,2.113,162,1.855,163,1.797,164,1.555,167,2.358,168,0.643,169,1.804,170,1.112,171,1.069,172,1.09,173,1.09,174,1.09,175,1.029,176,1.029,177,0.694,178,0.694,179,0.681,180,2.372,181,1.112,182,1.966,183,1.692,184,1.692,185,2.245,186,1.09,187,1.09,188,1.725,189,1.09,190,1.929,191,1.09,192,0.708,193,2.055,194,1.496,195,0.708,196,0.708,197,1.069,198,0.708,199,1.555,200,1.525,201,1.069,202,1.555,203,2.113,204,2.113,205,1.966,206,1.555,207,1.692,208,1.525,209,1.525,210,1.09,211,0.704,212,1.112,213,1.112,214,1.373,215,1.373,216,1.373,217,1.09,218,1.112,219,1.112,220,1.525,221,1.069,222,1.525,223,1.069,224,1.09,225,1.112,226,1.112,227,1.09,228,1.525,229,1.411,230,1.966,231,1.905,232,1.525,233,1.725,234,1.09,235,1.554,236,1.09,237,0.708,238,1.525,239,1.759,240,1.069,241,0.772,242,0.952,243,0.63,244,1.901,245,0.694,246,0.668,247,0.901,248,1.66,249,1.009,250,1.029,251,1.32,252,0.899,253,0.694,254,1.069,255,1.692,256,0.694,257,1.069,258,1.725,259,0.694,260,0.694,261,0.826,262,1.346,263,1.049,264,1.626,265,2.13,266,1.09,267,1.09,268,0.772,269,1.09,270,1.09,271,1.597,272,1.504,273,1.09,274,1.09,275,0.901,276,1.009,277,1.525,278,1.09,279,0.681,280,1.069,281,1.069,282,1.295,283,1.09,284,1.09,285,1.32,286,0.708,287,1.09,288,1.09,289,1.09,290,1.09,291,1.09,292,1.09,293,1.411,294,1.069,295,0.681,296,1.504,297,1.222,298,0.495,299,1.029,300,0.668,301,0.708,302,1.024,303,1.32,304,1.797,305,1.32,306,1.295,307,1.32,308,1.069,309,1.069,310,1.069,311,1.069,312,1.32,313,1.32,314,1.32,315,1.069,316,0.681,317,1.748,318,1.714,319,0.668,320,2.292,321,2.363,322,0.668,323,0.708,324,0.708,325,0.668,326,0.708,327,0.708,328,0.668,329,0.708,330,0.708,331,0.655,332,0.708,333,0.708,334,0.655,335,0.708,336,0.708,337,0.668,338,0.668,339,0.708,340,0.708,341,0.668,342,0.668,343,1.09,344,0.668,345,0.708,346,0.708,347,0.681,348,0.708,349,0.708,350,0.681,351,0.708,352,0.708,353,0.681,354,0.708,355,0.681,356,0.708,357,0.668,358,0.708,359,0.708,360,0.681,361,0.708,362,0.708,363,0.668,364,0.708,365,0.708,366,0.655,367,0.655,368,0.708,369,0.708,370,0.668,371,0.708,372,0.708,373,0.668,374,0.708,375,0.708,376,0.668,377,0.708,378,0.708,379,0.668,380,0.668,381,0.668,382,0.708,383,0.708,384,0.681,385,2.149,386,0.708,387,0.708,388,0.643,389,0.708,390,0.708,391,0.643,392,0.708,393,0.708,394,0.618,395,0.708,396,1.373,397,0.643,398,0.708,399,0.655,400,0.584,401,0.708,402,0.655,403,0.668,404,0.708,405,0.708,406,0.63,407,0.655,408,0.681]],["title/injectables/DeletePitchGQL.html",[150,0.202,338,1.122]],["body/injectables/DeletePitchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.667,125,0.667,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.46,159,1.554,160,2.11,161,2.113,162,1.854,163,1.796,164,1.554,165,0.253,167,2.358,168,0.641,169,1.724,170,1.11,171,1.068,172,1.089,173,1.089,174,1.089,175,1.027,176,1.027,177,0.693,178,0.693,179,0.68,180,2.371,181,1.11,182,1.965,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.965,191,1.089,192,0.707,193,2.054,194,1.494,195,0.707,196,0.707,197,1.068,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.965,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.089,218,1.11,219,1.11,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.11,226,1.11,227,1.089,228,1.524,229,1.41,230,1.965,231,1.904,232,1.524,233,1.724,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.629,244,1.9,245,0.693,246,0.667,247,0.901,248,1.658,249,1.007,250,1.027,251,1.319,252,0.897,253,0.693,254,1.068,255,1.691,256,0.693,257,1.068,258,1.724,259,0.693,260,0.693,261,0.826,262,1.345,263,1.047,264,1.624,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.595,272,1.503,273,1.089,274,1.089,275,0.901,276,1.007,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.293,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.503,297,1.22,298,0.495,299,1.027,300,0.667,301,0.707,302,1.024,303,1.319,304,1.796,305,1.319,306,1.293,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,0.654,335,0.707,336,0.707,337,0.667,338,1.047,339,1.11,340,1.11,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,0.667,358,0.707,359,0.707,360,0.68,361,0.707,362,0.707,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,0.667,371,0.707,372,0.707,373,0.667,374,0.707,375,0.707,376,0.667,377,0.707,378,0.707,379,0.667,380,0.667,381,0.667,382,0.707,383,0.707,384,0.68,385,2.148,386,0.707,387,0.707,388,0.641,389,0.707,390,0.707,391,0.641,392,0.707,393,0.707,394,0.617,395,0.707,396,1.371,397,0.641,398,0.707,399,0.654,400,0.582,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.629,407,0.654,408,0.68,1064,2.73]],["title/injectables/DeleteTeamGQL.html",[150,0.202,370,1.122]],["body/injectables/DeleteTeamGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.667,125,0.667,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.46,159,1.554,160,2.11,161,2.124,162,1.854,163,1.796,164,1.554,165,0.253,167,2.358,168,0.641,169,1.724,170,1.11,171,1.068,172,1.089,173,1.089,174,1.089,175,1.027,176,1.027,177,0.693,178,0.693,179,0.68,180,2.371,181,1.11,182,1.965,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.928,191,1.089,192,0.707,193,2.054,194,1.494,195,0.707,196,0.707,197,1.068,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.965,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.089,218,1.11,219,1.11,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.11,226,1.11,227,1.089,228,1.524,229,1.41,230,1.965,231,1.904,232,1.524,233,1.724,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.629,244,1.9,245,0.693,246,0.667,247,0.901,248,1.658,249,1.007,250,1.027,251,1.319,252,0.897,253,0.693,254,1.068,255,1.691,256,0.693,257,1.068,258,1.724,259,0.693,260,0.693,261,0.826,262,1.345,263,1.047,264,1.624,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.595,272,1.503,273,1.089,274,1.089,275,0.901,276,1.007,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.293,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.503,297,1.22,298,0.495,299,1.027,300,0.667,301,0.707,302,1.024,303,1.319,304,1.796,305,1.319,306,1.293,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,0.654,335,0.707,336,0.707,337,0.667,338,0.667,339,0.707,340,0.707,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,0.667,358,0.707,359,0.707,360,0.68,361,0.707,362,0.707,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,1.047,371,1.11,372,1.11,373,0.667,374,0.707,375,0.707,376,0.667,377,0.707,378,0.707,379,0.667,380,0.667,381,0.667,382,0.707,383,0.707,384,0.68,385,2.148,386,0.707,387,0.707,388,0.641,389,0.707,390,0.707,391,0.641,392,0.707,393,0.707,394,0.617,395,0.707,396,1.371,397,0.641,398,0.707,399,0.654,400,0.582,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.629,407,0.654,408,0.68,1065,2.73]],["title/injectables/DeleteTournamentGQL.html",[150,0.202,376,1.122]],["body/injectables/DeleteTournamentGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.734,119,1.831,121,1.465,123,0.667,125,0.667,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.46,159,1.554,160,2.11,161,2.113,162,1.854,163,1.796,164,1.554,165,0.253,167,2.358,168,0.641,169,1.724,170,1.11,171,1.068,172,1.089,173,1.089,174,1.089,175,1.027,176,1.027,177,0.693,178,0.693,179,0.68,180,2.371,181,1.11,182,1.965,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.928,191,1.089,192,0.707,193,2.054,194,1.494,195,0.707,196,0.707,197,1.068,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.965,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.089,218,1.11,219,1.11,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.11,226,1.11,227,1.089,228,1.524,229,1.41,230,1.965,231,1.904,232,1.524,233,1.724,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.629,244,1.9,245,0.693,246,0.667,247,0.901,248,1.658,249,1.007,250,1.027,251,1.319,252,0.897,253,0.693,254,1.068,255,1.691,256,0.693,257,1.068,258,1.724,259,0.693,260,0.693,261,0.826,262,1.345,263,1.047,264,1.624,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.595,272,1.503,273,1.089,274,1.089,275,0.901,276,1.007,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.293,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.503,297,1.22,298,0.495,299,1.027,300,0.667,301,0.707,302,1.024,303,1.319,304,1.796,305,1.319,306,1.293,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,0.654,335,0.707,336,0.707,337,0.667,338,0.667,339,0.707,340,0.707,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,0.667,358,0.707,359,0.707,360,0.68,361,0.707,362,0.707,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,0.667,371,0.707,372,0.707,373,0.667,374,0.707,375,0.707,376,1.047,377,1.11,378,1.11,379,0.667,380,0.667,381,0.667,382,0.707,383,0.707,384,0.68,385,2.148,386,0.707,387,0.707,388,0.641,389,0.707,390,0.707,391,0.641,392,0.707,393,0.707,394,0.617,395,0.707,396,1.371,397,0.641,398,0.707,399,0.654,400,0.582,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.629,407,0.654,408,0.68,1066,2.73]],["title/injectables/DeleteUserGQL.html",[150,0.202,381,1.122]],["body/injectables/DeleteUserGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.667,125,0.667,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.46,159,1.554,160,2.11,161,2.113,162,1.854,163,1.796,164,1.554,165,0.253,167,2.358,168,0.641,169,1.724,170,1.11,171,1.068,172,1.089,173,1.089,174,1.089,175,1.027,176,1.027,177,0.693,178,0.693,179,0.68,180,2.371,181,1.11,182,1.965,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.928,191,1.089,192,0.707,193,2.054,194,1.494,195,0.707,196,0.707,197,1.068,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.965,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.089,218,1.11,219,1.11,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.11,226,1.11,227,1.089,228,1.524,229,1.41,230,1.965,231,1.904,232,1.524,233,1.803,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.629,244,1.9,245,0.693,246,0.667,247,0.901,248,1.658,249,1.007,250,1.027,251,1.319,252,0.897,253,0.693,254,1.068,255,1.691,256,0.693,257,1.068,258,1.724,259,0.693,260,0.693,261,0.826,262,1.345,263,1.047,264,1.624,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.595,272,1.503,273,1.089,274,1.089,275,0.901,276,1.007,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.293,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.503,297,1.22,298,0.495,299,1.027,300,0.667,301,0.707,302,1.024,303,1.319,304,1.796,305,1.319,306,1.293,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,0.654,335,0.707,336,0.707,337,0.667,338,0.667,339,0.707,340,0.707,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,0.667,358,0.707,359,0.707,360,0.68,361,0.707,362,0.707,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,0.667,371,0.707,372,0.707,373,0.667,374,0.707,375,0.707,376,0.667,377,0.707,378,0.707,379,0.667,380,0.667,381,1.047,382,1.11,383,1.11,384,0.68,385,2.148,386,0.707,387,0.707,388,0.641,389,0.707,390,0.707,391,0.641,392,0.707,393,0.707,394,0.617,395,0.707,396,1.371,397,0.641,398,0.707,399,0.654,400,0.582,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.629,407,0.654,408,0.68,1067,2.73]],["title/components/EditContactComponent.html",[27,0.437,449,1.237]],["body/components/EditContactComponent.html",[3,0.114,4,0.114,5,0.103,7,0.623,10,0.314,11,0.58,17,0.529,18,0.008,21,1.031,22,0.181,27,0.783,28,2.048,31,0.114,40,2.235,41,1.807,42,2.047,50,1.962,53,2.287,54,2.515,55,0.114,60,2.449,61,2.356,62,2.553,63,1.881,65,0.124,66,1.573,67,1.81,78,3.096,82,1.532,103,2.143,144,2.138,147,0.005,148,0.006,149,0.005,155,1.067,156,1.025,165,0.849,193,2.04,203,1.455,204,1.455,205,2.204,211,0.68,241,0.756,247,0.669,261,0.832,268,0.756,275,1.018,276,1.775,298,0.701,366,1.455,406,1.4,410,1.604,411,2.159,412,1.807,413,1.771,414,1.771,416,1.771,417,1.995,420,1.741,423,1.895,424,2.117,425,1.4,426,2.203,427,2.203,428,1.771,429,2.509,430,1.771,431,1.771,432,1.636,433,1.771,434,1.636,435,1.702,436,2.581,437,1.636,438,1.771,439,1.604,440,1.702,441,1.604,442,2.203,443,1.604,444,1.771,445,1.636,446,1.771,447,1.636,448,1.702,449,2.317,450,1.636,451,1.771,452,1.636,453,1.771,454,1.636,455,1.771,456,1.636,457,1.604,458,2.203,459,1.771,460,1.636,461,1.604,462,1.771,463,1.636,464,1.771,465,1.636,466,1.771,467,1.636,468,1.771,469,1.668,470,1.771,471,1.636,472,1.771,473,1.636,474,1.771,475,1.636,476,1.771,477,1.636,478,1.771,479,1.604,480,1.771,481,1.573,482,1.771,483,1.604,484,1.771,485,1.636,486,1.771,487,1.636,488,1.771,489,1.771,490,1.636,491,1.771,492,1.542,493,1.771,494,1.604,495,1.771,496,1.604,497,1.771,498,1.636,499,1.771,500,1.604,501,1.771,502,1.636,503,1.702,504,1.771,505,1.771,515,1.81,516,1.81,661,2.602,739,3.137,758,3.24,922,5.473,925,3.923,927,5.118,950,6.692,951,6.148,966,5.118,969,4.672,1068,7.524,1069,7.524,1070,5.392,1071,8.226,1072,7.557,1073,7.557,1074,6.148,1075,7.301,1076,7.557,1077,6.075,1078,6.692,1079,6.075,1080,7.557,1081,7.639,1082,6.075,1083,6.708,1084,7.557,1085,6.075,1086,7.557,1087,6.075,1088,6.708,1089,6.148,1090,6.075,1091,6.075,1092,5.396]],["title/components/EditPitchContactDialogComponent.html",[27,0.437,456,1.237]],["body/components/EditPitchContactDialogComponent.html",[3,0.114,4,0.114,5,0.104,7,0.626,10,0.315,11,0.582,17,0.492,18,0.008,22,0.181,23,3.959,24,2.882,26,1.891,27,0.785,28,2.052,29,2.729,31,0.114,40,3.371,41,1.816,42,2.057,50,1.972,53,3.245,54,2.527,55,0.114,60,2.449,61,2.356,62,2.555,63,1.887,65,0.125,66,1.58,67,1.815,82,1.412,83,2.232,85,2.052,86,3.251,88,3.412,90,3.579,103,2.146,112,2.355,114,2.057,115,1.931,133,2.527,136,2.014,137,2.166,147,0.005,148,0.006,149,0.005,165,0.8,190,1.49,211,0.681,241,0.758,247,0.672,252,1.804,261,0.835,268,0.974,275,1.07,276,1.936,298,0.704,341,2.237,410,1.611,411,2.166,412,1.816,413,1.779,414,1.779,416,1.779,417,2.001,420,1.746,423,1.746,424,1.71,425,1.406,426,2.209,427,2.209,428,1.779,429,2.513,430,1.779,431,1.779,432,1.643,433,1.779,434,1.643,435,1.71,436,2.584,437,1.643,438,1.779,439,1.611,440,1.71,441,1.611,442,2.209,443,1.611,444,1.779,445,1.643,446,1.779,447,1.643,448,1.71,449,1.643,450,1.643,451,1.779,452,1.643,453,1.779,454,1.643,455,1.779,456,2.321,457,1.611,458,2.209,459,1.779,460,1.643,461,1.611,462,1.779,463,1.643,464,1.779,465,1.643,466,1.779,467,1.643,468,1.779,469,1.676,470,1.779,471,1.643,472,1.779,473,1.643,474,1.779,475,1.643,476,1.779,477,1.643,478,1.779,479,1.611,480,1.779,481,1.58,482,1.779,483,1.611,484,1.779,485,1.643,486,1.779,487,1.643,488,1.779,489,1.779,490,1.643,491,1.779,492,1.549,493,1.779,494,1.611,495,1.779,496,1.611,497,1.779,498,1.643,499,1.779,500,1.611,501,1.779,502,1.643,503,1.71,504,1.779,505,1.779,515,1.815,516,1.815,567,5.725,593,3.795,610,2.591,887,3.942,888,5.583,889,5.133,894,4.965,904,3.942,1006,4.965,1068,7.212,1075,6.727,1093,6.104,1094,6.104,1095,7.579,1096,6.104,1097,6.104,1098,6.104,1099,6.104,1100,6.104,1101,4.686]],["title/components/EditRankingPenaltyComponent.html",[27,0.437,457,1.213]],["body/components/EditRankingPenaltyComponent.html",[0,0.679,3,0.108,4,0.108,5,0.098,7,0.59,10,0.298,11,0.561,17,0.532,18,0.008,19,1.388,21,0.908,22,0.182,23,3.877,24,2.719,26,1.784,27,0.764,28,1.998,29,2.574,30,3.719,31,0.108,40,3.328,41,1.713,42,1.941,50,1.86,53,3.178,54,2.384,55,0.108,60,2.443,61,2.35,62,2.535,63,1.819,65,0.118,66,1.491,67,1.75,82,1.361,83,2.305,85,1.998,86,3.166,88,3.323,90,3.451,91,3.178,103,2.102,112,2.293,114,1.941,115,1.822,127,2.883,128,1.388,131,1.5,132,1.355,133,2.384,135,3.56,136,1.9,137,2.088,147,0.005,148,0.006,149,0.005,151,2.022,160,1.406,161,1.379,162,1.353,163,1.379,165,0.849,211,0.634,241,0.731,244,1.277,246,1.406,247,1.07,249,1.353,261,0.805,268,0.731,275,0.805,293,1.983,298,0.664,397,2.125,400,1.929,410,1.52,411,2.088,412,1.713,413,1.679,414,1.679,416,1.679,417,1.929,420,1.684,423,1.684,424,1.613,425,1.327,426,2.13,427,2.13,428,1.679,429,2.461,430,1.679,431,1.679,432,1.55,433,1.679,434,1.55,435,1.613,436,2.54,437,1.55,438,1.679,439,1.52,440,1.613,441,1.52,442,2.13,443,1.52,444,1.679,445,1.55,446,1.679,447,1.55,448,1.613,449,1.55,450,1.55,451,1.679,452,1.55,453,1.679,454,1.55,455,1.679,456,1.55,457,2.228,458,2.13,459,1.679,460,1.55,461,1.52,462,1.679,463,1.55,464,1.679,465,1.55,466,1.679,467,1.55,468,1.679,469,1.581,470,1.679,471,1.55,472,1.679,473,1.55,474,1.679,475,1.55,476,1.679,477,1.55,478,1.679,479,1.52,480,1.679,481,1.491,482,1.679,483,1.52,484,1.679,485,1.55,486,1.679,487,1.55,488,1.679,489,1.679,490,1.55,491,1.679,492,1.462,493,1.679,494,1.52,495,1.679,496,1.52,497,1.679,498,1.55,499,1.679,500,1.52,501,1.679,502,1.55,503,1.613,504,1.679,505,1.679,515,1.379,516,1.379,565,6.857,610,3.101,661,2.516,941,4.685,958,4.338,1092,5.217,1102,7.006,1103,4.366,1104,6.53,1105,5.944,1106,7.124,1107,7.124,1108,6.53,1109,7.124,1110,7.493,1111,6.606,1112,7.124,1113,7.307,1114,5.759,1115,5.759,1116,5.111,1117,5.759,1118,5.111,1119,7.124,1120,6.486,1121,5.111,1122,5.54,1123,3.719,1124,4.685,1125,6.486,1126,5.944,1127,5.111,1128,6.486,1129,5.111,1130,6.486,1131,5.111,1132,5.111,1133,5.111,1134,5.111,1135,7.124,1136,4.685,1137,4.685,1138,5.111,1139,5.111]],["title/interfaces/EditRankingPenaltyComponentData.html",[0,0.542,1111,3.484]],["body/interfaces/EditRankingPenaltyComponentData.html",[0,0.807,2,3.232,3,0.128,4,0.128,5,0.117,10,0.354,11,0.623,17,0.485,18,0.008,19,1.3,21,0.874,22,0.19,23,3.732,24,3.232,26,2.121,27,0.773,28,2.023,29,3.06,30,4.42,31,0.128,40,3.188,41,2.036,42,2.307,50,2.211,53,3.058,54,2.833,55,0.128,60,1.704,61,1.639,62,2.333,63,1.704,65,0.14,67,1.639,82,1.275,83,2.403,85,1.704,86,2.699,88,2.833,90,3.232,91,2.576,103,1.704,112,1.956,114,2.307,115,2.165,127,3.427,128,1.543,131,1.667,132,1.462,133,2.833,135,4.231,136,2.258,137,2.321,147,0.005,148,0.006,149,0.005,151,1.946,160,1.671,161,1.639,162,1.608,163,1.639,244,1.987,246,1.671,247,1.008,249,2.035,293,2.181,397,2.035,400,1.848,417,1.807,457,1.807,565,5.802,1102,5.189,1103,5.189,1104,5.568,1105,5.568,1106,6.075,1107,6.075,1108,5.568,1109,6.075,1110,6.075,1111,6.57,1112,6.075,1119,7.212,1120,6.075,1122,6.16,1123,4.42,1124,7.049,1125,7.212,1126,6.61,1127,6.075,1128,7.212,1129,6.075,1130,7.212,1131,6.075,1132,6.075,1133,6.075,1134,6.075,1135,7.691,1136,5.568,1137,5.568,1138,6.075,1139,6.075]],["title/components/EditTournamentRoundComponent.html",[27,0.437,66,1.19]],["body/components/EditTournamentRoundComponent.html",[0,0.791,1,5.968,3,0.095,4,0.095,5,0.086,6,7.224,7,1.003,8,6.453,9,3.828,10,0.347,11,0.515,12,1.209,13,2.018,14,1.036,15,3.26,17,0.552,18,0.008,19,1.525,20,5.438,21,0.543,22,0.186,23,3.838,24,2.384,25,3.605,26,1.564,27,0.717,28,1.876,29,2.257,30,3.26,31,0.095,32,4.855,33,3.26,34,6.648,35,3.121,36,3.121,37,2.785,38,3.818,39,2.607,40,3.226,41,1.502,42,1.701,43,3.281,44,2.039,45,0.978,46,1.886,47,1.186,48,1.815,49,1.78,50,1.631,51,2.257,52,2.257,53,3.022,54,2.09,55,0.141,56,1.798,57,2.018,58,1.792,59,2.092,60,2.429,61,2.336,62,2.427,63,1.67,64,5.458,65,0.103,66,2.078,67,1.607,68,5.458,69,6.13,70,5.458,71,6.13,72,5.458,73,6.13,74,5.458,75,6.13,76,1.77,77,6.13,78,2.525,79,3.835,80,6.13,81,6.13,82,1.249,83,2.224,84,5.458,85,2.244,86,3.296,87,6.13,88,3.119,89,5.38,90,3.168,91,3.146,92,3.828,93,3.828,94,3.26,95,3.828,96,5.458,97,4.107,98,4.107,99,6.531,100,4.107,101,6.531,102,4.107,103,1.999,104,5.458,105,4.107,106,4.107,107,1.377,108,4.107,109,5.458,110,4.107,111,2.528,112,2.153,113,6.531,114,1.701,115,1.597,116,4.107,117,1.209,118,5.458,119,1.233,120,4.107,121,1.233,122,4.107,123,1.233,124,4.107,125,1.233,126,4.107,127,2.528,128,1.274,129,4.107,130,4.107,131,1.036,132,0.852,133,2.09,134,4.107,135,3.121,136,1.666,137,1.917,138,4.107,139,5.458,140,4.148,141,5.458,142,6.531,143,2.999,144,1.777,145,4.107,146,2.607,147,0.004,148,0.005,149,0.004,155,0.886,156,0.852,165,0.882,211,0.692,235,1.35,241,0.671,247,0.556,261,0.739,268,0.671,275,0.739,298,0.582,410,1.333,411,1.917,413,1.472,414,1.472,416,1.472,420,1.546,423,2.02,424,2.341,425,1.163,426,1.956,427,1.956,428,1.472,429,2.34,430,1.472,431,1.472,432,1.359,433,1.472,434,1.359,435,1.414,436,2.436,437,1.359,438,1.472,439,1.333,440,1.414,441,1.333,442,1.956,443,1.333,444,1.472,445,1.359,446,1.472,447,1.359,448,1.414,449,1.359,450,1.359,451,1.472,452,1.359,453,1.472,454,1.359,455,1.472,456,1.359,457,1.333,458,1.956,459,1.472,460,1.359,461,1.333,462,1.472,463,1.359,464,1.472,465,1.359,466,1.472,467,1.359,468,1.472,469,1.386,470,1.472,471,1.359,472,1.472,473,1.359,474,1.472,475,1.359,476,1.472,477,1.359,478,1.472,479,1.333,480,1.472,481,1.307,482,1.472,483,1.333,484,1.472,485,1.359,486,1.472,487,1.359,488,1.472,489,1.472,490,1.359,491,1.472,492,1.282,493,1.472,494,1.333,495,1.472,496,1.333,497,1.472,498,1.359,499,1.472,500,1.333,501,1.472,502,1.359,503,1.414,504,1.472,505,1.472,515,2.001,516,2.001,610,3.547,661,3.066,958,4.767,1140,6.709,1141,6.709,1142,6.709,1143,6.709,1144,5.049,1145,6.709,1146,5.049,1147,5.049,1148,5.049,1149,5.049,1150,5.049,1151,5.049,1152,5.049,1153,5.049,1154,5.049,1155,5.049,1156,5.049,1157,5.049,1158,5.049,1159,5.049,1160,5.049,1161,5.049,1162,5.049,1163,6.709,1164,6.709,1165,6.709,1166,6.709,1167,4.544,1168,4.107,1169,6.709,1170,7.126,1171,6.709,1172,6.709]],["title/components/EditUserDialogComponent.html",[27,0.437,460,1.237]],["body/components/EditUserDialogComponent.html",[3,0.098,4,0.098,5,0.089,7,0.536,10,0.27,11,0.527,17,0.547,18,0.008,21,0.739,22,0.185,23,3.739,24,2.47,25,5.813,26,1.621,27,0.73,28,1.909,29,2.339,31,0.098,32,4.841,40,3.254,41,1.556,42,1.763,50,1.69,53,3.065,54,2.166,55,0.098,60,2.433,61,2.34,62,2.501,63,1.71,65,0.107,66,1.354,67,1.645,78,3.266,79,3.926,82,1.279,83,2.289,85,2.16,86,3.024,88,3.174,90,3.243,103,2.027,112,2.593,114,2.584,115,2.426,127,3.439,128,1.304,132,0.883,133,2.843,136,2.529,137,2.48,140,3.234,147,0.004,148,0.005,149,0.004,155,1.206,156,1.159,165,0.874,175,2.211,193,1.948,203,1.645,204,1.645,211,0.643,228,2.067,229,1.912,230,1.71,231,1.743,232,2.067,233,1.302,235,1.053,241,0.687,247,0.576,261,1.08,263,1.988,268,0.687,275,0.756,298,0.603,379,2.16,380,2.16,407,1.95,410,1.381,411,1.962,412,1.556,413,1.525,414,1.525,416,1.525,417,1.813,420,1.582,423,1.948,424,1.924,425,1.205,426,2.002,427,2.002,428,1.525,429,2.373,430,1.525,431,1.525,432,1.408,433,1.525,434,1.408,435,1.465,436,2.465,437,1.408,438,1.525,439,1.381,440,1.465,441,1.381,442,2.002,443,1.381,444,1.525,445,1.408,446,1.525,447,1.408,448,1.465,449,1.408,450,1.408,451,1.525,452,1.408,453,1.525,454,1.408,455,1.525,456,1.408,457,1.381,458,2.002,459,1.525,460,2.192,461,1.381,462,1.525,463,1.408,464,1.525,465,1.408,466,1.525,467,1.408,468,1.525,469,1.436,470,1.525,471,1.408,472,1.525,473,1.408,474,1.525,475,1.408,476,1.525,477,1.408,478,1.525,479,1.381,480,1.525,481,1.354,482,1.525,483,1.381,484,1.525,485,1.408,486,1.525,487,1.408,488,1.525,489,1.525,490,1.408,491,1.525,492,1.328,493,1.525,494,1.381,495,1.525,496,1.381,497,1.525,498,1.408,499,1.525,500,1.381,501,1.525,502,1.408,503,1.465,504,1.525,505,1.525,513,3.845,515,1.645,516,1.645,517,4.553,567,6.107,593,3.439,610,2.22,661,2.988,739,2.701,856,5.587,872,4.256,873,5.587,875,5.587,878,3.966,887,3.378,888,5.193,889,4.651,894,4.256,904,4.951,922,5.775,925,3.378,927,5.514,928,4.643,935,6.096,958,4.078,1006,4.256,1007,4.643,1011,4.643,1081,6.806,1083,6.806,1088,4.643,1123,3.378,1173,8.394,1174,7.668,1175,6.868,1176,8.142,1177,4.256,1178,7.668,1179,6.868,1180,5.231,1181,6.868,1182,5.231,1183,5.231,1184,5.231,1185,5.231,1186,5.231,1187,5.231,1188,5.231,1189,5.231,1190,4.643,1191,5.231,1192,5.207,1193,5.231,1194,5.231,1195,5.231,1196,5.231,1197,5.231,1198,5.231,1199,5.231,1200,7.668,1201,8.142,1202,5.231,1203,5.231,1204,6.868,1205,5.231,1206,6.868,1207,6.868,1208,6.868,1209,5.231,1210,5.231,1211,5.231,1212,5.231,1213,5.231,1214,5.231,1215,5.231,1216,4.643,1217,4.643,1218,6.868,1219,6.868,1220,6.868,1221,6.868,1222,6.868,1223,6.868]],["title/components/EditmatchPitchComponent.html",[27,0.437,450,1.237]],["body/components/EditmatchPitchComponent.html",[3,0.105,4,0.105,5,0.096,7,0.577,10,0.291,11,0.553,17,0.528,18,0.008,21,0.9,22,0.188,23,3.845,24,2.658,26,1.744,27,0.756,28,1.977,29,2.516,30,3.635,31,0.105,43,3.458,44,2.274,50,1.818,51,2.516,52,2.516,55,0.105,60,2.441,61,2.348,62,2.329,63,1.793,65,0.115,66,1.457,67,1.725,78,2.711,82,1.341,83,2.167,85,1.977,86,3.132,90,3.401,103,2.084,112,2.269,114,1.897,115,1.781,135,3.48,136,1.857,137,1.608,144,2.535,147,0.004,148,0.006,149,0.004,155,0.988,156,1.34,165,0.854,211,0.683,241,0.9,242,1.856,247,0.62,252,1.852,261,0.793,268,0.921,275,0.793,298,0.649,410,1.486,411,2.058,412,1.674,413,1.641,414,1.641,416,1.641,417,1.901,420,1.659,423,1.994,424,2.224,425,1.297,426,2.1,427,2.1,428,1.641,429,2.44,430,1.641,431,1.641,432,1.515,433,1.641,434,1.515,435,1.577,436,2.522,437,1.515,438,1.641,439,1.486,440,1.577,441,1.486,442,2.1,443,1.486,444,1.641,445,1.515,446,1.641,447,1.939,448,2.017,449,1.515,450,2.254,451,1.641,452,1.515,453,1.641,454,1.515,455,1.641,456,1.515,457,1.486,458,2.1,459,1.641,460,1.515,461,1.486,462,1.641,463,1.515,464,1.641,465,1.515,466,1.641,467,1.515,468,1.641,469,1.546,470,1.641,471,1.515,472,1.641,473,1.515,474,1.641,475,1.515,476,1.641,477,1.515,478,1.641,479,1.486,480,1.641,481,1.457,482,1.641,483,1.486,484,1.641,485,1.515,486,1.641,487,1.515,488,1.641,489,1.641,490,1.515,491,1.641,492,1.429,493,1.641,494,1.486,495,1.641,496,1.486,497,1.641,498,1.515,499,1.641,500,1.486,501,1.641,502,1.515,503,1.577,504,1.641,505,1.641,515,1.902,516,1.902,568,3.342,593,3.976,594,5.176,610,2.389,661,3.233,739,2.907,826,3.812,890,4.268,907,4.276,908,4.276,911,5.461,922,5.349,925,3.635,934,3.48,994,4.019,1004,4.268,1005,5.144,1014,4.996,1047,6.392,1092,5.142,1101,4.91,1224,4.996,1225,7.202,1226,7.942,1227,7.202,1228,6.021,1229,6.021,1230,6.392,1231,7.202,1232,6.811,1233,8.372,1234,4.647,1235,7.202,1236,5.461,1237,5.629,1238,6.021,1239,5.629,1240,7.202,1241,5.629,1242,5.629,1243,5.629,1244,5.629,1245,5.629,1246,4.579,1247,5.461,1248,4.268,1249,4.019,1250,4.268,1251,4.268,1252,4.268,1253,4.268,1254,4.878,1255,4.268,1256,4.268,1257,4.268,1258,6.021,1259,4.268,1260,4.268,1261,4.019,1262,4.996,1263,5.629,1264,4.996,1265,6.392,1266,6.392,1267,7.202,1268,6.392,1269,6.347,1270,7.202,1271,7.202,1272,4.878]],["title/components/EditmatchResultComponent.html",[27,0.437,452,1.237]],["body/components/EditmatchResultComponent.html",[3,0.113,4,0.113,5,0.102,7,0.617,10,0.311,11,0.576,17,0.538,18,0.008,19,1.629,22,0.184,23,3.939,24,2.841,26,1.864,27,0.779,28,2.039,29,2.69,31,0.113,40,3.449,41,1.79,42,2.027,50,1.943,53,3.323,54,2.491,55,0.113,60,2.448,61,2.355,62,2.376,63,1.87,65,0.123,66,1.557,67,1.799,82,1.399,83,1.944,85,2.318,86,3.23,88,3.654,90,3.547,103,2.135,112,2.34,114,2.027,115,1.903,135,3.719,136,1.985,137,2.146,147,0.005,148,0.006,149,0.005,165,0.857,183,2,184,2,211,0.647,241,0.914,242,1.901,247,0.662,261,0.827,268,0.751,275,0.827,298,0.694,410,1.588,411,2.146,412,1.79,413,1.754,414,1.754,416,1.754,417,1.983,420,1.731,423,1.731,424,1.685,425,1.386,426,2.19,427,2.19,428,1.754,429,2.5,430,1.754,431,1.754,432,1.62,433,1.754,434,1.62,435,1.685,436,2.573,437,1.62,438,1.754,439,1.588,440,1.685,441,1.588,442,2.19,443,1.588,444,1.754,445,1.62,446,1.754,447,1.62,448,1.685,449,1.62,450,1.62,451,1.754,452,2.309,453,1.754,454,1.62,455,1.754,456,1.62,457,1.588,458,2.19,459,1.754,460,1.62,461,1.588,462,1.754,463,1.62,464,1.754,465,1.62,466,1.754,467,1.62,468,1.754,469,1.652,470,1.754,471,1.62,472,1.754,473,1.62,474,1.754,475,1.62,476,1.754,477,1.62,478,1.754,479,1.588,480,1.754,481,1.557,482,1.754,483,1.588,484,1.754,485,1.62,486,1.754,487,1.62,488,1.754,489,1.754,490,1.62,491,1.754,492,1.527,493,1.754,494,1.588,495,1.754,496,1.588,497,1.754,498,1.62,499,1.754,500,1.588,501,1.754,502,1.62,503,1.685,504,1.754,505,1.754,515,1.441,516,1.441,610,2.554,661,3.1,674,5.34,890,4.562,907,4.46,908,4.46,911,5.695,1092,5.363,1232,6.978,1234,4.716,1250,4.562,1273,5.34,1274,7.511,1275,8.19,1276,7.511,1277,7.511,1278,6.016,1279,6.016,1280,6.016,1281,6.016,1282,6.016,1283,6.016,1284,7.511,1285,6.016,1286,7.511,1287,6.016,1288,6.016,1289,6.016,1290,6.016,1291,6.016,1292,6.016,1293,6.016,1294,7.511,1295,6.016,1296,6.016]],["title/components/EditmatchTimeComponent.html",[27,0.437,454,1.237]],["body/components/EditmatchTimeComponent.html",[3,0.111,4,0.111,5,0.101,7,0.605,10,0.305,11,0.569,17,0.524,18,0.008,22,0.186,23,3.912,24,2.787,26,1.829,27,0.773,28,2.021,29,2.638,31,0.111,34,6.895,35,3.649,36,3.649,37,3.256,38,4.07,39,3.048,40,3.346,41,1.756,42,1.989,50,1.906,55,0.111,56,1.553,60,2.446,61,2.353,62,2.363,63,1.848,65,0.121,66,1.528,67,1.777,82,1.382,83,2.101,85,2.23,86,3.202,90,3.505,92,4.475,93,4.475,94,3.811,95,4.475,103,2.121,135,3.649,136,1.947,137,1.686,140,3.649,147,0.005,148,0.006,149,0.005,165,0.844,211,0.673,235,1.188,241,0.91,242,1.888,247,0.65,261,0.817,268,0.742,275,0.817,298,0.681,410,1.558,411,2.12,412,1.756,413,1.72,414,1.72,416,1.72,417,1.959,420,1.71,423,1.871,424,2.274,425,1.36,426,2.163,427,2.163,428,1.72,429,2.483,430,1.72,431,1.72,432,1.589,433,1.72,434,1.589,435,1.653,436,2.559,437,1.589,438,1.72,439,1.558,440,1.653,441,1.558,442,2.163,443,1.558,444,1.72,445,1.589,446,1.72,447,1.589,448,1.653,449,1.589,450,1.589,451,1.72,452,1.589,453,1.72,454,2.293,455,1.72,456,1.589,457,1.558,458,2.163,459,1.72,460,1.589,461,1.558,462,1.72,463,1.589,464,1.72,465,1.589,466,1.72,467,1.589,468,1.72,469,1.621,470,1.72,471,1.589,472,1.72,473,1.589,474,1.72,475,1.589,476,1.72,477,1.589,478,1.72,479,1.558,480,1.72,481,1.528,482,1.72,483,1.558,484,1.72,485,1.589,486,1.72,487,1.589,488,1.72,489,1.72,490,1.589,491,1.72,492,1.498,493,1.72,494,1.558,495,1.72,496,1.558,497,1.72,498,1.589,499,1.72,500,1.558,501,1.72,502,1.589,503,1.653,504,1.72,505,1.72,515,1.777,516,1.777,610,2.505,661,3.218,890,4.475,907,4.406,908,4.406,911,5.627,934,3.649,1092,5.299,1232,6.93,1234,4.696,1250,4.475,1297,5.238,1298,7.422,1299,8.118,1300,7.422,1301,7.791,1302,7.422,1303,7.422,1304,7.422,1305,5.902,1306,5.902,1307,5.902,1308,5.902,1309,5.902,1310,7.422,1311,5.902,1312,6.587,1313,7.422,1314,5.299,1315,5.627,1316,7.422,1317,5.627]],["title/injectables/EndSeasonGQL.html",[150,0.202,360,1.144]],["body/injectables/EndSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.667,125,0.667,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.46,159,1.554,160,2.126,161,2.113,162,1.854,163,1.796,164,1.554,165,0.253,167,2.358,168,0.641,169,1.724,170,1.11,171,1.068,172,1.089,173,1.089,174,1.089,175,1.027,176,1.027,177,0.693,178,0.693,179,0.68,180,2.371,181,1.11,182,1.965,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.928,191,1.089,192,0.707,193,2.054,194,1.494,195,0.707,196,0.707,197,1.068,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.965,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.089,218,1.11,219,1.11,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.11,226,1.11,227,1.089,228,1.524,229,1.41,230,1.965,231,1.904,232,1.524,233,1.724,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.629,244,1.9,245,0.693,246,0.667,247,0.901,248,1.658,249,1.007,250,1.027,251,1.319,252,0.897,253,0.693,254,1.068,255,1.691,256,0.693,257,1.068,258,1.724,259,0.693,260,0.693,261,0.826,262,1.345,263,1.047,264,1.624,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.595,272,1.503,273,1.089,274,1.089,275,0.901,276,1.007,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.293,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.503,297,1.22,298,0.495,299,1.027,300,0.667,301,0.707,302,1.024,303,1.319,304,1.796,305,1.319,306,1.293,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,0.654,335,0.707,336,0.707,337,0.667,338,0.667,339,0.707,340,0.707,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,0.667,358,0.707,359,0.707,360,1.068,361,1.11,362,1.11,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,0.667,371,0.707,372,0.707,373,0.667,374,0.707,375,0.707,376,0.667,377,0.707,378,0.707,379,0.667,380,0.667,381,0.667,382,0.707,383,0.707,384,0.68,385,2.148,386,0.707,387,0.707,388,0.641,389,0.707,390,0.707,391,0.641,392,0.707,393,0.707,394,0.617,395,0.707,396,1.371,397,0.641,398,0.707,399,0.654,400,0.582,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.629,407,0.654,408,0.68,1318,2.73]],["title/injectables/EventGQL.html",[150,0.202,384,1.144]],["body/injectables/EventGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.589,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.494,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,1.067,385,2.147,386,1.109,387,1.109,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,1319,2.728]],["title/components/EventsComponent.html",[27,0.437,461,1.213]],["body/components/EventsComponent.html",[3,0.119,4,0.119,5,0.109,7,0.653,10,0.329,11,0.597,17,0.502,18,0.008,22,0.183,27,0.8,28,2.092,31,0.119,38,4.118,43,3.659,44,2.574,50,2.058,51,3.479,52,2.849,55,0.119,60,2.453,61,2.36,62,2.416,63,1.938,65,0.13,66,1.649,67,1.864,82,1.449,83,1.649,85,2.092,91,2.399,103,2.179,147,0.005,148,0.006,149,0.005,165,0.812,211,0.663,235,1.283,240,2.092,241,0.779,247,0.702,261,0.857,268,0.779,275,0.857,298,0.735,388,2.056,410,1.682,411,2.224,412,1.896,413,1.858,414,1.858,416,1.858,417,2.054,420,1.793,423,1.468,424,1.785,425,1.468,426,2.269,427,2.269,428,1.858,429,2.551,430,1.858,431,1.858,432,1.715,433,1.858,434,1.715,435,1.785,436,2.616,437,1.715,438,1.858,439,1.682,440,1.785,441,1.682,442,2.269,443,1.682,444,1.858,445,1.715,446,1.858,447,1.715,448,1.785,449,1.715,450,1.715,451,1.858,452,1.715,453,1.858,454,1.715,455,1.858,456,1.715,457,1.682,458,2.269,459,1.858,460,1.715,461,2.31,462,1.858,463,1.715,464,1.858,465,1.715,466,1.858,467,1.715,468,1.858,469,1.75,470,1.858,471,1.715,472,1.858,473,1.715,474,1.858,475,1.715,476,1.858,477,1.715,478,1.858,479,1.682,480,1.858,481,1.649,482,1.858,483,1.682,484,1.858,485,1.715,486,1.858,487,1.715,488,1.858,489,1.858,490,1.715,491,1.858,492,1.618,493,1.858,494,1.682,495,1.858,496,1.682,497,1.858,498,1.715,499,1.858,500,1.682,501,1.858,502,1.715,503,1.785,504,1.858,505,1.858,515,1.526,516,1.526,559,6.331,1315,4.832,1317,4.832,1320,5.656,1321,8.403,1322,7.783,1323,6.372,1324,7.783,1325,7.783,1326,6.372,1327,6.372,1328,5.184,1329,6.372,1330,6.372,1331,6.372,1332,3.94,1333,6.372,1334,7.783,1335,7.783]],["title/modules/EventsModule.html",[523,1.424,535,3.281]],["body/modules/EventsModule.html",[3,0.135,4,0.135,5,0.123,18,0.008,22,0.19,31,0.135,55,0.135,65,0.147,147,0.006,148,0.007,149,0.006,425,1.659,461,2.556,523,2.231,525,2.71,526,3.605,527,4.431,528,3.718,529,3.718,530,4.431,535,6.93,536,5.007,537,4.464,538,3.84,539,3.84,542,3.465,543,3.381,545,4.275,559,5.857,704,6.358,705,5.857,1336,6.391,1337,6.391,1338,6.391,1339,6.391,1340,6.703,1341,7.2,1342,7.2,1343,6.391,1344,6.391]],["title/modules/EventsRoutingModule.html",[523,1.424,1340,3.281]],["body/modules/EventsRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,147,0.006,148,0.007,149,0.006,302,0.92,461,2.255,520,3.625,525,2.808,542,3.088,543,3.451,572,4.429,573,4.788,574,4.429,576,4.265,577,4.612,1340,6.1,1343,6.621,1345,7.46]],["title/modules/GraphQLModule.html",[523,1.424,721,3.281]],["body/modules/GraphQLModule.html",[3,0.137,4,0.137,5,0.124,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,147,0.006,148,0.007,149,0.006,296,1.945,297,1.945,425,1.683,523,2.264,525,2.75,526,3.657,527,3.657,528,3.772,529,4.597,530,4.226,537,4.502,538,3.896,539,3.896,543,3.41,595,6.378,597,5.822,617,5.943,624,6.484,721,6.823,1346,6.484,1347,6.484,1348,7.305,1349,8.441,1350,8.441,1351,5.943,1352,5.943,1353,7.305]],["title/injectables/GraphqlService.html",[150,0.202,595,3.112]],["body/injectables/GraphqlService.html",[3,0.115,4,0.115,5,0.104,10,0.316,17,0.453,18,0.008,22,0.197,31,0.115,40,3.175,41,1.82,42,2.062,53,3.248,55,0.115,65,0.125,78,3.339,82,1.414,83,2.372,88,3.416,107,1.256,128,1.441,137,2.169,144,3.181,147,0.005,148,0.006,149,0.005,150,0.333,152,1.28,155,1.074,165,0.704,168,1.437,185,1.437,211,0.483,244,1.356,255,1.494,296,2.21,297,1.749,299,1.976,302,1.16,317,1.139,318,1.117,420,1.749,423,1.41,424,1.714,513,4.074,515,1.465,516,1.465,517,4.899,576,3.498,595,5.141,596,5.919,597,5.666,614,4.639,615,5.43,617,4.977,626,6.737,628,6.175,736,4.144,758,4.401,834,4.144,848,6.175,859,7.354,882,6.175,933,4.977,944,4.261,1057,7.324,1351,7.647,1352,6.175,1354,5.43,1355,8.628,1356,6.118,1357,9.166,1358,6.118,1359,6.118,1360,7.59,1361,8.135,1362,5.43,1363,6.118,1364,6.118,1365,8.252,1366,6.118,1367,6.118,1368,6.737,1369,5.43,1370,6.175,1371,4.639,1372,4.639,1373,5.755,1374,6.118,1375,6.118,1376,6.118,1377,7.59,1378,6.118,1379,6.118,1380,6.118,1381,6.118,1382,6.118,1383,6.118,1384,6.118,1385,6.118,1386,6.118,1387,8.135,1388,6.118,1389,6.118,1390,7.59,1391,7.59,1392,6.118,1393,6.118,1394,6.118,1395,6.118,1396,6.118,1397,6.118,1398,6.118,1399,5.43,1400,6.118,1401,6.118,1402,6.118,1403,6.118,1404,6.118,1405,6.118,1406,6.118,1407,6.118,1408,6.118,1409,6.118,1410,6.118,1411,6.118,1412,4.977,1413,7.59,1414,6.118,1415,6.118,1416,8.252,1417,5.755,1418,6.118,1419,6.118,1420,4.639,1421,6.118,1422,6.118,1423,5.43,1424,7.59,1425,6.118,1426,6.118,1427,6.118,1428,6.118,1429,6.118]],["title/injectables/GraphqlSubscriptionService.html",[150,0.202,597,2.841]],["body/injectables/GraphqlSubscriptionService.html",[0,0.765,3,0.121,4,0.121,5,0.11,10,0.335,11,0.603,17,0.506,18,0.008,19,1.494,21,0.911,22,0.184,31,0.121,55,0.147,65,0.132,82,1.465,83,2.44,85,2.245,112,1.852,115,2.785,132,1.094,133,3.256,137,2.247,143,3.516,144,2.282,147,0.005,148,0.006,149,0.005,150,0.345,152,1.356,156,1.429,165,0.851,211,0.621,241,0.649,302,0.97,317,1.207,318,1.184,388,2.068,391,2.068,394,2.097,400,1.878,420,1.812,423,1.812,424,2.203,515,1.884,516,1.884,585,5.304,597,4.862,616,7.034,648,5.327,649,5.467,650,5.467,758,4.195,812,5.616,851,3.849,874,5.92,934,4.008,944,3.348,1370,7.616,1371,4.916,1372,4.916,1373,4.916,1430,5.274,1431,7.515,1432,7.515,1433,7.813,1434,6.483,1435,5.962,1436,6.888,1437,7.515,1438,7.515,1439,6.483,1440,6.981,1441,6.483,1442,6.483,1443,6.483,1444,6.483,1445,6.483,1446,6.483,1447,6.483,1448,5.755,1449,5.755,1450,5.963,1451,4.629,1452,5.274,1453,5.274,1454,5.755,1455,6.981,1456,5.274,1457,5.755,1458,5.755,1459,8.004,1460,8.004,1461,5.755,1462,5.755,1463,5.755,1464,5.755,1465,5.755,1466,5.755,1467,5.755,1468,5.755,1469,5.755,1470,5.755,1471,4.916,1472,5.755,1473,5.755,1474,5.755,1475,5.755,1476,5.755,1477,6.981,1478,5.755]],["title/injectables/I18Service.html",[38,2.001,150,0.202]],["body/injectables/I18Service.html",[3,0.131,4,0.131,5,0.119,10,0.361,11,0.631,17,0.539,18,0.008,21,1.02,22,0.188,31,0.131,38,3.58,40,3.431,41,2.446,42,2.353,55,0.131,65,0.143,82,1.301,85,2.246,94,5.643,144,2.458,147,0.005,148,0.006,149,0.005,150,0.361,152,1.461,155,1.226,156,1.179,165,0.865,211,0.649,302,0.862,317,1.301,318,1.275,420,1.894,423,1.894,424,2.303,515,1.969,516,1.969,610,2.964,619,4.318,620,3.725,787,4.987,788,7.34,812,5.871,1479,5.681,1480,8.739,1481,8.739,1482,8.223,1483,8.739,1484,6.984,1485,6.984,1486,8.223,1487,6.984,1488,6.984,1489,9.202,1490,9.023,1491,6.984,1492,8.223,1493,6.984,1494,6.984,1495,6.984,1496,6.984,1497,6.984,1498,5.681,1499,6.984,1500,6.984,1501,6.984,1502,9.202,1503,6.984,1504,6.984,1505,6.984]],["title/interfaces/IPossibleKickoffs.html",[0,0.542,1506,3.281]],["body/interfaces/IPossibleKickoffs.html",[0,0.897,2,2.9,3,0.115,4,0.115,5,0.105,10,0.474,11,0.584,17,0.53,18,0.008,19,1.774,21,0.889,22,0.191,27,0.724,28,1.894,31,0.115,38,3.599,39,3.171,43,3.313,44,2.481,45,1.601,50,1.984,51,2.745,52,2.745,55,0.115,56,1.808,58,1.236,60,1.529,61,1.471,63,1.529,65,0.125,67,1.471,78,2.864,79,3.511,82,1.144,83,1.59,85,1.894,103,1.529,111,3.809,112,1.755,114,2.07,115,2.407,136,2.026,137,1.755,140,3.797,143,2.745,144,3.04,146,3.929,147,0.005,148,0.006,149,0.005,156,1.284,235,1.236,241,0.888,243,1.415,252,1.808,268,0.918,271,1.415,272,1.415,302,1.066,417,1.621,481,1.59,503,2.131,551,4.385,739,3.171,758,3.275,907,3.646,908,3.646,922,5.11,934,3.797,969,4.703,1005,4.726,1101,3.797,1228,4.656,1229,4.656,1234,4.268,1236,4.656,1238,5.768,1247,5.768,1248,4.656,1249,4.385,1251,4.656,1252,4.656,1253,4.656,1254,5.153,1255,4.656,1256,4.656,1257,4.656,1258,6.551,1259,4.656,1260,4.656,1261,5.902,1314,5.902,1506,6.341,1507,4.656,1508,4.656,1509,7.224,1510,7.224,1511,7.224,1512,6.169,1513,5.768,1514,4.996,1515,4.656,1516,4.159,1517,6.189,1518,4.996,1519,4.996,1520,4.996,1521,4.996,1522,4.996,1523,7.224,1524,4.996,1525,4.996,1526,4.996,1527,4.656,1528,4.996,1529,4.996,1530,4.996,1531,4.996,1532,4.996,1533,4.996,1534,4.996,1535,4.996,1536,4.996,1537,6.189,1538,4.996,1539,4.996,1540,4.656,1541,4.996,1542,4.996,1543,4.996,1544,4.996,1545,6.189,1546,6.189,1547,6.189,1548,4.996,1549,4.996,1550,4.996,1551,4.996,1552,6.725,1553,4.996,1554,4.996,1555,4.996,1556,4.996,1557,4.996,1558,4.996,1559,4.996,1560,4.996,1561,4.996,1562,4.996,1563,4.996,1564,4.996,1565,4.996,1566,6.189,1567,4.996,1568,4.996,1569,4.996,1570,4.996,1571,4.996,1572,4.996,1573,4.996,1574,4.385,1575,4.996,1576,4.996,1577,4.996,1578,4.996,1579,4.996,1580,4.996,1581,4.996,1582,4.996,1583,6.189,1584,6.189]],["title/interfaces/ISnackBarData.html",[0,0.542,1585,3.484]],["body/interfaces/ISnackBarData.html",[0,0.868,2,3.473,3,0.138,4,0.138,5,0.125,10,0.38,11,0.65,17,0.506,18,0.008,21,1.014,22,0.173,26,2.279,27,0.807,28,2.11,29,3.288,31,0.138,55,0.159,60,1.831,61,1.761,63,1.831,65,0.15,67,1.761,82,1.37,85,1.831,91,2.768,103,1.831,147,0.006,148,0.007,149,0.006,417,1.941,492,1.867,586,5.251,944,4.736,1585,6.768,1586,5.983,1587,7.461,1588,6.528,1589,6.528,1590,6.528,1591,6.528]],["title/interfaces/ITeamCanPlayAtDate.html",[0,0.542,1512,3.281]],["body/interfaces/ITeamCanPlayAtDate.html",[0,0.903,2,2.929,3,0.116,4,0.116,5,0.106,10,0.448,11,0.587,17,0.457,18,0.008,19,1.691,21,0.893,22,0.191,27,0.729,28,1.906,31,0.116,38,3.615,39,3.203,43,3.333,44,2.506,45,1.756,50,2.003,51,2.773,52,2.773,55,0.116,56,1.602,58,1.671,60,1.544,61,1.485,63,1.544,65,0.127,67,1.485,78,2.881,79,3.546,82,1.155,83,1.606,85,1.906,103,1.544,111,3.832,112,1.772,114,2.09,115,2.422,136,2.046,137,1.772,140,3.834,143,3.712,144,3.051,146,3.953,147,0.005,148,0.006,149,0.005,156,1.292,235,1.249,241,0.891,243,1.429,252,1.602,268,0.867,271,1.429,272,1.429,302,1.07,417,1.637,481,1.606,503,2.144,551,4.429,739,3.203,758,3.308,907,3.683,908,3.683,922,5.133,934,3.834,969,4.732,1005,4.747,1101,3.834,1228,4.703,1229,4.703,1234,4.287,1236,4.703,1238,5.804,1247,5.804,1248,4.703,1249,4.429,1251,4.703,1252,4.703,1253,4.703,1254,5.184,1255,4.703,1256,4.703,1257,4.703,1258,6.573,1259,4.703,1260,4.703,1261,5.928,1314,5.928,1506,6.191,1507,4.703,1508,4.703,1509,6.227,1510,6.227,1511,6.227,1512,5.928,1513,5.804,1514,5.046,1515,4.703,1516,4.201,1517,7.245,1518,5.046,1519,5.046,1520,5.046,1521,5.046,1522,5.046,1523,7.245,1524,5.046,1525,5.046,1526,5.046,1527,4.703,1528,5.046,1529,5.046,1530,5.046,1531,5.046,1532,5.046,1533,5.046,1534,5.046,1535,5.046,1536,5.046,1537,6.227,1538,5.046,1539,5.046,1540,4.703,1541,5.046,1542,5.046,1543,5.046,1544,5.046,1545,6.227,1546,6.227,1547,6.227,1548,5.046,1549,5.046,1550,5.046,1551,5.046,1552,6.754,1553,5.046,1554,5.046,1555,5.046,1556,5.046,1557,5.046,1558,5.046,1559,5.046,1560,5.046,1561,5.046,1562,5.046,1563,5.046,1564,5.046,1565,5.046,1566,6.227,1567,5.046,1568,5.046,1569,5.046,1570,5.046,1571,5.046,1572,5.046,1573,5.046,1574,4.429,1575,5.046,1576,5.046,1577,5.046,1578,5.046,1579,5.046,1580,5.046,1581,5.046,1582,5.046,1583,6.227,1584,6.227]],["title/interfaces/IntrospectionResultData.html",[0,0.542,1592,2.968]],["body/interfaces/IntrospectionResultData.html",[0,0.822,2,3.289,3,0.13,4,0.13,5,0.119,10,0.36,11,0.63,16,5.862,17,0.572,18,0.008,21,0.97,22,0.178,31,0.13,37,4.529,55,0.179,65,0.142,107,1.429,131,1.429,132,1.385,147,0.007,148,0.006,149,0.005,150,0.36,154,1.734,155,1.223,157,2.004,167,2.201,168,1.636,179,1.734,180,1.734,185,1.928,211,0.648,295,1.734,296,2.119,297,2.011,298,0.947,299,1.668,300,1.701,302,0.859,316,1.734,317,1.297,318,1.272,320,1.701,408,1.734,1417,5.281,1420,6.619,1435,4.717,1471,6.224,1592,5.637,1593,4.973,1594,6.972,1595,7.582,1596,7.287,1597,6.182,1598,6.224,1599,5.666]],["title/interfaces/IntrospectionResultData-1.html",[0,0.451,111,1.915,1592,2.471]],["body/interfaces/IntrospectionResultData-1.html",[0,0.876,2,3.509,3,0.139,4,0.139,5,0.127,10,0.384,11,0.654,16,6.086,17,0.535,18,0.008,21,0.964,55,0.16,147,0.007,148,0.007,149,0.006,155,1.305,211,0.673,302,0.917,1417,5.633,1592,5.788,1594,7.089,1598,6.463,1599,6.044,1600,6.044,1601,6.044]],["title/injectables/LatestEventGQL.html",[150,0.202,388,1.079]],["body/injectables/LatestEventGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.707,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.514,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.559,117,1.656,119,1.83,121,1.463,123,0.665,125,0.665,128,1.779,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.652,152,0.57,153,0.652,154,2.343,155,0.478,156,0.46,157,2.329,158,2.459,159,1.551,160,2.109,161,2.112,162,1.853,163,1.795,164,1.551,165,0.253,167,2.358,168,0.64,169,1.722,170,1.108,171,1.066,172,1.086,173,1.086,174,1.086,175,1.025,176,1.025,177,0.691,178,0.691,179,0.678,180,2.371,181,1.108,182,1.964,183,1.689,184,1.689,185,2.244,186,1.086,187,1.086,188,1.722,189,1.086,190,1.926,191,1.086,192,0.705,193,2.054,194,1.492,195,0.705,196,0.705,197,1.066,198,0.705,199,1.551,200,1.521,201,1.066,202,1.551,203,2.112,204,2.112,205,1.964,206,1.551,207,1.689,208,1.521,209,1.521,210,1.086,211,0.704,212,1.108,213,1.108,214,1.369,215,1.369,216,1.369,217,1.086,218,1.108,219,1.108,220,1.521,221,1.066,222,1.521,223,1.066,224,1.086,225,1.108,226,1.108,227,1.086,228,1.521,229,1.408,230,1.964,231,1.902,232,1.521,233,1.722,234,1.086,235,1.588,236,1.086,237,0.705,238,1.654,239,1.957,240,1.066,241,0.771,242,0.949,243,0.627,244,1.899,245,0.691,246,0.665,247,0.9,248,1.656,249,1.005,250,1.025,251,1.316,252,0.896,253,0.691,254,1.066,255,1.689,256,0.691,257,1.066,258,1.722,259,0.691,260,0.691,261,0.825,262,1.342,263,1.045,264,1.622,265,2.129,266,1.086,267,1.086,268,0.771,269,1.086,270,1.086,271,1.594,272,1.501,273,1.086,274,1.086,275,0.9,276,1.005,277,1.521,278,1.086,279,0.678,280,1.066,281,1.066,282,1.291,283,1.086,284,1.086,285,1.316,286,0.705,287,1.086,288,1.086,289,1.086,290,1.086,291,1.086,292,1.086,293,1.408,294,1.066,295,0.678,296,1.501,297,1.218,298,0.494,299,1.025,300,0.665,301,0.705,302,1.023,303,1.316,304,1.795,305,1.316,306,1.291,307,1.316,308,1.066,309,1.066,310,1.066,311,1.066,312,1.316,313,1.492,314,1.316,315,1.066,316,0.678,317,1.748,318,1.714,319,0.665,320,2.291,321,2.362,322,0.665,323,0.705,324,0.705,325,0.665,326,0.705,327,0.705,328,0.665,329,0.705,330,0.705,331,0.652,332,0.705,333,0.705,334,0.652,335,0.705,336,0.705,337,0.665,338,0.665,339,0.705,340,0.705,341,0.665,342,0.665,343,1.086,344,0.665,345,0.705,346,0.705,347,0.678,348,0.705,349,0.705,350,0.678,351,0.705,352,0.705,353,0.678,354,0.705,355,0.678,356,0.705,357,0.665,358,0.705,359,0.705,360,0.678,361,0.705,362,0.705,363,0.665,364,0.705,365,0.705,366,0.652,367,0.652,368,0.705,369,0.705,370,0.665,371,0.705,372,0.705,373,0.665,374,0.705,375,0.705,376,0.665,377,0.705,378,0.705,379,0.665,380,0.665,381,0.665,382,0.705,383,0.705,384,0.678,385,2.146,386,0.705,387,0.705,388,1.005,389,1.108,390,1.108,391,0.64,392,0.705,393,0.705,394,0.615,395,0.705,396,1.369,397,0.64,398,0.705,399,0.652,400,0.581,401,0.705,402,0.652,403,0.665,404,0.705,405,0.705,406,0.627,407,0.652,408,0.678,1602,2.723]],["title/injectables/LocateMatchGQL.html",[150,0.202,325,1.122]],["body/injectables/LocateMatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,2.003,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,2.025,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,1.046,326,1.109,327,1.109,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,1603,2.728]],["title/components/LoginComponent.html",[27,0.437,463,1.237]],["body/components/LoginComponent.html",[3,0.111,4,0.111,5,0.101,7,0.609,10,0.307,11,0.572,17,0.525,18,0.008,21,0.876,22,0.183,23,4.039,26,1.84,27,0.775,28,2.027,31,0.111,40,3.351,41,1.767,42,2.002,53,3.214,54,2.459,55,0.111,60,2.447,61,2.353,62,2.367,63,1.855,65,0.121,66,1.537,67,1.784,82,1.388,83,2.357,85,2.027,86,3.468,88,3.37,103,2.125,112,2.564,114,2.511,115,2.357,136,2.458,137,2.602,143,3.331,147,0.005,148,0.006,149,0.005,165,0.854,193,1.717,211,0.674,229,1.395,241,0.745,247,0.654,261,0.82,268,0.745,275,0.82,298,0.685,410,1.568,411,2.129,412,1.767,413,1.731,414,1.731,416,1.731,417,1.967,420,1.717,423,1.967,424,2.087,425,1.369,426,2.172,427,2.172,428,1.731,429,2.489,430,1.731,431,1.731,432,1.599,433,1.731,434,1.599,435,1.664,436,2.564,437,1.599,438,1.731,439,1.568,440,1.664,441,1.568,442,2.172,443,1.568,444,1.731,445,1.599,446,1.731,447,1.599,448,1.664,449,1.599,450,1.599,451,1.731,452,1.599,453,1.731,454,1.599,455,1.731,456,1.599,457,1.568,458,2.172,459,1.731,460,1.599,461,1.568,462,1.731,463,2.298,464,1.731,465,1.599,466,1.731,467,1.599,468,1.731,469,1.631,470,1.731,471,1.599,472,1.731,473,1.599,474,1.731,475,1.599,476,1.731,477,1.599,478,1.731,479,1.568,480,1.731,481,1.537,482,1.731,483,1.568,484,1.731,485,1.599,486,1.731,487,1.599,488,1.731,489,1.731,490,1.599,491,1.731,492,1.508,493,1.731,494,1.568,495,1.731,496,1.568,497,1.731,498,1.599,499,1.731,500,1.568,501,1.731,502,1.599,503,1.664,504,1.731,505,1.731,513,4.3,515,1.784,516,1.784,521,3.527,660,6.614,661,2.94,683,5.272,699,5.272,739,3.067,758,4.553,852,4.503,874,3.836,904,3.836,925,3.836,927,5.046,936,6.614,1003,5.272,1004,6.804,1018,4.832,1216,5.272,1217,5.272,1246,6.624,1604,5.272,1605,9.107,1606,8.142,1607,7.451,1608,7.227,1609,8.538,1610,7.451,1611,7.451,1612,5.94,1613,5.94,1614,5.94,1615,7.451,1616,5.94,1617,5.94,1618,5.94,1619,5.94,1620,5.272,1621,7.451,1622,5.94,1623,5.94,1624,7.451,1625,8.142,1626,5.94,1627,5.94,1628,5.94,1629,7.451,1630,6.614,1631,7.451]],["title/interfaces/LoginContext.html",[0,0.542,832,3.484]],["body/interfaces/LoginContext.html",[0,0.759,2,3.037,3,0.12,4,0.12,5,0.11,10,0.332,11,0.601,17,0.467,18,0.008,21,1.023,22,0.187,31,0.12,41,1.913,55,0.147,65,0.131,78,3.444,82,1.198,83,2.329,85,2.186,107,1.802,112,2.236,137,2.411,143,2.875,144,3.29,147,0.007,148,0.006,149,0.005,150,0.344,175,1.54,193,1.803,194,1.601,197,1.601,229,2.062,261,0.862,302,0.794,317,1.198,318,1.175,331,1.875,334,1.875,406,1.803,513,3.696,520,3.126,619,3.976,620,3.43,649,4.154,650,4.154,736,4.356,772,5.301,793,5.55,794,5.657,795,5.563,799,5.216,804,4.877,805,5.709,808,5.709,810,5.709,813,5.709,814,5.709,815,5.709,817,7.489,818,5.233,819,5.709,820,5.709,821,7.489,823,5.709,824,6.864,827,5.709,829,4.877,831,5.709,832,6.397,834,5.301,836,5.709,838,5.709,840,5.709,848,6.368,849,6.368,850,5.233,851,3.819,852,6.657,853,4.877,854,5.233,855,5.709,856,7.444,857,5.709,858,5.709,859,6.368,860,5.709,861,6.947,862,5.709,863,5.709,864,6.397,865,6.947,866,5.709,867,6.947,868,5.709,869,5.709,870,5.709,871,5.709,872,6.368,873,5.233,874,5.055,875,5.233,876,5.709,877,5.709,878,4.877,879,5.709,880,5.709,881,5.709,882,5.233,883,5.709,884,5.709]],["title/components/ManagePenaltyComponent.html",[27,0.437,465,1.237]],["body/components/ManagePenaltyComponent.html",[3,0.103,4,0.103,5,0.094,7,0.564,10,0.284,11,0.544,17,0.525,18,0.008,21,0.763,22,0.189,26,1.704,27,0.748,28,1.956,31,0.103,38,4.024,40,3.293,41,1.636,42,1.854,43,3.421,44,2.222,45,1.374,50,1.777,51,3.172,52,2.459,53,3.124,54,2.277,55,0.103,56,1.485,60,2.438,61,2.346,62,2.441,63,1.767,65,0.112,66,1.424,67,1.699,82,1.322,83,2.277,85,1.956,86,2.799,88,3.252,91,2.957,103,2.066,112,2.371,114,1.854,115,1.74,127,2.754,128,1.348,131,1.456,132,1.326,133,2.277,136,1.815,137,2.028,147,0.004,148,0.006,149,0.004,160,1.343,162,1.667,163,1.699,165,0.85,200,1.396,211,0.678,241,0.71,244,1.741,246,1.343,247,0.865,248,1.881,249,2.066,261,0.781,268,0.71,275,0.781,293,2.152,298,0.634,302,0.875,337,2.027,397,2.102,400,1.876,410,1.452,411,2.028,412,1.636,413,1.604,414,1.604,416,1.604,417,1.873,420,1.635,423,1.979,424,2.325,425,1.267,426,2.069,427,2.069,428,1.604,429,2.42,430,1.604,431,1.604,432,1.481,433,1.604,434,1.481,435,1.541,436,2.504,437,1.481,438,1.604,439,1.873,440,2.2,441,1.452,442,2.069,443,1.452,444,1.604,445,1.481,446,1.604,447,1.481,448,1.541,449,1.481,450,1.481,451,1.604,452,1.481,453,1.604,454,1.481,455,1.604,456,1.481,457,1.873,458,2.069,459,1.604,460,1.481,461,1.452,462,1.604,463,1.481,464,1.604,465,2.234,466,2.644,467,1.481,468,1.604,469,1.51,470,1.604,471,1.481,472,1.604,473,1.481,474,1.604,475,1.481,476,1.604,477,1.481,478,1.604,479,1.452,480,1.604,481,1.424,482,1.604,483,1.452,484,1.604,485,1.481,486,1.604,487,1.481,488,1.604,489,1.604,490,1.481,491,1.604,492,1.396,493,1.604,494,1.452,495,1.604,496,1.452,497,1.604,498,1.481,499,1.604,500,1.452,501,1.604,502,1.481,503,1.541,504,1.604,505,1.604,515,1.881,516,1.881,563,7.517,564,4.882,565,3.928,568,3.266,593,3.933,594,5.131,661,3.123,826,3.725,939,3.928,940,3.266,944,2.841,966,4.806,969,4.387,1102,7.006,1103,4.171,1104,6.391,1105,5.773,1116,4.882,1118,6.298,1121,4.882,1124,6.391,1136,4.475,1137,4.475,1167,4.806,1272,4.806,1328,4.475,1513,5.956,1527,6.293,1632,8.3,1633,6.298,1634,7.096,1635,7.856,1636,5.501,1637,7.856,1638,5.501,1639,5.501,1640,5.501,1641,7.096,1642,5.501,1643,7.096,1644,5.501,1645,7.096,1646,5.501,1647,5.501,1648,8.3,1649,3.928,1650,4.882,1651,5.501,1652,3.928,1653,5.501,1654,3.928,1655,5.501,1656,5.501,1657,5.501,1658,5.501,1659,7.096,1660,7.096,1661,7.096,1662,4.882,1663,7.096,1664,4.882]],["title/components/ManagepitchesComponent.html",[27,0.437,467,1.237]],["body/components/ManagepitchesComponent.html",[3,0.111,4,0.111,5,0.101,7,0.608,10,0.306,11,0.571,17,0.509,18,0.008,22,0.192,26,1.837,27,0.774,28,2.025,31,0.111,40,3.349,41,1.764,42,1.998,43,2.582,44,2.395,50,1.915,51,2.65,52,2.65,53,3.212,54,2.454,55,0.111,60,2.446,61,2.353,62,2.366,63,1.853,65,0.121,66,1.535,67,1.782,82,1.386,83,2.106,85,2.025,86,2.338,88,3.368,91,2.801,103,2.124,112,1.694,114,1.998,115,1.876,136,1.956,137,2.127,147,0.005,148,0.006,149,0.005,165,0.832,201,1.853,211,0.694,241,0.745,247,0.653,252,1.877,261,0.82,268,0.946,275,0.988,298,0.684,302,0.731,399,1.42,410,1.565,411,2.127,412,1.764,413,1.728,414,1.728,416,1.728,417,1.965,420,1.715,423,1.966,424,2.39,425,1.366,426,2.17,427,2.17,428,1.728,429,2.487,430,1.728,431,1.728,432,1.596,433,1.728,434,1.596,435,1.661,436,2.562,437,1.596,438,1.728,439,1.965,440,2.278,441,1.565,442,2.17,443,1.565,444,1.728,445,1.596,446,1.728,447,2.004,448,1.661,449,1.596,450,1.596,451,1.728,452,1.596,453,1.728,454,1.596,455,1.728,456,2.004,457,1.565,458,2.17,459,1.728,460,1.596,461,1.565,462,1.728,463,1.596,464,1.728,465,1.596,466,1.728,467,2.297,468,1.728,469,1.628,470,1.728,471,1.596,472,1.728,473,1.596,474,1.728,475,1.596,476,1.728,477,1.596,478,1.728,479,1.565,480,1.728,481,1.535,482,1.728,483,1.565,484,1.728,485,1.596,486,1.728,487,1.596,488,1.728,489,1.728,490,1.596,491,1.728,492,1.505,493,1.728,494,1.565,495,1.728,496,1.565,497,1.728,498,1.596,499,1.728,500,1.565,501,1.728,502,1.596,503,1.661,504,1.728,505,1.728,515,1.948,516,1.948,567,3.829,568,4.83,593,4.073,594,5.275,661,2.938,940,3.52,944,3.062,994,4.233,1002,6.941,1005,5.31,1015,5.262,1101,5.029,1167,5.041,1264,5.262,1269,5.643,1272,5.041,1652,4.233,1654,4.233,1665,5.262,1666,7.443,1667,8.135,1668,7.443,1669,7.443,1670,4.823,1671,5.929,1672,5.929,1673,7.443,1674,5.929,1675,7.443,1676,5.929,1677,5.929,1678,5.929,1679,5.929,1680,5.929,1681,5.929,1682,4.823,1683,4.495,1684,4.495,1685,5.929,1686,5.929,1687,5.929,1688,5.929,1689,6.606]],["title/components/ManageteamsComponent.html",[27,0.437,471,1.237]],["body/components/ManageteamsComponent.html",[3,0.112,4,0.112,5,0.102,7,0.614,10,0.309,11,0.575,17,0.537,18,0.008,21,0.879,22,0.188,26,1.855,27,0.778,28,2.034,31,0.112,32,4.961,33,3.866,40,3.356,41,1.781,42,2.017,45,1.658,50,1.934,53,3.223,54,2.478,55,0.112,58,1.81,60,2.447,61,2.354,62,2.456,63,1.864,65,0.122,66,1.549,67,1.793,82,1.394,83,1.938,85,2.238,86,2.361,88,3.382,91,2.818,103,2.131,112,2.606,114,2.523,115,2.369,136,2.47,137,2.446,147,0.005,148,0.006,149,0.005,165,0.846,211,0.71,223,1.864,241,0.749,247,0.659,261,0.824,268,0.749,275,0.824,298,0.69,302,0.738,410,1.58,411,2.139,412,1.781,413,1.745,414,1.745,416,1.745,417,1.976,420,1.725,423,1.973,424,2.097,425,1.379,426,2.183,427,2.183,428,1.745,429,2.496,430,1.745,431,1.745,432,1.611,433,1.745,434,1.611,435,1.677,436,2.57,437,1.611,438,1.745,439,1.976,440,2.097,441,1.58,442,2.183,443,1.58,444,1.745,445,1.611,446,1.745,447,1.611,448,1.677,449,1.611,450,1.611,451,1.745,452,1.611,453,1.745,454,1.611,455,1.745,456,1.611,457,1.58,458,2.183,459,1.745,460,1.611,461,1.58,462,1.745,463,1.611,464,1.745,465,1.611,466,1.745,467,1.611,468,1.745,469,1.644,470,1.745,471,2.305,472,1.745,473,1.611,474,1.745,475,1.611,476,1.745,477,1.611,478,1.745,479,1.58,480,1.745,481,1.549,482,1.745,483,1.58,484,1.745,485,1.611,486,1.745,487,2.016,488,2.183,489,1.745,490,1.611,491,1.745,492,1.519,493,1.745,494,1.58,495,1.745,496,1.58,497,1.745,498,1.611,499,1.745,500,1.58,501,1.745,502,1.611,503,1.677,504,1.745,505,1.745,515,2.05,516,2.05,557,4.539,558,5.313,568,3.554,593,4.413,594,5.449,940,3.554,944,3.091,958,4.851,1167,5.071,1177,4.87,1272,5.071,1652,4.274,1654,4.274,1682,4.87,1683,4.539,1684,4.539,1690,5.313,1691,7.488,1692,8.171,1693,7.488,1694,6.646,1695,7.488,1696,5.986,1697,6.646,1698,5.986,1699,5.313,1700,6.646,1701,5.986,1702,5.986,1703,7.488,1704,5.986,1705,5.986,1706,5.986,1707,5.986,1708,5.986,1709,5.986,1710,5.986,1711,5.986,1712,5.986,1713,5.986]],["title/components/ManagetournamentComponent.html",[27,0.437,473,1.237]],["body/components/ManagetournamentComponent.html",[3,0.092,4,0.092,5,0.084,7,0.849,8,3.322,10,0.384,11,0.505,12,2.041,13,2.078,14,1.786,15,5.125,16,4.698,17,0.558,18,0.008,19,1.734,20,5.375,21,0.951,22,0.188,26,1.52,27,0.707,28,1.849,31,0.092,38,3.943,40,3.203,41,1.957,42,1.653,43,3.71,44,1.981,48,1.794,49,1.759,51,3.32,52,2.192,53,2.987,54,2.03,55,0.092,56,1.377,57,1.152,59,1.152,60,2.425,61,2.333,62,2.382,63,1.638,65,0.1,66,1.703,67,1.576,78,2.795,79,2.804,82,1.225,83,2.381,85,2.121,86,1.934,88,3.074,89,5.302,91,2.795,103,1.976,107,1.35,111,3.973,112,2.487,114,1.653,115,2.082,117,1.175,127,3.294,128,1.25,132,1.11,133,2.724,136,1.618,137,1.88,144,2.613,146,2.533,147,0.006,148,0.005,149,0.004,155,1.155,156,1.11,165,0.874,168,1.152,211,0.715,224,1.885,227,1.67,241,0.658,247,0.54,257,1.221,261,0.725,268,0.658,271,1.13,275,0.725,282,1.813,298,0.566,302,1.074,373,1.938,376,2.125,410,1.295,411,1.88,412,1.459,413,1.43,414,1.43,416,1.43,417,1.737,420,1.516,423,2.038,424,2.387,425,1.13,426,1.918,427,1.918,428,1.43,429,2.313,430,1.43,431,1.43,432,1.32,433,1.43,434,1.32,435,1.374,436,2.413,437,1.32,438,1.43,439,1.737,440,2.223,441,1.295,442,1.918,443,1.295,444,1.43,445,1.32,446,1.43,447,1.32,448,1.374,449,1.32,450,1.32,451,1.43,452,1.32,453,1.43,454,1.32,455,1.43,456,1.32,457,1.295,458,1.918,459,1.43,460,1.32,461,1.295,462,1.43,463,1.32,464,1.43,465,1.32,466,1.43,467,1.32,468,1.43,469,1.347,470,1.43,471,1.32,472,1.43,473,2.136,474,1.43,475,1.32,476,1.43,477,1.32,478,1.43,479,1.295,480,1.43,481,1.269,482,1.43,483,1.295,484,1.43,485,1.32,486,1.43,487,1.32,488,1.43,489,1.43,490,1.32,491,1.43,492,1.245,493,1.43,494,1.295,495,1.43,496,1.295,497,1.43,498,1.32,499,1.43,500,1.295,501,1.43,502,1.32,503,1.374,504,1.43,505,1.43,515,1.982,516,1.982,568,2.912,570,4.353,593,4.144,594,5.117,610,2.082,619,3.032,620,2.616,661,2.934,766,3.99,826,4.456,851,2.912,907,3.907,908,3.907,940,2.912,944,2.533,1122,4.989,1123,3.167,1167,5.029,1328,3.99,1332,3.032,1399,4.353,1412,6.041,1540,3.719,1574,3.502,1633,5.84,1649,3.502,1652,3.502,1682,3.99,1683,3.719,1684,3.719,1714,3.99,1715,6.58,1716,7.426,1717,6.58,1718,7.426,1719,7.426,1720,7.426,1721,7.426,1722,7.044,1723,6.58,1724,6.58,1725,7.936,1726,7.936,1727,7.936,1728,4.353,1729,7.426,1730,6.58,1731,6.58,1732,4.904,1733,6.58,1734,4.904,1735,6.58,1736,4.904,1737,4.904,1738,4.904,1739,4.904,1740,4.904,1741,6.58,1742,4.904,1743,4.904,1744,4.904,1745,6.58,1746,4.904,1747,4.904,1748,4.904,1749,6.58,1750,4.904,1751,4.904,1752,4.904,1753,5.353,1754,4.904,1755,7.426,1756,4.904,1757,4.353,1758,4.904,1759,4.353,1760,4.904,1761,6.58,1762,6.58,1763,4.353,1764,4.904,1765,4.904,1766,4.904,1767,4.904,1768,4.904,1769,4.353,1770,6.58,1771,4.904,1772,4.904,1773,8.521,1774,4.904,1775,4.904,1776,4.904,1777,4.904,1778,4.904,1779,4.904,1780,4.904,1781,4.904,1782,4.904,1783,4.904,1784,4.904,1785,4.904,1786,6.58,1787,4.904,1788,4.904,1789,4.904,1790,3.99,1791,4.353,1792,4.904,1793,4.904,1794,4.904,1795,4.904,1796,4.353,1797,4.904,1798,6.591,1799,4.904,1800,4.904,1801,4.904,1802,4.904,1803,6.58,1804,6.58,1805,6.58,1806,6.58,1807,5.353,1808,6.58,1809,5.353]],["title/components/ManageusersComponent.html",[27,0.437,475,1.237]],["body/components/ManageusersComponent.html",[3,0.124,4,0.124,5,0.113,7,0.68,10,0.343,18,0.008,22,0.136,27,0.814,28,2.128,31,0.124,55,0.124,60,2.457,61,2.364,62,2.443,63,1.985,65,0.136,66,1.717,67,1.909,82,1.592,103,2.208,112,2.443,147,0.005,148,0.006,149,0.005,165,0.74,211,0.63,241,0.798,247,0.73,261,0.878,268,0.798,275,0.878,298,0.765,410,1.751,411,2.278,412,1.973,413,1.933,414,1.933,416,1.933,417,2.105,420,1.837,423,1.528,425,1.528,426,2.324,427,2.324,428,1.933,429,2.586,430,1.933,431,1.933,432,1.785,433,1.933,434,1.785,435,1.857,436,2.645,437,1.785,438,1.933,439,1.751,440,1.857,441,1.751,442,2.324,443,1.751,444,1.933,445,1.785,446,1.933,447,1.785,448,1.857,449,1.785,450,1.785,451,1.933,452,1.785,453,1.933,454,1.785,455,1.933,456,1.785,457,1.751,458,2.324,459,1.933,460,1.785,461,1.751,462,1.933,463,1.785,464,1.933,465,1.785,466,1.933,467,1.785,468,1.933,469,1.821,470,1.933,471,1.785,472,1.933,473,1.785,474,1.933,475,2.388,476,1.933,477,1.785,478,1.933,479,1.751,480,1.933,481,1.717,482,1.933,483,1.751,484,1.933,485,1.785,486,1.933,487,1.785,488,1.933,489,1.933,490,1.785,491,1.933,492,1.683,493,1.933,494,1.751,495,1.933,496,1.751,497,1.933,498,1.785,499,1.933,500,1.751,501,1.933,502,1.785,503,1.857,504,1.933,505,1.933,1810,5.886,1811,7.973,1812,8.55,1813,7.973,1814,6.632,1815,6.632]],["title/components/MatchComponent.html",[27,0.437,477,1.237]],["body/components/MatchComponent.html",[3,0.096,4,0.096,5,0.087,7,0.524,10,0.264,11,0.519,14,1.048,15,5.209,17,0.553,18,0.008,19,0.97,21,0.867,22,0.19,26,1.583,27,0.721,28,1.887,31,0.096,38,3.972,39,2.638,40,3.356,41,1.52,42,1.721,50,1.65,53,3.158,54,2.115,55,0.096,60,2.43,61,2.338,62,2.367,63,1.683,65,0.104,66,1.322,67,1.619,78,1.923,82,1.259,83,1.962,85,2.363,86,3.181,88,3.473,91,3.158,103,2.008,143,3.388,144,1.798,147,0.007,148,0.005,149,0.004,165,0.885,211,0.637,241,0.913,242,1.499,247,0.562,261,0.744,268,0.758,275,0.744,298,0.589,302,0.995,410,1.348,411,1.932,412,1.52,413,1.489,414,1.489,416,1.489,417,1.785,420,1.558,423,2.057,424,2.463,425,1.177,426,1.971,427,1.971,428,1.489,429,2.351,430,1.489,431,1.489,432,1.375,433,1.489,434,1.82,435,1.894,436,2.446,437,1.375,438,1.489,439,1.348,440,1.431,441,1.785,442,1.971,443,1.348,444,1.489,445,1.375,446,1.489,447,1.375,448,1.431,449,1.375,450,1.82,451,1.489,452,1.82,453,1.489,454,1.82,455,1.489,456,1.375,457,1.348,458,1.971,459,1.489,460,1.375,461,1.348,462,1.489,463,1.375,464,1.489,465,1.375,466,1.489,467,1.375,468,1.489,469,1.403,470,1.489,471,1.375,472,1.489,473,1.375,474,1.489,475,1.375,476,1.489,477,2.171,478,1.489,479,1.348,480,1.489,481,1.322,482,1.489,483,1.348,484,1.489,485,1.375,486,1.489,487,1.375,488,1.489,489,1.489,490,1.375,491,1.489,492,1.297,493,1.489,494,1.348,495,1.489,496,1.348,497,1.489,498,1.375,499,1.489,500,1.348,501,1.489,502,1.375,503,1.431,504,1.489,505,1.489,513,3.962,515,1.619,516,1.619,517,4.981,521,3.033,568,3.033,593,4.47,594,5.187,652,5.5,661,3.221,672,4.534,766,6.562,886,3.873,901,6.001,907,4.014,908,4.014,912,6.001,966,4.579,969,5.187,1074,5.5,1078,6.165,1089,5.5,1170,6.001,1234,4.711,1250,3.873,1254,3.46,1262,4.534,1265,6.001,1266,6.001,1268,6.001,1269,5.126,1314,5.759,1315,3.873,1317,3.873,1451,4.828,1574,4.828,1654,5.759,1689,6.001,1728,4.534,1790,6.562,1791,7.159,1816,4.534,1817,7.579,1818,6.761,1819,8.066,1820,6.761,1821,8.066,1822,8.066,1823,8.066,1824,8.066,1825,8.066,1826,7.579,1827,7.159,1828,6.726,1829,6.761,1830,5.108,1831,5.108,1832,5.108,1833,5.108,1834,5.108,1835,6.761,1836,5.108,1837,5.108,1838,5.108,1839,5.108,1840,5.108,1841,5.108,1842,5.108,1843,5.108,1844,5.108,1845,5.108,1846,5.108,1847,5.108,1848,5.108,1849,4.534,1850,4.534,1851,4.534,1852,4.534,1853,5.108,1854,8.066,1855,8.066,1856,5.108,1857,5.108,1858,5.108,1859,5.108,1860,5.108,1861,5.108,1862,5.108,1863,5.108,1864,5.108,1865,5.108,1866,7.159,1867,6.001,1868,6.761,1869,5.108,1870,4.534,1871,6.761,1872,6.761,1873,6.761,1874,6.761,1875,6.761,1876,6.761,1877,6.761,1878,5.108,1879,5.108,1880,5.108,1881,5.108,1882,4.534]],["title/interfaces/MatchEventPayload.html",[0,0.542,1450,3.484]],["body/interfaces/MatchEventPayload.html",[0,0.787,2,3.149,3,0.125,4,0.125,5,0.114,10,0.345,11,0.614,17,0.531,18,0.008,19,1.752,21,1.003,22,0.186,31,0.125,55,0.15,65,0.136,82,1.242,83,2.415,85,2.134,112,1.906,115,2.811,132,1.125,133,3.312,137,2.286,143,2.981,144,2.347,147,0.005,148,0.006,149,0.005,150,0.351,156,1.35,241,0.667,302,0.987,317,1.242,318,1.218,388,1.879,391,1.879,394,1.937,400,1.706,585,4.9,597,4.123,616,5.057,648,5.418,649,5.534,650,5.534,758,4.267,851,3.96,874,5.959,934,4.123,944,3.444,1370,7.394,1371,5.057,1372,5.057,1373,5.057,1430,5.426,1431,5.919,1432,5.919,1433,5.919,1435,5.418,1436,5.426,1437,5.919,1438,5.919,1440,5.919,1448,5.919,1449,5.919,1450,6.498,1451,6.346,1452,7.23,1453,7.23,1454,7.888,1455,7.101,1456,5.426,1457,5.919,1458,5.919,1459,8.067,1460,8.067,1461,5.919,1462,5.919,1463,5.919,1464,5.919,1465,5.919,1466,5.919,1467,5.919,1468,5.919,1469,5.919,1470,5.919,1471,5.057,1472,5.919,1473,5.919,1474,5.919,1475,5.919,1476,5.919,1477,7.101,1478,5.919]],["title/injectables/MatchGQL.html",[150,0.202,391,1.079]],["body/injectables/MatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.79,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.465,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,1.007,392,1.109,393,1.109,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,1883,2.728]],["title/injectables/MatchPlanGQL.html",[150,0.202,394,1.039]],["body/injectables/MatchPlanGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.916,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.318,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.969,395,1.109,396,1.553,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,1884,2.728]],["title/components/MatchSchedulingComponent.html",[27,0.437,481,1.19]],["body/components/MatchSchedulingComponent.html",[0,0.777,3,0.092,4,0.092,5,0.084,7,0.503,10,0.428,11,0.505,17,0.545,18,0.008,19,1.72,21,0.854,22,0.183,27,0.707,28,1.85,31,0.092,38,3.944,39,2.535,43,3.235,44,1.983,45,1.439,50,1.586,51,2.195,52,2.195,55,0.092,56,1.378,58,0.988,60,2.426,61,2.333,62,2.229,63,1.639,65,0.1,66,1.271,67,1.577,78,2.988,79,3.765,82,1.226,83,1.271,85,2.122,103,1.977,111,3.297,112,1.403,114,1.655,115,2.083,136,1.62,137,1.403,140,3.035,143,2.195,144,2.794,146,3.837,147,0.004,148,0.005,149,0.004,155,1.305,156,1.397,165,0.874,211,0.687,235,1.496,241,0.914,243,1.131,247,0.541,250,1.577,252,1.661,261,0.725,268,0.871,271,1.908,272,1.131,275,0.725,298,0.566,302,0.979,410,1.296,411,1.882,412,1.461,413,1.431,414,1.431,416,1.431,417,1.738,420,1.517,423,2.039,424,2.387,425,1.131,426,1.92,427,1.92,428,1.431,429,2.314,430,1.431,431,1.431,432,1.322,433,1.431,434,1.322,435,1.375,436,2.414,437,1.322,438,1.431,439,1.296,440,1.375,441,1.296,442,1.92,443,1.296,444,1.431,445,1.322,446,1.431,447,1.322,448,1.375,449,1.322,450,1.322,451,1.431,452,1.322,453,1.431,454,1.322,455,1.431,456,1.322,457,1.296,458,1.92,459,1.431,460,1.322,461,1.296,462,1.431,463,1.322,464,1.431,465,1.322,466,1.431,467,1.322,468,1.431,469,1.348,470,1.431,471,1.322,472,1.431,473,1.322,474,1.431,475,1.322,476,1.431,477,1.322,478,1.431,479,1.296,480,1.431,481,2.055,482,1.431,483,1.296,484,1.431,485,1.322,486,1.431,487,1.322,488,1.431,489,1.431,490,1.322,491,1.431,492,1.246,493,1.431,494,1.296,495,1.431,496,1.296,497,1.431,498,1.322,499,1.431,500,1.296,501,1.431,502,1.322,503,2.081,504,1.431,505,1.431,515,1.983,516,1.983,551,6.749,661,2.734,739,2.535,758,2.619,812,4.702,826,3.325,907,4.411,908,4.411,922,5.119,934,3.035,966,4.46,969,4.071,1005,5.125,1060,5.357,1101,4.593,1228,5.633,1229,5.633,1230,5.845,1234,4.496,1236,4.993,1238,5.633,1247,4.993,1248,3.723,1249,3.506,1251,3.723,1252,3.723,1253,3.723,1254,4.46,1255,3.723,1256,3.723,1257,3.723,1258,6.02,1259,3.723,1260,3.723,1261,5.305,1312,5.845,1314,5.912,1315,3.723,1317,3.723,1506,5.912,1507,7.166,1508,3.723,1509,5.357,1510,5.357,1511,5.357,1512,4.702,1513,5.633,1514,3.994,1515,3.723,1516,3.325,1517,5.357,1518,5.357,1519,5.357,1520,6.044,1521,6.044,1522,5.357,1523,7.083,1524,6.044,1525,6.044,1526,3.994,1527,6.02,1528,5.357,1529,3.994,1530,3.994,1531,6.934,1532,3.994,1533,3.994,1534,5.357,1535,3.994,1536,3.994,1537,5.357,1538,6.934,1539,3.994,1540,3.723,1541,3.994,1542,3.994,1543,3.994,1544,3.994,1545,5.357,1546,5.357,1547,5.357,1548,3.994,1549,3.994,1550,3.994,1551,3.994,1552,6.044,1553,3.994,1554,3.994,1555,3.994,1556,3.994,1557,3.994,1558,3.994,1559,3.994,1560,3.994,1561,3.994,1562,3.994,1563,6.044,1564,3.994,1565,3.994,1566,5.357,1567,3.994,1568,3.994,1569,3.994,1570,3.994,1571,6.459,1572,3.994,1573,3.994,1574,3.506,1575,3.994,1576,3.994,1577,3.994,1578,3.994,1579,5.357,1580,3.994,1581,3.994,1582,3.994,1583,5.357,1584,5.357,1670,3.994,1807,5.357,1809,5.357,1870,4.358,1882,4.358,1885,6.585,1886,6.585,1887,6.585,1888,4.91,1889,4.91,1890,4.91,1891,4.91,1892,4.91,1893,4.91,1894,4.91,1895,4.91,1896,4.91,1897,4.91,1898,4.91,1899,4.91,1900,4.91,1901,4.91,1902,4.91,1903,4.91,1904,4.91,1905,4.91,1906,6.585,1907,6.585,1908,6.585,1909,6.585,1910,6.585,1911,6.585,1912,7.047,1913,5.845,1914,5.845,1915,6.585]],["title/injectables/MatchService.html",[150,0.202,1234,2.373]],["body/injectables/MatchService.html",[3,0.112,4,0.112,5,0.102,10,0.309,11,0.574,17,0.537,18,0.008,19,1.779,21,1.022,22,0.167,31,0.112,44,2.417,55,0.112,56,1.709,65,0.122,78,3.433,82,1.394,83,2.115,85,2.238,91,3.384,112,1.71,114,2.016,115,1.893,132,1.517,133,2.477,136,1.974,137,2.334,143,3.827,144,3.102,146,3.09,147,0.007,148,0.006,149,0.005,150,0.329,152,1.252,155,1.314,156,1.263,165,0.856,182,2.034,183,1.461,184,1.461,185,1.919,186,1.9,187,1.9,188,2.131,189,1.9,190,1.461,211,0.71,241,0.962,242,1.811,252,1.709,265,2.112,268,0.899,302,1.087,306,2.227,317,1.114,318,1.093,319,2.195,322,2.227,325,2.09,420,1.725,423,2.031,515,2.153,516,2.153,620,4.357,793,5.523,794,5.558,795,5.05,799,5.05,851,3.552,864,5.676,1234,3.865,1254,5.07,1301,7.98,1451,6.419,1452,6.964,1453,6.964,1916,5.311,1917,8.169,1918,8.169,1919,7.486,1920,7.486,1921,5.983,1922,8.169,1923,7.486,1924,7.486,1925,5.983,1926,7.486,1927,5.983,1928,8.169,1929,7.486,1930,5.983,1931,7.486,1932,5.983,1933,7.486,1934,5.983,1935,7.822,1936,5.983,1937,5.983,1938,5.983,1939,5.983,1940,7.251,1941,7.251,1942,7.98,1943,8.991,1944,7.251,1945,5.983,1946,5.983,1947,5.983,1948,5.983]],["title/components/MatchplanComponent.html",[27,0.437,479,1.213]],["body/components/MatchplanComponent.html",[3,0.101,4,0.101,5,0.092,7,0.553,10,0.279,11,0.538,17,0.55,18,0.008,21,0.754,22,0.185,27,0.741,28,1.937,31,0.101,38,4.01,39,2.785,41,1.604,43,3.389,44,2.179,51,3.132,52,2.411,55,0.101,60,2.436,61,2.344,62,2.299,63,1.744,65,0.11,66,1.396,67,1.678,82,1.305,83,1.814,85,2.335,91,2.03,103,2.051,111,4.124,132,1.182,143,3.479,144,2.899,146,4.664,147,0.004,148,0.005,149,0.004,155,1.23,156,1.182,165,0.87,211,0.674,235,1.086,241,0.779,242,1.893,243,1.793,247,0.594,261,0.771,268,0.701,271,1.793,272,1.614,275,0.771,279,1.744,280,2.126,298,0.622,302,0.96,391,1.267,394,2.081,400,1.9,410,1.424,411,2.002,412,1.604,413,1.572,414,1.572,416,1.572,417,1.849,420,1.614,423,1.898,424,1.962,425,1.243,426,2.042,427,2.042,428,1.572,429,2.402,430,1.572,431,1.572,432,1.452,433,1.572,434,1.452,435,1.511,436,2.489,437,1.452,438,1.572,439,1.424,440,1.511,441,1.424,442,2.042,443,1.424,444,1.572,445,1.452,446,1.572,447,1.452,448,1.511,449,1.452,450,1.452,451,1.572,452,1.452,453,1.572,454,1.452,455,1.572,456,1.452,457,1.424,458,2.042,459,1.572,460,1.452,461,1.424,462,1.572,463,1.452,464,1.572,465,1.452,466,1.572,467,1.452,468,1.572,469,1.481,470,1.572,471,1.452,472,1.572,473,1.452,474,1.572,475,1.452,476,1.572,477,1.452,478,1.572,479,2.175,480,1.572,481,1.396,482,1.572,483,1.424,484,1.572,485,1.452,486,1.572,487,1.452,488,1.572,489,1.572,490,1.452,491,1.572,492,1.369,493,1.572,494,1.424,495,1.572,496,1.424,497,1.572,498,1.452,499,1.572,500,1.424,501,1.572,502,1.452,503,1.511,504,1.572,505,1.572,515,1.864,516,1.864,585,5.219,610,3.303,619,3.334,620,2.877,646,4.388,648,3.653,649,3.483,650,3.483,661,3.013,680,4.787,812,5.003,851,3.202,958,4.16,1108,6.331,1126,7.119,1168,6.702,1234,4.601,1332,3.334,1516,3.653,1649,3.851,1650,4.787,1796,6.907,1807,6.702,1809,6.702,1912,7.767,1913,7.312,1914,7.312,1949,4.388,1950,7.782,1951,7.007,1952,7.782,1953,7.782,1954,7.782,1955,7.007,1956,7.007,1957,8.238,1958,7.782,1959,4.388,1960,5.394,1961,7.007,1962,5.394,1963,7.007,1964,5.394,1965,5.394,1966,5.394,1967,7.007,1968,5.394,1969,5.394,1970,5.394,1971,5.394,1972,5.394,1973,7.007,1974,5.394,1975,7.007,1976,5.394,1977,5.394,1978,5.394,1979,4.388,1980,4.388,1981,4.787,1982,4.388,1983,4.787,1984,4.388,1985,4.787,1986,5.394,1987,5.394,1988,4.787,1989,5.394,1990,4.787,1991,4.787,1992,8.538,1993,5.394,1994,5.394,1995,5.394,1996,5.394,1997,5.394,1998,5.394,1999,5.394,2000,5.394,2001,4.388,2002,4.388,2003,5.394,2004,5.394,2005,7.007,2006,7.007,2007,8.238,2008,7.007,2009,7.007,2010,5.394,2011,5.394]],["title/modules/MatchplanModule.html",[523,1.424,2012,3.484]],["body/modules/MatchplanModule.html",[3,0.136,4,0.136,5,0.124,18,0.008,22,0.19,31,0.136,55,0.136,61,1.737,65,0.148,147,0.006,148,0.007,149,0.006,243,1.671,425,1.671,479,2.482,523,2.247,525,2.73,526,3.631,527,4.444,528,3.745,529,3.745,530,3.631,536,5.015,537,4.483,538,3.868,539,3.868,542,3.479,543,3.395,545,4.306,546,4.683,704,6.368,1344,6.437,2012,7.347,2013,6.437,2014,6.437,2015,6.437,2016,6.714,2017,7.252,2018,6.437]],["title/modules/MatchplanRoutingModule.html",[523,1.424,2016,3.281]],["body/modules/MatchplanRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,147,0.006,148,0.007,149,0.006,302,0.92,479,2.255,520,3.625,525,2.808,542,3.088,543,3.451,572,4.429,573,4.788,574,4.429,576,4.265,577,4.612,2016,6.1,2018,6.621,2019,7.46]],["title/modules/MaterialModule.html",[523,1.424,722,3.112]],["body/modules/MaterialModule.html",[3,0.134,4,0.134,5,0.122,18,0.008,22,0.195,26,2.213,31,0.134,55,0.134,65,0.146,147,0.006,148,0.007,149,0.006,525,2.688,530,3.575,542,2.956,543,3.365,722,5.642,2020,7.141,2021,8.82,2022,7.141,2023,8.82,2024,7.141,2025,8.82,2026,7.141,2027,8.82,2028,7.141,2029,8.82,2030,7.141,2031,8.82,2032,7.141,2033,7.141,2034,6.338,2035,7.141,2036,6.338,2037,7.141,2038,8.82,2039,8.82,2040,8.82,2041,9.255,2042,8.82,2043,8.82,2044,8.82,2045,8.82,2046,8.82,2047,8.82,2048,8.82,2049,8.82,2050,7.141,2051,8.82,2052,8.82,2053,8.82]],["title/components/NewpasswordComponent.html",[27,0.437,483,1.213]],["body/components/NewpasswordComponent.html",[3,0.114,4,0.114,5,0.103,7,0.623,10,0.314,11,0.58,17,0.514,18,0.008,21,0.813,22,0.184,27,0.783,28,2.048,31,0.114,40,3.367,41,1.807,42,2.047,53,3.24,54,2.515,55,0.114,60,2.449,61,2.356,62,2.383,63,1.881,65,0.124,66,1.573,67,1.81,82,1.407,83,2.228,85,2.048,88,3.405,103,2.143,112,2.459,114,2.047,115,2.391,136,2.004,137,2.159,147,0.005,148,0.006,149,0.005,165,0.837,211,0.649,229,1.427,241,0.756,247,0.669,261,0.948,268,0.756,275,0.832,298,0.701,302,0.75,410,1.604,411,2.159,412,1.807,413,1.771,414,1.771,416,1.771,417,1.995,420,1.741,423,1.741,424,1.702,425,1.4,426,2.203,427,2.203,428,1.771,429,2.509,430,1.771,431,1.771,432,1.636,433,1.771,434,1.636,435,1.702,436,2.581,437,1.636,438,1.771,439,1.604,440,1.702,441,1.604,442,2.203,443,1.604,444,1.771,445,1.636,446,1.771,447,1.636,448,1.702,449,1.636,450,1.636,451,1.771,452,1.636,453,1.771,454,1.636,455,1.771,456,1.636,457,1.604,458,2.203,459,1.771,460,1.636,461,1.604,462,1.771,463,1.636,464,1.771,465,1.636,466,1.771,467,1.636,468,1.771,469,1.668,470,1.771,471,1.636,472,1.771,473,1.636,474,1.771,475,1.636,476,1.771,477,1.636,478,1.771,479,1.604,480,1.771,481,1.573,482,1.771,483,2.272,484,1.771,485,1.636,486,1.771,487,1.636,488,1.771,489,1.771,490,1.636,491,1.771,492,1.542,493,1.771,494,1.604,495,1.771,496,1.604,497,1.771,498,1.636,499,1.771,500,1.604,501,1.771,502,1.636,503,1.702,504,1.771,505,1.771,512,4.338,513,4.18,515,1.455,516,1.455,517,5.11,520,2.952,521,3.607,628,4.942,629,5.392,661,2.602,739,3.137,772,5.118,925,3.923,927,4.115,933,6.148,938,6.708,1004,6.939,1018,4.942,1246,6.692,1387,7.301,1608,7.301,1620,5.392,1630,6.708,2054,5.392,2055,8.226,2056,7.557,2057,8.607,2058,9.152,2059,7.557,2060,6.075,2061,6.075,2062,6.075,2063,6.075,2064,6.075,2065,6.075,2066,8.226,2067,6.075,2068,6.075,2069,6.075,2070,6.075,2071,7.557,2072,7.557,2073,7.557,2074,7.557]],["title/modules/NewpasswordModule.html",[523,1.424,2075,3.484]],["body/modules/NewpasswordModule.html",[3,0.136,4,0.136,5,0.124,18,0.008,22,0.19,31,0.136,55,0.136,65,0.149,147,0.006,148,0.007,149,0.006,425,1.678,483,2.484,523,2.257,525,2.742,526,3.647,527,4.452,528,3.762,529,3.762,530,3.647,536,5.019,537,4.494,538,3.885,539,3.885,542,3.489,543,3.404,545,4.325,546,4.704,741,4.503,772,4.933,2075,7.306,2076,6.466,2077,6.466,2078,6.466,2079,6.72,2080,7.285,2081,5.707,2082,6.466]],["title/modules/NewpasswordRoutingModule.html",[523,1.424,2079,3.281]],["body/modules/NewpasswordRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,147,0.006,148,0.007,149,0.006,302,0.92,483,2.255,520,3.625,525,2.808,542,3.088,543,3.451,572,4.429,573,4.788,574,4.429,576,4.265,577,4.612,2079,6.1,2082,6.621,2083,7.46]],["title/injectables/NotificationService.html",[53,1.73,150,0.202]],["body/injectables/NotificationService.html",[3,0.129,4,0.129,5,0.117,10,0.355,11,0.625,17,0.568,18,0.008,19,1.705,21,1.049,22,0.177,26,2.131,31,0.129,53,3.067,55,0.129,65,0.141,82,1.517,83,2.324,91,2.588,147,0.005,148,0.006,149,0.005,150,0.358,152,1.439,155,1.207,156,1.161,165,0.85,211,0.709,317,1.281,318,1.256,420,1.877,423,2.001,424,2.432,492,1.746,515,2.15,516,2.15,586,5.818,592,7.303,745,6.104,826,5.881,944,4.987,1587,7.455,1790,5.594,2084,6.104,2085,8.683,2086,8.148,2087,8.148,2088,8.148,2089,6.877,2090,8.148,2091,8.148,2092,6.877,2093,8.148,2094,8.978,2095,8.978,2096,9.164,2097,6.877,2098,8.148,2099,6.877,2100,8.148,2101,8.148,2102,6.877,2103,6.877,2104,8.148]],["title/injectables/PasswordChangeGQL.html",[150,0.202,334,1.101]],["body/injectables/PasswordChangeGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.667,125,0.667,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.46,159,1.554,160,2.11,161,2.113,162,1.854,163,1.796,164,1.554,165,0.253,167,2.358,168,0.641,169,1.724,170,1.11,171,1.068,172,1.089,173,1.089,174,1.089,175,1.027,176,1.027,177,0.693,178,0.693,179,0.68,180,2.371,181,1.11,182,1.965,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.928,191,1.089,192,0.707,193,2.054,194,1.494,195,0.707,196,0.707,197,1.319,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.965,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.089,218,1.11,219,1.11,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.11,226,1.11,227,1.089,228,1.524,229,1.41,230,1.965,231,1.904,232,1.524,233,1.724,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.629,244,1.9,245,0.693,246,0.667,247,0.901,248,1.658,249,1.007,250,1.027,251,1.319,252,0.897,253,0.693,254,1.068,255,1.691,256,0.693,257,1.068,258,1.724,259,0.693,260,0.693,261,0.826,262,1.345,263,1.047,264,1.624,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.595,272,1.503,273,1.089,274,1.089,275,0.901,276,1.007,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.293,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.503,297,1.22,298,0.495,299,1.027,300,0.667,301,0.707,302,1.024,303,1.319,304,1.796,305,1.319,306,1.293,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,1.027,335,1.11,336,1.11,337,0.667,338,0.667,339,0.707,340,0.707,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,0.667,358,0.707,359,0.707,360,0.68,361,0.707,362,0.707,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,0.667,371,0.707,372,0.707,373,0.667,374,0.707,375,0.707,376,0.667,377,0.707,378,0.707,379,0.667,380,0.667,381,0.667,382,0.707,383,0.707,384,0.68,385,2.148,386,0.707,387,0.707,388,0.641,389,0.707,390,0.707,391,0.641,392,0.707,393,0.707,394,0.617,395,0.707,396,1.371,397,0.641,398,0.707,399,0.654,400,0.582,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.629,407,0.654,408,0.68,2105,2.73]],["title/injectables/PasswordResetGQL.html",[150,0.202,331,1.101]],["body/injectables/PasswordResetGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.064,194,1.802,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,1.026,332,1.109,333,1.109,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,2106,2.728]],["title/injectables/PitchService.html",[150,0.202,1005,2.627]],["body/injectables/PitchService.html",[3,0.125,4,0.125,5,0.114,10,0.346,11,0.615,17,0.531,18,0.008,21,0.923,22,0.186,31,0.125,43,3.738,44,2.704,50,2.162,51,3.837,52,2.992,55,0.125,65,0.137,78,3.018,82,1.493,83,2.222,91,3.018,111,4.455,112,2.69,114,2.702,115,2.536,127,4.014,128,1.523,132,1.13,133,3.319,136,2.645,137,2.291,144,2.822,147,0.005,148,0.006,149,0.005,150,0.352,152,1.4,155,1.175,156,1.13,165,0.826,190,1.634,201,1.996,207,1.634,208,1.699,209,1.699,211,0.678,251,2.137,252,1.796,268,0.802,317,1.247,318,1.222,338,2.28,342,2.28,399,2.212,420,1.847,423,1.847,515,2.056,516,2.056,793,5.484,794,5.501,795,4.957,799,4.957,1002,6.522,1005,4.584,1101,4.138,1122,6.079,1123,4.322,1332,4.957,2107,5.941,2108,6.693,2109,6.693,2110,8.018,2111,6.693,2112,8.018,2113,6.693,2114,8.018,2115,8.018,2116,8.018,2117,8.018,2118,8.018,2119,6.693,2120,6.693,2121,8.018,2122,6.693,2123,6.693,2124,6.693]],["title/components/PitchesComponent.html",[27,0.437,485,1.237]],["body/components/PitchesComponent.html",[3,0.12,4,0.12,5,0.109,7,0.657,10,0.331,11,0.6,17,0.467,18,0.008,22,0.16,27,0.802,28,2.098,31,0.12,55,0.12,60,2.454,61,2.361,62,2.42,63,1.945,65,0.131,66,1.66,67,1.871,82,1.455,85,2.098,103,2.183,112,2.408,147,0.005,148,0.006,149,0.005,165,0.782,211,0.665,241,0.782,247,0.706,250,1.871,261,0.86,268,0.782,275,0.86,298,0.74,410,1.693,411,2.232,412,1.908,413,1.87,414,1.87,416,1.87,417,2.062,420,1.8,423,1.478,425,1.478,426,2.278,427,2.278,428,1.87,429,2.557,430,1.87,431,1.87,432,1.726,433,1.87,434,1.726,435,1.796,436,2.621,437,1.726,438,1.87,439,1.693,440,1.796,441,1.693,442,2.278,443,1.693,444,1.87,445,1.726,446,1.87,447,1.726,448,1.796,449,1.726,450,1.726,451,1.87,452,1.726,453,1.87,454,1.726,455,1.87,456,1.726,457,1.693,458,2.278,459,1.87,460,1.726,461,1.693,462,1.87,463,1.726,464,1.87,465,1.726,466,1.87,467,1.726,468,1.87,469,1.761,470,1.87,471,1.726,472,1.87,473,1.726,474,1.87,475,1.726,476,1.87,477,1.726,478,1.87,479,1.693,480,1.87,481,1.66,482,1.87,483,1.693,484,1.87,485,2.361,486,1.87,487,1.726,488,1.87,489,1.87,490,1.726,491,1.87,492,1.628,493,1.87,494,1.693,495,1.87,496,1.693,497,1.87,498,1.726,499,1.87,500,1.693,501,1.87,502,1.726,503,1.796,504,1.87,505,1.87,515,1.536,516,1.536,661,3.149,976,6.356,1005,5.38,1101,5.422,1249,4.579,1269,5.924,1670,5.217,2125,5.692,2126,8.426,2127,7.813,2128,6.413,2129,6.413,2130,6.413,2131,7.813,2132,7.813]],["title/injectables/PitchesGQL.html",[150,0.202,399,1.101]],["body/injectables/PitchesGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.11,171,1.067,172,1.088,173,1.088,174,1.088,175,1.027,176,1.027,177,0.693,178,0.693,179,0.679,180,2.371,181,1.11,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.088,218,1.11,219,1.11,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.11,226,1.11,227,1.088,228,1.523,229,1.41,230,1.965,231,1.904,232,1.523,233,1.723,234,1.088,235,1.553,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.629,244,1.9,245,0.693,246,0.666,247,0.901,248,1.658,249,1.007,250,1.268,251,1.494,252,0.897,253,0.693,254,1.067,255,1.69,256,0.693,257,1.067,258,1.723,259,0.693,260,0.693,261,0.826,262,1.344,263,1.047,264,1.624,265,2.13,266,1.088,267,1.088,268,0.79,269,1.088,270,1.088,271,1.595,272,1.503,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.41,294,1.067,295,0.679,296,1.503,297,1.22,298,0.494,299,1.027,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.494,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.363,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.654,332,0.706,333,0.706,334,0.654,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.654,367,0.654,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.617,395,0.706,396,1.371,397,0.641,398,0.706,399,1.027,400,0.582,401,0.706,402,0.654,403,0.666,404,0.706,405,0.706,406,0.629,407,0.654,408,0.679,2133,2.729]],["title/injectables/RankingGQL.html",[150,0.202,400,0.98]],["body/injectables/RankingGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.913,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.318,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.553,397,0.641,398,0.706,399,0.653,400,0.914,401,1.109,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,2134,2.728]],["title/injectables/RedisEventGQL.html",[150,0.202,1435,3.112]],["body/injectables/RedisEventGQL.html",[0,0.816,3,0.13,4,0.13,5,0.118,10,0.357,11,0.627,17,0.569,18,0.008,21,0.967,22,0.178,31,0.13,37,4.511,55,0.178,65,0.141,107,1.42,131,1.42,132,1.469,147,0.007,148,0.006,149,0.005,150,0.359,152,1.447,154,2.167,155,1.436,156,1.167,157,2.125,165,0.642,167,2.196,168,1.625,179,1.722,180,1.722,185,1.921,211,0.646,295,1.722,296,2.115,297,2.005,298,0.943,299,1.657,300,1.689,302,0.853,316,1.722,317,1.288,318,1.263,320,1.689,408,1.722,1417,5.245,1420,6.82,1435,5.537,1471,6.599,1592,5.28,1593,4.939,1594,6.199,1595,7.703,1596,7.726,1597,6.139,1598,6.199,1599,5.627,2135,6.917]],["title/injectables/RemoveRankingPenaltyGQL.html",[150,0.202,337,1.122]],["body/injectables/RemoveRankingPenaltyGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.409,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,107,0.559,117,1.657,119,1.83,121,1.464,123,0.665,125,0.665,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.57,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.552,160,2.153,161,2.112,162,1.853,163,1.795,164,1.552,165,0.253,167,2.358,168,0.64,169,1.723,170,1.109,171,1.066,172,1.087,173,1.087,174,1.087,175,1.026,176,1.026,177,0.692,178,0.692,179,0.678,180,2.371,181,1.109,182,1.964,183,1.689,184,1.689,185,2.245,186,1.087,187,1.087,188,1.723,189,1.087,190,1.927,191,1.087,192,0.705,193,2.054,194,1.493,195,0.705,196,0.705,197,1.066,198,0.705,199,1.791,200,1.837,201,1.066,202,1.552,203,2.112,204,2.112,205,1.964,206,1.552,207,1.689,208,1.522,209,1.522,210,1.087,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.087,218,1.109,219,1.109,220,1.522,221,1.066,222,1.522,223,1.066,224,1.087,225,1.109,226,1.109,227,1.087,228,1.522,229,1.409,230,1.964,231,1.903,232,1.522,233,1.723,234,1.087,235,1.552,236,1.087,237,0.705,238,1.522,239,1.756,240,1.066,241,0.771,242,0.949,243,0.628,244,1.899,245,0.692,246,0.665,247,0.9,248,1.657,249,1.006,250,1.026,251,1.317,252,0.896,253,0.692,254,1.066,255,1.689,256,0.692,257,1.066,258,1.723,259,0.692,260,0.692,261,0.825,262,1.343,263,1.046,264,1.623,265,2.129,266,1.087,267,1.087,268,0.771,269,1.087,270,1.087,271,1.594,272,1.502,273,1.087,274,1.087,275,0.9,276,1.006,277,1.522,278,1.087,279,0.678,280,1.066,281,1.066,282,1.292,283,1.087,284,1.087,285,1.317,286,0.705,287,1.087,288,1.087,289,1.087,290,1.087,291,1.087,292,1.087,293,1.409,294,1.066,295,0.678,296,1.502,297,1.219,298,0.494,299,1.026,300,0.665,301,0.705,302,1.023,303,1.317,304,1.795,305,1.317,306,1.292,307,1.317,308,1.066,309,1.066,310,1.066,311,1.066,312,1.317,313,1.317,314,1.317,315,1.066,316,0.678,317,1.748,318,1.714,319,0.665,320,2.291,321,2.362,322,0.665,323,0.705,324,0.705,325,0.665,326,0.705,327,0.705,328,0.665,329,0.705,330,0.705,331,0.653,332,0.705,333,0.705,334,0.653,335,0.705,336,0.705,337,1.046,338,0.665,339,0.705,340,0.705,341,0.665,342,0.665,343,1.087,344,0.665,345,0.705,346,0.705,347,0.678,348,0.705,349,0.705,350,0.678,351,0.705,352,0.705,353,0.678,354,0.705,355,0.678,356,0.705,357,0.665,358,0.705,359,0.705,360,0.678,361,0.705,362,0.705,363,0.665,364,0.705,365,0.705,366,0.653,367,0.653,368,0.705,369,0.705,370,0.665,371,0.705,372,0.705,373,0.665,374,0.705,375,0.705,376,0.665,377,0.705,378,0.705,379,0.665,380,0.665,381,0.665,382,0.705,383,0.705,384,0.678,385,2.147,386,0.705,387,0.705,388,0.64,389,0.705,390,0.705,391,0.64,392,0.705,393,0.705,394,0.616,395,0.705,396,1.37,397,0.64,398,0.705,399,0.653,400,0.581,401,0.705,402,0.653,403,0.665,404,0.705,405,0.705,406,0.628,407,0.653,408,0.678,2136,2.725]],["title/injectables/RemoveTeamFromSeasonGQL.html",[150,0.202,350,1.144]],["body/injectables/RemoveTeamFromSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.126,161,2.145,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,1.067,351,1.109,352,1.109,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,2137,2.728]],["title/components/RenameTeamComponent.html",[27,0.437,487,1.237]],["body/components/RenameTeamComponent.html",[3,0.114,4,0.114,5,0.104,7,0.627,10,0.316,11,0.582,17,0.515,18,0.008,21,0.887,22,0.185,23,4.073,24,2.886,26,1.894,27,0.785,28,2.053,29,2.732,31,0.114,32,4.887,33,3.947,40,3.372,41,1.818,42,2.06,45,1.82,50,1.974,53,3.247,54,2.53,55,0.114,58,1.736,60,2.449,61,2.356,62,2.387,63,1.888,65,0.125,66,1.582,67,1.817,82,1.413,83,2.135,85,2.25,86,3.402,88,3.415,90,3.582,103,2.147,112,2.357,114,2.06,115,1.934,136,2.016,137,2.167,147,0.005,148,0.006,149,0.005,165,0.823,211,0.681,221,1.888,241,0.759,247,0.673,261,0.835,268,0.759,275,0.835,298,0.705,304,1.464,367,1.464,410,1.613,411,2.167,412,1.818,413,1.782,414,1.782,416,1.782,417,2.002,420,1.748,423,1.748,424,1.712,425,1.408,426,2.211,427,2.211,428,1.782,429,2.514,430,1.782,431,1.782,432,1.645,433,1.782,434,1.645,435,1.712,436,2.585,437,1.645,438,1.782,439,1.613,440,1.712,441,1.613,442,2.211,443,1.613,444,1.782,445,1.645,446,1.782,447,1.645,448,1.712,449,1.645,450,1.645,451,1.782,452,1.645,453,1.782,454,1.645,455,1.782,456,1.645,457,1.613,458,2.211,459,1.782,460,1.645,461,1.613,462,1.782,463,1.645,464,1.782,465,1.645,466,1.782,467,1.645,468,1.782,469,1.678,470,1.782,471,1.645,472,1.782,473,1.645,474,1.782,475,1.645,476,1.782,477,1.645,478,1.782,479,1.613,480,1.782,481,1.582,482,1.782,483,1.613,484,1.782,485,1.645,486,1.782,487,2.322,488,2.699,489,1.782,490,1.645,491,1.782,492,1.552,493,1.782,494,1.613,495,1.782,496,1.613,497,1.782,498,1.645,499,1.782,500,1.613,501,1.782,502,1.645,503,1.712,504,1.782,505,1.782,515,1.817,516,1.817,557,6.853,610,2.594,661,2.97,904,3.947,952,5.425,958,4.504,960,6.733,1060,6.171,2138,8.022,2139,5.425,2140,8.249,2141,7.586,2142,6.112,2143,6.112,2144,7.586,2145,6.112,2146,6.733,2147,6.112,2148,6.112,2149,6.112,2150,6.112,2151,6.112]],["title/injectables/RenameTeamGQL.html",[150,0.202,367,1.101]],["body/injectables/RenameTeamGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.124,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.838,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,1.026,368,1.109,369,1.109,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,2152,2.728]],["title/injectables/RescheduleMatchDayGQL.html",[150,0.202,355,1.144]],["body/injectables/RescheduleMatchDayGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.409,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,107,0.56,117,1.657,119,1.964,121,1.464,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.57,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.854,163,1.795,164,1.553,165,0.253,167,2.358,168,0.64,169,1.802,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.493,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.553,216,1.687,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.771,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.9,248,1.657,249,1.006,250,1.026,251,1.318,252,0.896,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.825,262,1.343,263,1.046,264,1.623,265,2.129,266,1.088,267,1.088,268,0.771,269,1.088,270,1.088,271,1.594,272,1.502,273,1.088,274,1.088,275,0.9,276,1.006,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.292,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.219,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.795,305,1.318,306,1.292,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.291,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,1.067,356,1.109,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.64,389,0.706,390,0.706,391,0.64,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.64,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,2153,2.727]],["title/interfaces/RoundTeam.html",[0,0.542,20,3.112]],["body/interfaces/RoundTeam.html",[0,0.926,1,5.606,2,3.052,3,0.121,4,0.121,5,0.11,6,4.901,7,0.902,8,4.378,9,4.901,10,0.334,11,0.602,12,1.548,13,1.986,14,1.327,15,4.174,17,0.469,18,0.008,19,1.491,20,5.956,21,0.695,22,0.194,23,3.606,24,3.052,25,4.616,26,2.003,27,0.747,28,1.954,29,2.89,30,4.174,31,0.121,32,4.51,33,4.174,34,6.411,35,3.996,36,3.996,37,3.566,38,3.682,39,3.338,40,3.111,41,1.923,42,2.178,43,3.419,44,2.611,45,1.252,46,1.844,47,1.518,48,1.774,49,1.74,50,2.088,51,2.89,52,2.89,53,2.955,54,2.676,55,0.158,56,1.84,57,2.198,58,1.883,59,2.213,60,1.609,61,1.548,62,2.113,63,1.609,64,5.259,65,0.132,66,1.673,67,1.548,68,5.259,69,5.259,70,5.259,71,5.259,72,5.259,73,5.259,74,5.259,75,5.259,76,1.518,77,5.259,78,2.433,79,3.696,80,5.259,81,5.259,82,1.204,83,2.371,84,5.259,85,2.105,86,2.549,87,5.259,88,2.676,89,4.616,90,3.052,91,2.433,92,4.901,93,4.901,94,4.174,95,4.901,96,6.387,97,5.259,98,5.259,99,7.154,100,5.259,101,7.154,102,5.259,103,1.609,104,5.259,105,5.259,106,5.259,107,1.611,108,5.259,109,5.259,110,5.259,111,3.236,112,1.847,113,5.259,114,2.178,115,2.045,116,5.259,117,1.548,118,6.387,119,1.578,120,5.259,121,1.578,122,5.259,123,1.578,124,5.259,125,1.578,126,5.259,127,3.236,128,1.491,129,5.259,130,5.259,131,1.327,132,1.091,133,2.676,134,5.259,135,3.996,136,2.132,137,2.243,138,5.259,139,5.259,140,4.854,141,5.259,142,5.259,143,2.89,144,2.275,145,5.259,146,3.338,147,0.005,148,0.006,149,0.005]],["title/injectables/ScheduleMatchGQL.html",[150,0.202,322,1.122]],["body/injectables/ScheduleMatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.46,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,2.003,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.92,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,1.046,323,1.109,324,1.109,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,0.706,405,0.706,406,0.628,407,0.653,408,0.679,2154,2.728]],["title/injectables/SeasonPenaltiesGQL.html",[150,0.202,397,1.079]],["body/injectables/SeasonPenaltiesGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.407,14,1.619,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.717,46,0.639,47,1.005,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.558,117,1.656,119,1.829,121,1.463,123,0.664,125,0.664,128,1.779,131,1.926,132,1.615,147,0.002,148,0.003,149,0.002,150,0.413,151,0.652,152,0.569,153,0.652,154,2.343,155,0.478,156,0.459,157,2.329,158,2.459,159,1.551,160,2.109,161,2.111,162,1.853,163,1.794,164,1.551,165,0.252,167,2.358,168,0.639,169,1.721,170,1.107,171,1.065,172,1.086,173,1.086,174,1.086,175,1.024,176,1.024,177,0.691,178,0.691,179,0.677,180,2.371,181,1.107,182,1.963,183,1.688,184,1.688,185,2.244,186,1.086,187,1.086,188,1.721,189,1.086,190,1.926,191,1.086,192,0.704,193,2.053,194,1.491,195,0.704,196,0.704,197,1.065,198,0.704,199,1.551,200,1.521,201,1.065,202,1.551,203,2.111,204,2.111,205,1.963,206,1.551,207,1.688,208,1.521,209,1.521,210,1.086,211,0.704,212,1.107,213,1.107,214,1.368,215,1.368,216,1.368,217,1.086,218,1.107,219,1.107,220,1.521,221,1.065,222,1.521,223,1.065,224,1.086,225,1.107,226,1.107,227,1.086,228,1.521,229,1.407,230,1.963,231,1.902,232,1.521,233,1.721,234,1.086,235,1.551,236,1.086,237,0.704,238,1.521,239,1.755,240,1.065,241,0.771,242,0.948,243,0.627,244,1.899,245,0.691,246,0.664,247,0.913,248,1.732,249,1.005,250,1.024,251,1.316,252,0.895,253,0.691,254,1.065,255,1.688,256,0.691,257,1.065,258,1.721,259,0.691,260,0.691,261,0.825,262,1.342,263,1.044,264,1.621,265,2.129,266,1.086,267,1.086,268,0.771,269,1.086,270,1.086,271,1.593,272,1.501,273,1.086,274,1.086,275,0.9,276,1.005,277,1.521,278,1.086,279,0.677,280,1.065,281,1.065,282,1.29,283,1.086,284,1.086,285,1.316,286,0.704,287,1.086,288,1.086,289,1.086,290,1.086,291,1.086,292,1.086,293,1.53,294,1.065,295,0.677,296,1.501,297,1.218,298,0.493,299,1.024,300,0.664,301,0.704,302,1.023,303,1.316,304,1.845,305,1.316,306,1.29,307,1.316,308,1.065,309,1.065,310,1.065,311,1.065,312,1.316,313,1.316,314,1.491,315,1.065,316,0.677,317,1.748,318,1.714,319,0.664,320,2.291,321,2.362,322,0.664,323,0.704,324,0.704,325,0.664,326,0.704,327,0.704,328,0.664,329,0.704,330,0.704,331,0.652,332,0.704,333,0.704,334,0.652,335,0.704,336,0.704,337,0.664,338,0.664,339,0.704,340,0.704,341,0.664,342,0.664,343,1.086,344,0.664,345,0.704,346,0.704,347,0.677,348,0.704,349,0.704,350,0.677,351,0.704,352,0.704,353,0.677,354,0.704,355,0.677,356,0.704,357,0.664,358,0.704,359,0.704,360,0.677,361,0.704,362,0.704,363,0.664,364,0.704,365,0.704,366,0.652,367,0.652,368,0.704,369,0.704,370,0.664,371,0.704,372,0.704,373,0.664,374,0.704,375,0.704,376,0.664,377,0.704,378,0.704,379,0.664,380,0.664,381,0.664,382,0.704,383,0.704,384,0.677,385,2.146,386,0.704,387,0.704,388,0.639,389,0.704,390,0.704,391,0.639,392,0.704,393,0.704,394,0.615,395,0.704,396,1.551,397,1.005,398,1.107,399,0.652,400,0.58,401,0.704,402,0.652,403,0.664,404,0.704,405,0.704,406,0.627,407,0.652,408,0.677,2155,2.721]],["title/injectables/SeasonService.html",[150,0.202,585,2.627]],["body/injectables/SeasonService.html",[3,0.123,4,0.123,5,0.112,10,0.34,11,0.609,17,0.549,18,0.008,21,0.99,22,0.185,31,0.123,41,1.959,44,2.66,55,0.123,65,0.135,78,3.331,82,1.479,83,2.206,85,2.122,112,2.659,114,2.219,115,2.083,127,3.975,128,1.508,132,1.34,133,2.726,136,2.172,137,2.268,143,2.944,144,3,147,0.005,148,0.006,149,0.005,150,0.349,152,1.378,155,1.156,156,1.111,165,0.854,210,2.015,211,0.715,217,2.015,244,1.89,254,1.639,302,0.812,317,1.226,318,1.203,344,2.272,357,2.272,402,2.203,420,1.829,423,1.964,515,2.119,516,2.119,585,4.539,610,2.795,619,4.071,620,3.512,793,5.463,794,5.471,795,4.908,799,4.908,851,3.91,864,4.993,1123,4.252,1192,6.02,1827,7.047,2156,5.357,2157,8.524,2158,8.524,2159,7.939,2160,6.585,2161,7.939,2162,7.939,2163,6.585,2164,7.939,2165,7.939,2166,8.85,2167,6.585,2168,7.939,2169,7.939,2170,6.585,2171,7.047,2172,7.939,2173,6.585,2174,8.524,2175,7.939,2176,5.357,2177,5.845,2178,6.585,2179,6.585,2180,6.585,2181,7.939,2182,6.585,2183,6.585,2184,6.585]],["title/components/SeasonchooserComponent.html",[27,0.437,490,1.237]],["body/components/SeasonchooserComponent.html",[3,0.111,4,0.111,5,0.101,7,0.609,10,0.307,11,0.572,17,0.544,18,0.008,22,0.183,25,5.812,26,1.84,27,0.775,28,2.027,31,0.111,43,3.545,44,2.398,50,1.918,51,3.33,52,2.654,55,0.111,60,2.446,61,2.353,62,2.367,63,1.854,65,0.121,66,1.537,67,1.784,78,2.235,79,4.259,82,1.387,83,1.537,85,2.027,91,2.235,103,2.125,111,3.729,144,2.621,147,0.005,148,0.006,149,0.005,155,1.308,156,1.257,165,0.862,171,2.292,211,0.674,235,1.195,241,0.745,244,1.949,247,0.654,254,1.478,261,0.82,268,0.745,275,0.82,298,0.685,302,0.919,402,2.181,410,1.567,411,2.128,412,1.766,413,1.731,414,1.731,416,1.731,417,1.966,420,1.716,423,1.716,424,2.086,425,1.368,426,2.172,427,2.172,428,1.731,429,2.488,430,1.731,431,1.731,432,1.598,433,1.731,434,1.598,435,1.663,436,2.563,437,1.598,438,1.731,439,1.567,440,1.663,441,1.567,442,2.172,443,1.567,444,1.731,445,1.598,446,1.731,447,1.598,448,1.663,449,1.598,450,1.598,451,1.731,452,1.598,453,1.731,454,1.598,455,1.731,456,1.598,457,1.567,458,2.172,459,1.731,460,1.598,461,1.567,462,1.731,463,1.598,464,1.731,465,1.598,466,1.731,467,1.598,468,1.731,469,1.63,470,1.731,471,1.598,472,1.731,473,1.598,474,1.731,475,1.598,476,1.731,477,1.598,478,1.731,479,1.567,480,1.731,481,1.537,482,1.731,483,1.567,484,1.731,485,1.598,486,1.731,487,1.598,488,1.731,489,1.731,490,2.298,491,1.731,492,1.507,493,1.731,494,1.567,495,1.731,496,1.567,497,1.731,498,1.598,499,1.731,500,1.567,501,1.731,502,1.598,503,1.663,504,1.731,505,1.731,515,1.784,516,1.784,585,5.311,661,2.565,966,5.045,969,4.605,1074,6.06,1078,6.944,1089,6.06,1261,4.239,1332,3.67,1959,4.83,1979,4.83,2171,6.612,2185,5.269,2186,7.449,2187,8.14,2188,7.449,2189,8.14,2190,7.449,2191,8.14,2192,8.14,2193,7.449,2194,8.536,2195,7.449,2196,5.937,2197,5.937,2198,5.937,2199,5.937,2200,5.937,2201,5.937,2202,5.937,2203,5.937,2204,5.937,2205,5.937,2206,5.937,2207,5.937,2208,6.612,2209,5.937,2210,5.937,2211,5.937,2212,5.937,2213,8.14,2214,5.937,2215,7.449,2216,5.937,2217,5.937,2218,5.937,2219,7.449,2220,8.536]],["title/modules/SharedModule.html",[523,1.424,536,2.451]],["body/modules/SharedModule.html",[3,0.119,4,0.119,5,0.108,18,0.008,22,0.198,31,0.119,35,3.917,36,3.917,37,3.495,41,1.885,42,2.135,55,0.119,62,2.088,65,0.129,147,0.005,148,0.006,149,0.005,241,0.776,268,0.874,275,0.923,425,1.46,434,2.584,435,1.774,439,2.461,440,1.774,441,2.461,445,2.567,447,2.51,448,1.774,449,2.567,450,2.51,452,2.51,454,2.51,456,2.51,477,2.567,490,2.567,492,2.366,523,1.963,525,2.385,526,3.172,527,4.196,528,3.271,529,3.271,530,4.196,536,5.251,537,4.136,538,3.379,539,3.379,541,6.309,542,3.21,543,3.133,567,4.091,568,5.186,710,6.818,722,6.458,734,5.623,737,7.439,738,7.439,739,3.271,741,3.917,886,4.803,940,3.761,962,5.154,994,4.524,1069,5.154,1849,5.623,1850,5.623,1851,5.623,1852,5.623,2081,5.676,2221,5.623,2222,5.623,2223,6.335,2224,5.623,2225,6.335,2226,6.335,2227,6.335,2228,8.381,2229,8.381,2230,6.335,2231,6.335,2232,6.335]],["title/components/SnackbarComponent.html",[27,0.437,492,1.167]],["body/components/SnackbarComponent.html",[0,0.763,3,0.121,4,0.121,5,0.11,7,0.663,10,0.334,11,0.603,17,0.469,18,0.008,21,0.845,22,0.16,26,2.004,27,0.805,28,2.105,29,2.891,31,0.121,55,0.147,60,2.455,61,2.361,62,2.426,63,1.955,65,0.132,66,1.674,67,1.881,82,1.463,85,2.105,91,3.311,103,2.19,147,0.005,148,0.006,149,0.005,165,0.785,211,0.668,241,0.786,247,0.712,261,0.865,268,0.786,275,0.865,298,0.746,410,1.707,411,2.244,412,1.924,413,1.885,414,1.885,416,1.885,417,2.073,420,1.809,423,1.49,424,1.811,425,1.49,426,2.289,427,2.289,428,1.885,429,2.564,430,1.885,431,1.885,432,1.741,433,1.885,434,1.741,435,1.811,436,2.627,437,1.741,438,1.885,439,1.707,440,1.811,441,1.707,442,2.289,443,1.707,444,1.885,445,1.741,446,1.885,447,1.741,448,1.811,449,1.741,450,1.741,451,1.885,452,1.741,453,1.885,454,1.741,455,1.885,456,1.741,457,1.707,458,2.289,459,1.885,460,1.741,461,1.707,462,1.885,463,1.741,464,1.885,465,1.741,466,1.885,467,1.741,468,1.885,469,1.776,470,1.885,471,1.741,472,1.885,473,1.741,474,1.885,475,1.741,476,1.885,477,1.741,478,1.885,479,1.707,480,1.885,481,1.674,482,1.885,483,1.707,484,1.885,485,1.741,486,1.885,487,1.741,488,1.885,489,1.885,490,1.741,491,1.885,492,2.233,493,1.885,494,1.707,495,1.885,496,1.707,497,1.885,498,1.741,499,1.885,500,1.707,501,1.885,502,1.741,503,1.811,504,1.885,505,1.885,515,1.549,516,1.549,586,5.607,610,2.745,941,5.261,944,3.34,946,6.97,1585,6.833,1586,5.261,1587,5.261,1588,5.74,1589,6.97,1590,7.507,1591,6.97,2233,6.467,2234,6.467,2235,6.467,2236,7.853]],["title/injectables/StartSeasonGQL.html",[150,0.202,357,1.122]],["body/injectables/StartSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.667,125,0.667,128,1.777,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.46,159,1.554,160,2.11,161,2.113,162,1.854,163,1.796,164,1.554,165,0.253,167,2.358,168,0.641,169,1.724,170,1.11,171,1.068,172,1.089,173,1.089,174,1.089,175,1.027,176,1.027,177,0.693,178,0.693,179,0.68,180,2.371,181,1.11,182,1.965,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.928,191,1.089,192,0.707,193,2.054,194,1.494,195,0.707,196,0.707,197,1.068,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.965,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.089,218,1.11,219,1.11,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.11,226,1.11,227,1.089,228,1.524,229,1.41,230,1.965,231,1.904,232,1.524,233,1.724,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.629,244,1.9,245,0.693,246,0.667,247,0.901,248,1.658,249,1.007,250,1.027,251,1.319,252,0.897,253,0.693,254,1.068,255,1.691,256,0.693,257,1.068,258,1.724,259,0.693,260,0.693,261,0.826,262,1.345,263,1.047,264,1.624,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.595,272,1.503,273,1.089,274,1.089,275,0.901,276,1.007,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.293,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.503,297,1.22,298,0.495,299,1.027,300,0.667,301,0.707,302,1.024,303,1.319,304,1.796,305,1.319,306,1.293,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,0.654,335,0.707,336,0.707,337,0.667,338,0.667,339,0.707,340,0.707,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,1.047,358,1.11,359,1.11,360,0.68,361,0.707,362,0.707,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,0.667,371,0.707,372,0.707,373,0.667,374,0.707,375,0.707,376,0.667,377,0.707,378,0.707,379,0.667,380,0.667,381,0.667,382,0.707,383,0.707,384,0.68,385,2.148,386,0.707,387,0.707,388,0.641,389,0.707,390,0.707,391,0.641,392,0.707,393,0.707,394,0.617,395,0.707,396,1.371,397,0.641,398,0.707,399,0.654,400,0.582,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.629,407,0.654,408,0.68,2237,2.73]],["title/injectables/SubmitResultGQL.html",[150,0.202,319,1.122]],["body/injectables/SubmitResultGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.707,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.559,117,1.656,119,1.83,121,1.463,123,0.665,125,0.665,128,1.776,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.652,152,0.57,153,0.652,154,2.343,155,0.478,156,0.46,157,2.329,158,2.46,159,1.551,160,2.109,161,2.112,162,1.853,163,1.795,164,1.79,165,0.253,167,2.358,168,0.64,169,1.722,170,1.108,171,1.066,172,1.086,173,1.086,174,1.086,175,1.025,176,1.025,177,0.691,178,0.691,179,0.678,180,2.371,181,1.369,182,2.064,183,1.882,184,1.882,185,2.244,186,1.342,187,1.086,188,1.722,189,1.086,190,1.926,191,1.086,192,0.705,193,2.054,194,1.492,195,0.705,196,0.705,197,1.066,198,0.705,199,1.551,200,1.521,201,1.066,202,1.551,203,2.112,204,2.112,205,1.964,206,1.551,207,1.689,208,1.521,209,1.521,210,1.086,211,0.704,212,1.108,213,1.108,214,1.369,215,1.369,216,1.369,217,1.086,218,1.108,219,1.108,220,1.521,221,1.066,222,1.521,223,1.066,224,1.086,225,1.108,226,1.108,227,1.086,228,1.521,229,1.408,230,1.964,231,1.902,232,1.521,233,1.722,234,1.086,235,1.552,236,1.086,237,0.705,238,1.521,239,1.756,240,1.066,241,0.771,242,0.949,243,0.627,244,1.899,245,0.691,246,0.665,247,0.9,248,1.656,249,1.005,250,1.025,251,1.316,252,0.896,253,0.691,254,1.066,255,1.689,256,0.691,257,1.066,258,1.722,259,0.691,260,0.691,261,0.825,262,1.342,263,1.045,264,1.622,265,2.129,266,1.086,267,1.086,268,0.771,269,1.086,270,1.086,271,1.594,272,1.501,273,1.086,274,1.086,275,0.9,276,1.005,277,1.521,278,1.086,279,0.678,280,1.066,281,1.066,282,1.291,283,1.086,284,1.086,285,1.316,286,0.705,287,1.086,288,1.086,289,1.086,290,1.086,291,1.086,292,1.086,293,1.408,294,1.066,295,0.678,296,1.501,297,1.218,298,0.494,299,1.025,300,0.665,301,0.705,302,1.023,303,1.316,304,1.795,305,1.316,306,1.291,307,1.316,308,1.066,309,1.066,310,1.066,311,1.066,312,1.316,313,1.316,314,1.316,315,1.066,316,0.678,317,1.748,318,1.714,319,1.045,320,2.291,321,2.362,322,0.665,323,0.705,324,0.705,325,0.665,326,0.705,327,0.705,328,0.665,329,0.705,330,0.705,331,0.652,332,0.705,333,0.705,334,0.652,335,0.705,336,0.705,337,0.665,338,0.665,339,0.705,340,0.705,341,0.665,342,0.665,343,1.086,344,0.665,345,0.705,346,0.705,347,0.678,348,0.705,349,0.705,350,0.678,351,0.705,352,0.705,353,0.678,354,0.705,355,0.678,356,0.705,357,0.665,358,0.705,359,0.705,360,0.678,361,0.705,362,0.705,363,0.665,364,0.705,365,0.705,366,0.652,367,0.652,368,0.705,369,0.705,370,0.665,371,0.705,372,0.705,373,0.665,374,0.705,375,0.705,376,0.665,377,0.705,378,0.705,379,0.665,380,0.665,381,0.665,382,0.705,383,0.705,384,0.678,385,2.146,386,0.705,387,0.705,388,0.64,389,0.705,390,0.705,391,0.64,392,0.705,393,0.705,394,0.615,395,0.705,396,1.369,397,0.64,398,0.705,399,0.652,400,0.581,401,0.705,402,0.652,403,0.665,404,0.705,405,0.705,406,0.627,407,0.652,408,0.678,2238,2.723]],["title/components/TableComponent.html",[27,0.437,494,1.213]],["body/components/TableComponent.html",[3,0.107,4,0.107,5,0.097,7,0.586,10,0.295,11,0.558,17,0.539,18,0.008,22,0.189,26,1.77,27,0.761,28,1.991,31,0.107,38,4.049,39,2.95,40,2.102,41,1.699,42,1.925,43,3.482,44,2.308,45,1.63,50,1.845,51,2.554,52,2.554,55,0.107,58,1.61,60,2.443,61,2.35,62,2.34,63,1.81,65,0.117,66,1.479,67,1.741,82,1.354,83,1.882,85,2.297,103,2.096,107,1.172,132,1.227,144,2.011,146,2.95,147,0.004,148,0.006,149,0.004,165,0.856,211,0.686,235,1.15,241,0.727,247,0.957,248,1.741,249,2.147,261,0.801,268,0.727,275,0.801,293,1.342,298,0.659,302,0.705,400,1.796,410,1.508,411,2.077,412,1.699,413,1.665,414,1.665,416,1.665,417,1.919,420,1.675,423,1.939,424,2.24,425,1.316,426,2.119,427,2.119,428,1.665,429,2.454,430,1.665,431,1.665,432,1.538,433,1.665,434,1.538,435,1.6,436,2.534,437,1.538,438,1.665,439,1.508,440,1.6,441,1.508,442,2.119,443,1.508,444,1.665,445,1.538,446,1.665,447,1.538,448,1.6,449,1.538,450,1.538,451,1.665,452,1.538,453,1.665,454,1.538,455,1.665,456,1.538,457,1.508,458,2.119,459,1.665,460,1.538,461,1.508,462,1.665,463,1.538,464,1.665,465,1.538,466,1.665,467,1.538,468,1.665,469,1.569,470,1.665,471,1.538,472,1.665,473,1.538,474,1.665,475,1.538,476,1.665,477,1.538,478,1.665,479,1.508,480,1.665,481,1.479,482,1.665,483,1.508,484,1.665,485,1.538,486,1.665,487,1.538,488,1.665,489,1.665,490,1.538,491,1.665,492,1.45,493,1.665,494,2.222,495,1.665,496,1.508,497,1.665,498,1.538,499,1.665,500,1.508,501,1.665,502,1.538,503,1.6,504,1.665,505,1.665,515,1.915,516,1.915,585,5.275,586,6.206,592,7.071,646,4.648,648,3.869,649,3.689,650,3.689,661,2.503,767,5.512,1234,4.662,1436,6.506,1516,3.869,1649,4.079,1662,5.071,1664,5.071,1959,4.648,1979,4.648,1988,5.071,1990,5.071,1991,5.071,2208,6.453,2239,5.071,2240,7.997,2241,7.27,2242,7.27,2243,8.418,2244,7.27,2245,7.27,2246,7.27,2247,5.713,2248,5.713,2249,5.713,2250,7.27,2251,5.713,2252,5.713,2253,5.713,2254,5.713,2255,5.713,2256,7.27,2257,5.713,2258,5.713,2259,5.713,2260,5.713,2261,5.713,2262,5.071,2263,5.713,2264,5.713,2265,7.27,2266,7.27,2267,7.27,2268,7.27,2269,7.27,2270,7.27,2271,7.27,2272,7.27,2273,7.27,2274,7.27,2275,7.27,2276,7.27,2277,8.418,2278,8.418,2279,8.418,2280,7.27,2281,7.27,2282,7.27]],["title/modules/TableModule.html",[523,1.424,2283,3.484]],["body/modules/TableModule.html",[3,0.136,4,0.136,5,0.124,18,0.008,22,0.19,31,0.136,55,0.136,65,0.149,147,0.006,148,0.007,149,0.006,425,1.678,494,2.484,523,2.257,525,2.742,526,3.647,527,4.452,528,3.762,529,3.762,530,3.647,536,5.019,537,4.494,538,3.885,539,3.885,542,3.489,543,3.404,545,4.325,546,4.704,741,4.503,767,5.523,2081,5.707,2283,7.306,2284,6.466,2285,6.466,2286,6.466,2287,6.72,2288,7.285,2289,6.466]],["title/modules/TableRoutingModule.html",[523,1.424,2287,3.281]],["body/modules/TableRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,147,0.006,148,0.007,149,0.006,302,0.92,494,2.255,520,3.625,525,2.808,542,3.088,543,3.451,572,4.429,573,4.788,574,4.429,576,4.265,577,4.612,2287,6.1,2289,6.621,2290,7.46]],["title/interfaces/TeamIdPair.html",[0,0.542,47,1.079]],["body/interfaces/TeamIdPair.html",[0,0.506,2,1.29,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.438,13,1.41,14,1.584,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.642,47,1.245,48,0.618,49,0.606,55,0.185,56,1.365,57,1.008,58,1.51,59,1.008,65,0.192,76,1.533,107,0.561,117,1.659,119,1.832,121,1.466,123,1.466,125,1.466,128,1.777,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,153,0.654,154,2.337,157,2.328,158,2.459,159,1.554,160,2.11,161,2.113,162,1.855,163,1.797,164,1.554,167,2.358,168,0.642,169,1.724,170,1.111,171,1.068,172,1.089,173,1.089,174,1.089,175,1.028,176,1.028,177,0.694,178,0.694,179,0.68,180,2.372,181,1.111,182,1.966,183,1.691,184,1.691,185,2.245,186,1.089,187,1.089,188,1.724,189,1.089,190,1.928,191,1.089,192,0.707,193,2.055,194,1.495,195,0.707,196,0.707,197,1.068,198,0.707,199,1.554,200,1.524,201,1.068,202,1.554,203,2.113,204,2.113,205,1.966,206,1.554,207,1.691,208,1.524,209,1.524,210,1.089,211,0.704,212,1.111,213,1.111,214,1.372,215,1.372,216,1.372,217,1.089,218,1.111,219,1.111,220,1.524,221,1.068,222,1.524,223,1.068,224,1.089,225,1.111,226,1.111,227,1.089,228,1.524,229,1.41,230,1.966,231,1.904,232,1.524,233,1.724,234,1.089,235,1.553,236,1.089,237,0.707,238,1.524,239,1.758,240,1.068,241,0.772,242,0.951,243,0.63,244,1.9,245,0.694,246,0.667,247,0.901,248,1.659,249,1.008,250,1.028,251,1.319,252,0.898,253,0.694,254,1.068,255,1.691,256,0.694,257,1.068,258,1.724,259,0.694,260,0.694,261,0.826,262,1.345,263,1.048,264,1.625,265,2.13,266,1.089,267,1.089,268,0.772,269,1.089,270,1.089,271,1.596,272,1.504,273,1.089,274,1.089,275,0.901,276,1.008,277,1.524,278,1.089,279,0.68,280,1.068,281,1.068,282,1.294,283,1.089,284,1.089,285,1.319,286,0.707,287,1.089,288,1.089,289,1.089,290,1.089,291,1.089,292,1.089,293,1.41,294,1.068,295,0.68,296,1.504,297,1.221,298,0.495,299,1.028,300,0.667,301,0.707,302,1.024,303,1.319,304,1.797,305,1.319,306,1.294,307,1.319,308,1.068,309,1.068,310,1.068,311,1.068,312,1.319,313,1.319,314,1.319,315,1.068,316,0.68,317,1.748,318,1.714,319,0.667,320,2.292,321,2.363,322,0.667,323,0.707,324,0.707,325,0.667,326,0.707,327,0.707,328,0.667,329,0.707,330,0.707,331,0.654,332,0.707,333,0.707,334,0.654,335,0.707,336,0.707,337,0.667,338,0.667,339,0.707,340,0.707,341,0.667,342,0.667,343,1.089,344,0.667,345,0.707,346,0.707,347,0.68,348,0.707,349,0.707,350,0.68,351,0.707,352,0.707,353,0.68,354,0.707,355,0.68,356,0.707,357,0.667,358,0.707,359,0.707,360,0.68,361,0.707,362,0.707,363,0.667,364,0.707,365,0.707,366,0.654,367,0.654,368,0.707,369,0.707,370,0.667,371,0.707,372,0.707,373,0.667,374,0.707,375,0.707,376,0.667,377,0.707,378,0.707,379,0.667,380,0.667,381,0.667,382,0.707,383,0.707,384,0.68,385,2.148,386,0.707,387,0.707,388,0.642,389,0.707,390,0.707,391,0.642,392,0.707,393,0.707,394,0.618,395,0.707,396,1.372,397,0.642,398,0.707,399,0.654,400,0.583,401,0.707,402,0.654,403,0.667,404,0.707,405,0.707,406,0.63,407,0.654,408,0.68]],["title/injectables/TeamService.html",[32,2.451,150,0.202]],["body/injectables/TeamService.html",[3,0.117,4,0.117,5,0.106,10,0.323,11,0.59,14,1.578,17,0.533,18,0.008,21,1.014,22,0.182,31,0.117,32,4.635,43,3.627,44,2.524,45,1.814,51,2.793,52,2.793,55,0.144,58,1.677,65,0.157,76,1.957,78,3.359,82,1.432,83,2.25,91,2.894,111,4.351,112,2.38,114,2.807,115,2.635,127,3.849,128,1.46,132,1.406,133,3.448,136,2.748,137,2.38,144,2.931,147,0.005,148,0.006,149,0.005,150,0.338,152,1.307,155,1.097,156,1.054,161,1.841,165,0.828,185,1.467,211,0.717,221,1.914,222,1.586,223,1.914,265,1.806,302,0.771,304,1.995,317,1.163,318,1.141,363,2.122,367,2.205,370,2.248,403,2.248,420,1.772,423,2.003,448,2.153,515,2.081,516,2.081,620,3.332,793,5.599,794,5.617,795,5.149,799,5.149,829,5.83,851,3.709,1123,4.034,1192,5.83,1332,4.753,1694,6.824,1697,6.824,1699,7.921,1700,6.824,1940,5.545,1941,5.545,1942,6.824,1944,5.545,2001,6.255,2002,6.255,2146,7.921,2262,5.545,2291,5.545,2292,6.247,2293,7.689,2294,7.689,2295,7.689,2296,7.689,2297,6.247,2298,6.247,2299,6.247,2300,7.689,2301,6.247,2302,7.689,2303,7.689,2304,6.247,2305,7.689,2306,6.247,2307,7.689,2308,7.689,2309,7.689,2310,6.247,2311,6.247,2312,6.247,2313,6.247,2314,6.247,2315,6.247,2316,7.689,2317,6.247,2318,7.689,2319,6.247]],["title/components/TeamadminComponent.html",[27,0.437,496,1.213]],["body/components/TeamadminComponent.html",[3,0.114,4,0.114,5,0.104,7,0.626,10,0.316,11,0.582,17,0.529,18,0.008,21,0.887,22,0.185,27,0.785,28,2.053,31,0.114,32,5.012,33,3.943,40,3.457,41,1.816,42,2.058,50,1.973,53,3.337,54,2.528,55,0.114,60,2.449,61,2.356,62,2.387,63,1.887,65,0.125,66,1.581,67,1.816,82,1.412,83,2.134,85,2.324,88,3.67,103,2.147,112,2.356,114,2.058,115,1.932,127,3.057,128,1.16,133,2.528,136,2.015,137,2.166,147,0.005,148,0.006,149,0.005,155,1.072,156,1.031,161,1.462,165,0.85,211,0.681,220,2.093,241,0.758,247,0.672,261,0.976,268,0.758,275,1.009,276,1.937,298,0.704,366,2.065,406,1.987,410,1.612,411,2.166,412,1.816,413,1.78,414,1.78,416,1.78,417,2.001,420,1.747,423,1.747,424,1.71,425,1.407,426,2.21,427,2.21,428,1.78,429,2.514,430,1.78,431,1.78,432,1.644,433,1.78,434,1.644,435,1.71,436,2.585,437,1.644,438,1.78,439,1.612,440,1.71,441,1.612,442,2.21,443,1.612,444,1.78,445,1.644,446,1.78,447,1.644,448,1.71,449,1.644,450,1.644,451,1.78,452,1.644,453,1.78,454,1.644,455,1.78,456,1.644,457,1.612,458,2.21,459,1.78,460,1.644,461,1.612,462,1.78,463,1.644,464,1.78,465,1.644,466,1.78,467,1.644,468,1.78,469,1.677,470,1.78,471,1.644,472,1.78,473,1.644,474,1.78,475,1.644,476,1.78,477,1.644,478,1.78,479,1.612,480,1.78,481,1.581,482,1.78,483,1.612,484,1.78,485,1.644,486,1.78,487,1.644,488,1.78,489,1.78,490,1.644,491,1.78,492,1.55,493,1.78,494,1.612,495,1.78,496,2.276,497,1.78,498,1.644,499,1.78,500,1.612,501,1.78,502,1.644,503,1.71,504,1.78,505,1.78,513,4.072,515,1.816,516,1.816,517,4.895,521,3.626,777,6.168,818,6.168,829,5.748,2320,5.42,2321,8.245,2322,7.581,2323,7.581,2324,6.107,2325,7.581,2326,6.107,2327,7.581,2328,6.107,2329,6.107,2330,6.107,2331,6.107,2332,7.581,2333,6.107,2334,6.107,2335,6.107,2336,6.107,2337,7.581]],["title/guards/TeamadminGuard.html",[506,3.738,761,3.484]],["body/guards/TeamadminGuard.html",[3,0.135,4,0.135,5,0.123,10,0.372,17,0.499,18,0.008,22,0.186,31,0.135,43,3.852,44,2.905,55,0.135,65,0.147,67,1.722,82,1.339,143,3.739,144,2.944,147,0.006,148,0.007,149,0.006,150,0.367,165,0.821,211,0.66,281,2.202,317,1.339,318,1.313,420,1.927,423,1.927,508,5.851,510,7.543,511,7.635,512,5.135,513,4.301,515,2.003,516,2.003,517,4.967,520,3.495,521,4.27,761,6.342,787,5.135,793,4.967,2034,7.425,2338,6.383,2339,7.192,2340,7.192,2341,9.108,2342,9.108,2343,7.192,2344,7.192,2345,8.365]],["title/modules/TeamadminModule.html",[523,1.424,2346,3.484]],["body/modules/TeamadminModule.html",[3,0.137,4,0.137,5,0.124,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,147,0.006,148,0.007,149,0.006,425,1.68,496,2.485,523,2.26,525,2.745,526,3.651,527,4.454,528,3.766,529,3.766,530,3.651,536,5.021,537,4.497,538,3.889,539,3.889,542,3.491,543,3.406,545,4.33,546,4.709,741,4.508,777,5.933,2081,5.711,2346,7.308,2347,6.473,2348,6.473,2349,6.473,2350,6.722,2351,7.293,2352,6.473]],["title/modules/TeamadminRoutingModule.html",[523,1.424,2350,3.281]],["body/modules/TeamadminRoutingModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,27,0.707,31,0.139,55,0.139,65,0.152,147,0.006,148,0.007,149,0.006,302,0.917,496,2.25,520,3.611,525,2.797,527,3.72,542,3.076,543,3.443,572,4.411,573,4.78,574,4.411,576,4.248,577,4.593,741,4.593,2081,5.032,2350,6.086,2352,6.595,2353,7.43]],["title/components/TeamsComponent.html",[27,0.437,498,1.237]],["body/components/TeamsComponent.html",[3,0.121,4,0.121,5,0.11,7,0.663,10,0.334,11,0.603,14,1.612,17,0.469,18,0.008,22,0.161,27,0.805,28,2.106,31,0.121,32,5.026,55,0.121,60,2.455,61,2.362,62,2.426,63,1.956,65,0.132,66,1.675,67,1.881,82,1.463,85,2.106,103,2.19,112,2.417,147,0.005,148,0.006,149,0.005,165,0.785,211,0.668,241,0.786,247,0.712,261,0.865,268,0.786,275,0.865,298,0.746,410,1.708,411,2.245,412,1.925,413,1.886,414,1.886,416,1.886,417,2.074,420,1.81,423,1.491,425,1.491,426,2.29,427,2.29,428,1.886,429,2.564,430,1.886,431,1.886,432,1.742,433,1.886,434,1.742,435,1.812,436,2.627,437,1.742,438,1.886,439,1.708,440,1.812,441,1.708,442,2.29,443,1.708,444,1.886,445,1.742,446,1.886,447,1.742,448,1.812,449,1.742,450,1.742,451,1.886,452,1.742,453,1.886,454,1.742,455,1.886,456,1.742,457,1.708,458,2.29,459,1.886,460,1.742,461,1.708,462,1.886,463,1.742,464,1.886,465,1.742,466,1.886,467,1.742,468,1.886,469,1.777,470,1.886,471,1.742,472,1.886,473,1.742,474,1.886,475,1.742,476,1.886,477,1.742,478,1.886,479,1.708,480,1.886,481,1.675,482,1.886,483,1.708,484,1.886,485,1.742,486,1.886,487,1.742,488,1.886,489,1.886,490,1.742,491,1.886,492,1.642,493,1.886,494,1.708,495,1.886,496,1.708,497,1.886,498,2.368,499,1.886,500,1.708,501,1.886,502,1.742,503,1.812,504,1.886,505,1.886,515,1.55,516,1.55,661,3.029,958,4.664,976,6.391,1177,5.264,1190,5.743,2354,5.743,2355,8.459,2356,7.856,2357,6.471,2358,6.471,2359,6.471,2360,7.856]],["title/components/TournamentComponent.html",[27,0.437,500,1.213]],["body/components/TournamentComponent.html",[3,0.099,4,0.099,5,0.09,7,0.91,10,0.274,11,0.532,13,2.174,15,4.989,17,0.52,18,0.008,21,0.914,22,0.181,27,0.735,28,1.923,31,0.099,38,3.964,39,2.743,41,1.58,43,3.7,44,2.146,48,1.851,49,1.816,50,1.716,51,3.453,52,2.375,55,0.13,60,2.435,61,2.342,62,2.287,63,1.727,65,0.109,66,1.375,67,1.661,78,2,79,3.037,82,1.292,83,2,85,1.923,89,5.516,91,2.611,103,2.039,107,1.681,111,4.686,132,0.897,146,4.388,147,0.004,148,0.005,149,0.004,165,0.845,211,0.647,235,1.069,241,0.773,247,0.585,257,1.323,261,0.764,268,0.694,275,0.764,298,0.613,302,0.655,410,1.402,411,1.982,412,1.58,413,1.549,414,1.549,416,1.549,417,1.831,420,1.598,423,1.887,424,2.294,425,1.224,426,2.022,427,2.022,428,1.549,429,2.388,430,1.549,431,1.549,432,1.43,433,1.549,434,1.43,435,1.488,436,2.477,437,1.43,438,1.549,439,1.402,440,1.488,441,1.402,442,2.022,443,1.402,444,1.549,445,1.43,446,1.549,447,1.43,448,1.488,449,1.43,450,1.43,451,1.549,452,1.43,453,1.549,454,1.43,455,1.549,456,1.43,457,1.402,458,2.022,459,1.549,460,1.43,461,1.402,462,1.549,463,1.43,464,1.549,465,1.43,466,1.549,467,1.43,468,1.549,469,1.459,470,1.549,471,1.43,472,1.549,473,1.43,474,1.549,475,1.43,476,1.549,477,1.43,478,1.549,479,1.402,480,1.549,481,1.375,482,1.549,483,1.402,484,1.549,485,1.43,486,1.549,487,1.43,488,1.549,489,1.549,490,1.43,491,1.549,492,1.349,493,1.549,494,1.402,495,1.549,496,1.402,497,1.549,498,1.43,499,1.549,500,2.162,501,1.549,502,1.43,503,1.488,504,1.549,505,1.549,515,1.661,516,1.661,610,2.255,611,6.158,619,3.284,620,2.833,621,4.028,652,6.285,661,3.281,878,5.26,1234,4.584,1332,4.776,1451,3.793,1516,3.598,1649,3.793,1722,6.857,1757,4.715,1759,4.715,1763,4.715,1769,4.715,1798,6.158,1828,6.158,1866,7.735,1867,7.542,2001,5.644,2002,5.644,2361,4.322,2362,7.725,2363,6.938,2364,8.19,2365,8.19,2366,5.312,2367,7.725,2368,6.938,2369,5.312,2370,6.938,2371,5.312,2372,5.312,2373,5.312,2374,5.312,2375,5.312,2376,5.312,2377,4.715,2378,5.312,2379,5.312,2380,5.312,2381,5.312,2382,5.312,2383,5.312,2384,5.312,2385,6.938,2386,5.312,2387,5.312,2388,5.312,2389,5.312,2390,5.312,2391,8.497,2392,5.312,2393,5.312,2394,5.312,2395,5.312,2396,5.312,2397,6.938,2398,5.312,2399,5.312,2400,6.938,2401,5.312,2402,5.312,2403,5.312,2404,5.312,2405,6.938,2406,6.938,2407,6.938,2408,6.938,2409,9.003,2410,6.938,2411,6.938]],["title/injectables/TournamentGQL.html",[49,1.019,150,0.202]],["body/injectables/TournamentGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.825,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.95,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.614,147,0.002,148,0.003,149,0.002,150,0.413,151,0.653,152,0.571,153,0.653,154,2.343,155,0.479,156,0.46,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.109,171,1.067,172,1.088,173,1.088,174,1.088,175,1.026,176,1.026,177,0.692,178,0.692,179,0.679,180,2.371,181,1.109,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.109,213,1.109,214,1.37,215,1.37,216,1.37,217,1.088,218,1.109,219,1.109,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.109,226,1.109,227,1.088,228,1.523,229,1.409,230,1.965,231,1.903,232,1.523,233,1.723,234,1.088,235,1.552,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.628,244,1.899,245,0.692,246,0.666,247,0.901,248,1.658,249,1.007,250,1.026,251,1.318,252,0.897,253,0.692,254,1.067,255,1.69,256,0.692,257,1.067,258,1.723,259,0.692,260,0.692,261,0.826,262,1.344,263,1.046,264,1.623,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.502,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.409,294,1.067,295,0.679,296,1.502,297,1.22,298,0.494,299,1.026,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.318,312,1.318,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.362,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.653,332,0.706,333,0.706,334,0.653,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.653,367,0.653,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.616,395,0.706,396,1.37,397,0.641,398,0.706,399,0.653,400,0.582,401,0.706,402,0.653,403,0.666,404,1.109,405,1.109,406,0.628,407,0.653,408,0.679,2412,2.728]],["title/modules/TournamentModule.html",[523,1.424,2413,3.484]],["body/modules/TournamentModule.html",[3,0.137,4,0.137,5,0.124,7,0.748,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,147,0.006,148,0.007,149,0.006,425,1.68,500,2.485,523,2.26,525,2.745,526,3.651,527,4.454,528,3.766,529,3.766,530,3.651,536,5.021,537,4.497,538,3.889,539,3.889,542,3.491,543,3.406,545,4.33,546,4.709,741,4.508,2081,5.711,2413,7.308,2414,6.473,2415,6.473,2416,6.473,2417,6.722,2418,7.293,2419,6.473]],["title/modules/TournamentRoutingModule.html",[523,1.424,2417,3.281]],["body/modules/TournamentRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.709,31,0.14,55,0.14,65,0.152,147,0.006,148,0.007,149,0.006,302,0.919,500,2.254,520,3.621,525,2.805,527,3.73,542,3.084,543,3.449,572,4.424,573,4.786,574,4.424,576,4.26,577,4.606,2417,6.096,2419,6.613,2420,7.451]],["title/injectables/UpdatePitchContactGQL.html",[150,0.202,341,1.122]],["body/injectables/UpdatePitchContactGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.004,48,0.614,49,0.603,55,0.185,56,1.362,57,1.004,58,1.508,59,1.004,65,0.192,76,1.529,107,0.558,117,1.655,119,1.829,121,1.462,123,0.664,125,0.664,128,1.776,131,1.926,132,1.612,147,0.002,148,0.003,149,0.002,150,0.413,151,0.651,152,0.569,153,0.651,154,2.342,155,0.477,156,0.459,157,2.329,158,2.46,159,1.55,160,2.109,161,2.111,162,1.852,163,1.794,164,1.55,165,0.252,167,2.357,168,0.639,169,1.721,170,1.106,171,1.064,172,1.085,173,1.085,174,1.085,175,1.024,176,1.024,177,0.69,178,0.69,179,0.677,180,2.371,181,1.106,182,1.963,183,1.688,184,1.688,185,2.244,186,1.085,187,1.085,188,1.721,189,1.085,190,2.024,191,1.085,192,0.704,193,2.08,194,1.491,195,0.704,196,0.704,197,1.064,198,0.704,199,1.55,200,1.52,201,1.064,202,1.789,203,2.144,204,2.144,205,2.063,206,1.55,207,1.688,208,1.52,209,1.52,210,1.085,211,0.704,212,1.106,213,1.106,214,1.367,215,1.367,216,1.367,217,1.085,218,1.106,219,1.106,220,1.52,221,1.064,222,1.52,223,1.064,224,1.085,225,1.106,226,1.106,227,1.085,228,1.52,229,1.407,230,1.963,231,1.901,232,1.52,233,1.721,234,1.085,235,1.551,236,1.085,237,0.704,238,1.52,239,1.755,240,1.064,241,0.771,242,0.948,243,0.626,244,1.898,245,0.69,246,0.664,247,0.9,248,1.655,249,1.004,250,1.024,251,1.315,252,0.894,253,0.69,254,1.064,255,1.688,256,0.69,257,1.064,258,1.721,259,0.69,260,0.69,261,0.825,262,1.341,263,1.044,264,1.621,265,2.129,266,1.085,267,1.085,268,0.771,269,1.085,270,1.085,271,1.593,272,1.5,273,1.085,274,1.085,275,0.9,276,1.004,277,1.52,278,1.085,279,0.677,280,1.064,281,1.064,282,1.29,283,1.085,284,1.085,285,1.315,286,0.704,287,1.085,288,1.085,289,1.085,290,1.085,291,1.085,292,1.085,293,1.407,294,1.064,295,0.677,296,1.5,297,1.217,298,0.493,299,1.024,300,0.664,301,0.704,302,1.023,303,1.315,304,1.794,305,1.315,306,1.29,307,1.315,308,1.064,309,1.064,310,1.064,311,1.064,312,1.315,313,1.315,314,1.315,315,1.064,316,0.677,317,1.747,318,1.714,319,0.664,320,2.291,321,2.361,322,0.664,323,0.704,324,0.704,325,0.664,326,0.704,327,0.704,328,0.664,329,0.704,330,0.704,331,0.651,332,0.704,333,0.704,334,0.651,335,0.704,336,0.704,337,0.664,338,0.664,339,0.704,340,0.704,341,1.044,342,0.664,343,1.085,344,0.664,345,0.704,346,0.704,347,0.677,348,0.704,349,0.704,350,0.677,351,0.704,352,0.704,353,0.677,354,0.704,355,0.677,356,0.704,357,0.664,358,0.704,359,0.704,360,0.677,361,0.704,362,0.704,363,0.664,364,0.704,365,0.704,366,0.651,367,0.651,368,0.704,369,0.704,370,0.664,371,0.704,372,0.704,373,0.664,374,0.704,375,0.704,376,0.664,377,0.704,378,0.704,379,0.664,380,0.664,381,0.664,382,0.704,383,0.704,384,0.677,385,2.145,386,0.704,387,0.704,388,0.639,389,0.704,390,0.704,391,0.639,392,0.704,393,0.704,394,0.614,395,0.704,396,1.367,397,0.639,398,0.704,399,0.651,400,0.58,401,0.704,402,0.651,403,0.664,404,0.704,405,0.704,406,0.626,407,0.651,408,0.677,2421,2.719]],["title/injectables/UpdateTeamContactGQL.html",[150,0.202,366,1.101]],["body/injectables/UpdateTeamContactGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.004,48,0.614,49,0.603,55,0.185,56,1.362,57,1.004,58,1.508,59,1.004,65,0.192,76,1.529,107,0.558,117,1.655,119,1.829,121,1.462,123,0.664,125,0.664,128,1.776,131,1.926,132,1.612,147,0.002,148,0.003,149,0.002,150,0.413,151,0.651,152,0.569,153,0.651,154,2.342,155,0.477,156,0.459,157,2.329,158,2.46,159,1.55,160,2.109,161,2.144,162,1.852,163,1.794,164,1.55,165,0.252,167,2.357,168,0.639,169,1.721,170,1.106,171,1.064,172,1.085,173,1.085,174,1.085,175,1.024,176,1.024,177,0.69,178,0.69,179,0.677,180,2.371,181,1.106,182,1.963,183,1.688,184,1.688,185,2.244,186,1.085,187,1.085,188,1.721,189,1.085,190,1.925,191,1.085,192,0.704,193,2.08,194,1.491,195,0.704,196,0.704,197,1.064,198,0.704,199,1.55,200,1.52,201,1.064,202,1.55,203,2.144,204,2.144,205,2.063,206,1.55,207,1.688,208,1.52,209,1.52,210,1.085,211,0.704,212,1.106,213,1.106,214,1.367,215,1.367,216,1.367,217,1.085,218,1.106,219,1.106,220,1.755,221,1.064,222,1.52,223,1.064,224,1.085,225,1.106,226,1.106,227,1.085,228,1.52,229,1.407,230,1.963,231,1.901,232,1.52,233,1.721,234,1.085,235,1.551,236,1.085,237,0.704,238,1.52,239,1.755,240,1.064,241,0.771,242,0.948,243,0.626,244,1.898,245,0.69,246,0.664,247,0.9,248,1.655,249,1.004,250,1.024,251,1.315,252,0.894,253,0.69,254,1.064,255,1.688,256,0.69,257,1.064,258,1.721,259,0.69,260,0.69,261,0.825,262,1.341,263,1.044,264,1.621,265,2.129,266,1.085,267,1.085,268,0.771,269,1.085,270,1.085,271,1.593,272,1.5,273,1.085,274,1.085,275,0.9,276,1.004,277,1.52,278,1.085,279,0.677,280,1.064,281,1.064,282,1.29,283,1.085,284,1.085,285,1.315,286,0.704,287,1.085,288,1.085,289,1.085,290,1.085,291,1.085,292,1.085,293,1.407,294,1.064,295,0.677,296,1.5,297,1.217,298,0.493,299,1.024,300,0.664,301,0.704,302,1.023,303,1.315,304,1.794,305,1.315,306,1.29,307,1.315,308,1.064,309,1.064,310,1.064,311,1.064,312,1.315,313,1.315,314,1.315,315,1.064,316,0.677,317,1.747,318,1.714,319,0.664,320,2.291,321,2.361,322,0.664,323,0.704,324,0.704,325,0.664,326,0.704,327,0.704,328,0.664,329,0.704,330,0.704,331,0.651,332,0.704,333,0.704,334,0.651,335,0.704,336,0.704,337,0.664,338,0.664,339,0.704,340,0.704,341,0.664,342,0.664,343,1.085,344,0.664,345,0.704,346,0.704,347,0.677,348,0.704,349,0.704,350,0.677,351,0.704,352,0.704,353,0.677,354,0.704,355,0.677,356,0.704,357,0.664,358,0.704,359,0.704,360,0.677,361,0.704,362,0.704,363,0.664,364,0.704,365,0.704,366,1.024,367,0.651,368,0.704,369,0.704,370,0.664,371,0.704,372,0.704,373,0.664,374,0.704,375,0.704,376,0.664,377,0.704,378,0.704,379,0.664,380,0.664,381,0.664,382,0.704,383,0.704,384,0.677,385,2.145,386,0.704,387,0.704,388,0.639,389,0.704,390,0.704,391,0.639,392,0.704,393,0.704,394,0.614,395,0.704,396,1.367,397,0.639,398,0.704,399,0.651,400,0.58,401,0.704,402,0.651,403,0.664,404,0.704,405,0.704,406,0.626,407,0.651,408,0.677,2422,2.719]],["title/injectables/UpdateUserGQL.html",[150,0.202,380,1.122]],["body/injectables/UpdateUserGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.406,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.638,47,1.003,48,0.614,49,0.602,55,0.185,56,1.362,57,1.003,58,1.507,59,1.003,65,0.192,76,1.529,107,0.557,117,1.655,119,1.828,121,1.461,123,0.663,125,0.663,128,1.776,131,1.925,132,1.612,147,0.002,148,0.003,149,0.002,150,0.413,151,0.651,152,0.568,153,0.651,154,2.342,155,0.477,156,0.458,157,2.329,158,2.46,159,1.549,160,2.108,161,2.111,162,1.852,163,1.793,164,1.549,165,0.252,167,2.357,168,0.638,169,1.72,170,1.106,171,1.063,172,1.084,173,1.084,174,1.084,175,1.023,176,1.023,177,0.69,178,0.69,179,0.676,180,2.371,181,1.106,182,1.962,183,1.687,184,1.687,185,2.244,186,1.084,187,1.084,188,1.72,189,1.084,190,1.925,191,1.084,192,0.703,193,2.08,194,1.49,195,0.703,196,0.703,197,1.063,198,0.703,199,1.549,200,1.519,201,1.063,202,1.549,203,2.144,204,2.144,205,1.962,206,1.549,207,1.687,208,1.519,209,1.519,210,1.084,211,0.703,212,1.106,213,1.106,214,1.367,215,1.367,216,1.367,217,1.084,218,1.106,219,1.106,220,1.519,221,1.063,222,1.519,223,1.063,224,1.084,225,1.106,226,1.106,227,1.084,228,1.519,229,1.406,230,2.063,231,2.04,232,1.754,233,1.917,234,1.084,235,1.55,236,1.084,237,0.703,238,1.519,239,1.754,240,1.063,241,0.771,242,0.947,243,0.626,244,1.898,245,0.69,246,0.663,247,0.9,248,1.655,249,1.003,250,1.023,251,1.314,252,0.894,253,0.69,254,1.063,255,1.687,256,0.69,257,1.063,258,1.72,259,0.69,260,0.69,261,0.824,262,1.34,263,1.043,264,1.62,265,2.128,266,1.084,267,1.084,268,0.771,269,1.084,270,1.084,271,1.592,272,1.499,273,1.084,274,1.084,275,0.9,276,1.003,277,1.519,278,1.084,279,0.676,280,1.063,281,1.063,282,1.289,283,1.084,284,1.084,285,1.314,286,0.703,287,1.084,288,1.084,289,1.084,290,1.084,291,1.084,292,1.084,293,1.406,294,1.063,295,0.676,296,1.499,297,1.216,298,0.493,299,1.023,300,0.663,301,0.703,302,1.022,303,1.314,304,1.793,305,1.314,306,1.289,307,1.314,308,1.063,309,1.063,310,1.063,311,1.063,312,1.314,313,1.314,314,1.314,315,1.063,316,0.676,317,1.747,318,1.713,319,0.663,320,2.291,321,2.361,322,0.663,323,0.703,324,0.703,325,0.663,326,0.703,327,0.703,328,0.663,329,0.703,330,0.703,331,0.651,332,0.703,333,0.703,334,0.651,335,0.703,336,0.703,337,0.663,338,0.663,339,0.703,340,0.703,341,0.663,342,0.663,343,1.084,344,0.663,345,0.703,346,0.703,347,0.676,348,0.703,349,0.703,350,0.676,351,0.703,352,0.703,353,0.676,354,0.703,355,0.676,356,0.703,357,0.663,358,0.703,359,0.703,360,0.676,361,0.703,362,0.703,363,0.663,364,0.703,365,0.703,366,0.651,367,0.651,368,0.703,369,0.703,370,0.663,371,0.703,372,0.703,373,0.663,374,0.703,375,0.703,376,0.663,377,0.703,378,0.703,379,0.663,380,1.043,381,0.663,382,0.703,383,0.703,384,0.676,385,2.145,386,0.703,387,0.703,388,0.638,389,0.703,390,0.703,391,0.638,392,0.703,393,0.703,394,0.614,395,0.703,396,1.367,397,0.638,398,0.703,399,0.651,400,0.579,401,0.703,402,0.651,403,0.663,404,0.703,405,0.703,406,0.626,407,0.651,408,0.676,2423,2.716]],["title/injectables/UserGQL.html",[150,0.202,406,1.059]],["body/injectables/UserGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,121,1.465,123,0.666,125,0.666,128,1.78,131,1.926,132,1.613,147,0.002,148,0.003,149,0.002,150,0.413,151,0.654,152,0.571,153,0.654,154,2.343,155,0.479,156,0.461,157,2.33,158,2.459,159,1.553,160,2.11,161,2.112,162,1.854,163,1.796,164,1.553,165,0.253,167,2.358,168,0.641,169,1.723,170,1.11,171,1.067,172,1.088,173,1.088,174,1.088,175,1.027,176,1.027,177,0.693,178,0.693,179,0.679,180,2.371,181,1.11,182,1.965,183,1.69,184,1.69,185,2.245,186,1.088,187,1.088,188,1.723,189,1.088,190,1.927,191,1.088,192,0.706,193,2.054,194,1.494,195,0.706,196,0.706,197,1.067,198,0.706,199,1.553,200,1.523,201,1.067,202,1.553,203,2.112,204,2.112,205,1.965,206,1.553,207,1.69,208,1.523,209,1.523,210,1.088,211,0.704,212,1.11,213,1.11,214,1.371,215,1.371,216,1.371,217,1.088,218,1.11,219,1.11,220,1.523,221,1.067,222,1.523,223,1.067,224,1.088,225,1.11,226,1.11,227,1.088,228,1.523,229,1.41,230,1.965,231,1.904,232,1.523,233,1.723,234,1.088,235,1.553,236,1.088,237,0.706,238,1.523,239,1.757,240,1.067,241,0.772,242,0.95,243,0.629,244,1.9,245,0.693,246,0.666,247,0.901,248,1.658,249,1.007,250,1.027,251,1.318,252,0.897,253,0.693,254,1.067,255,1.69,256,0.693,257,1.067,258,1.723,259,0.693,260,0.693,261,0.869,262,1.523,263,1.047,264,1.624,265,2.13,266,1.088,267,1.088,268,0.772,269,1.088,270,1.088,271,1.595,272,1.503,273,1.088,274,1.088,275,0.901,276,1.007,277,1.523,278,1.088,279,0.679,280,1.067,281,1.067,282,1.293,283,1.088,284,1.088,285,1.318,286,0.706,287,1.088,288,1.088,289,1.088,290,1.088,291,1.088,292,1.088,293,1.41,294,1.067,295,0.679,296,1.503,297,1.22,298,0.494,299,1.027,300,0.666,301,0.706,302,1.023,303,1.318,304,1.796,305,1.318,306,1.293,307,1.318,308,1.067,309,1.067,310,1.067,311,1.067,312,1.494,313,1.318,314,1.318,315,1.067,316,0.679,317,1.748,318,1.714,319,0.666,320,2.292,321,2.363,322,0.666,323,0.706,324,0.706,325,0.666,326,0.706,327,0.706,328,0.666,329,0.706,330,0.706,331,0.654,332,0.706,333,0.706,334,0.654,335,0.706,336,0.706,337,0.666,338,0.666,339,0.706,340,0.706,341,0.666,342,0.666,343,1.088,344,0.666,345,0.706,346,0.706,347,0.679,348,0.706,349,0.706,350,0.679,351,0.706,352,0.706,353,0.679,354,0.706,355,0.679,356,0.706,357,0.666,358,0.706,359,0.706,360,0.679,361,0.706,362,0.706,363,0.666,364,0.706,365,0.706,366,0.654,367,0.654,368,0.706,369,0.706,370,0.666,371,0.706,372,0.706,373,0.666,374,0.706,375,0.706,376,0.666,377,0.706,378,0.706,379,0.666,380,0.666,381,0.666,382,0.706,383,0.706,384,0.679,385,2.147,386,0.706,387,0.706,388,0.641,389,0.706,390,0.706,391,0.641,392,0.706,393,0.706,394,0.617,395,0.706,396,1.371,397,0.641,398,0.706,399,0.654,400,0.582,401,0.706,402,0.654,403,0.666,404,0.706,405,0.706,406,0.988,407,0.654,408,0.679,2424,2.729]],["title/components/UserListComponent.html",[27,0.437,502,1.237]],["body/components/UserListComponent.html",[3,0.106,4,0.106,5,0.097,7,0.581,10,0.293,11,0.555,14,1.485,17,0.501,18,0.008,22,0.188,26,1.757,27,0.759,28,1.984,31,0.106,40,3.316,41,1.687,42,1.911,43,3.47,44,2.291,50,1.832,51,3.235,52,2.535,53,3.16,54,2.347,55,0.106,60,2.442,61,2.349,62,2.457,63,1.801,65,0.116,66,1.468,67,1.733,82,1.348,83,2.245,86,2.236,88,3.299,91,3,103,2.09,111,3.623,112,1.62,114,1.911,115,1.794,127,2.839,128,1.077,133,2.347,136,1.871,137,2.068,147,0.004,148,0.006,149,0.004,165,0.823,203,1.733,204,1.733,211,0.685,233,1.412,234,1.837,241,0.724,247,0.624,261,1.05,263,2.165,264,1.984,268,0.724,275,0.797,298,0.654,302,0.7,381,2.201,407,2.124,410,1.497,411,2.068,412,1.687,413,1.653,414,1.653,416,1.653,417,1.91,420,1.667,423,1.934,424,2.351,425,1.307,426,2.109,427,2.109,428,1.653,429,2.447,430,1.653,431,1.653,432,1.527,433,1.653,434,1.527,435,1.588,436,2.528,437,1.527,438,1.653,439,1.91,440,2.232,441,1.497,442,2.109,443,1.497,444,1.653,445,1.527,446,1.653,447,1.527,448,1.588,449,1.527,450,1.527,451,1.653,452,1.527,453,1.653,454,1.527,455,1.653,456,1.527,457,1.497,458,2.109,459,1.653,460,1.948,461,1.497,462,1.653,463,1.527,464,1.653,465,1.527,466,1.653,467,1.527,468,1.653,469,1.557,470,1.653,471,1.527,472,1.653,473,1.527,474,1.653,475,1.527,476,1.653,477,1.527,478,1.653,479,1.497,480,1.653,481,1.468,482,1.653,483,1.497,484,1.653,485,1.527,486,1.653,487,1.527,488,1.653,489,1.653,490,1.527,491,1.653,492,1.439,493,1.653,494,1.497,495,1.653,496,1.497,497,1.653,498,1.527,499,1.653,500,1.497,501,1.653,502,2.26,503,2.232,504,1.653,505,1.653,515,1.909,516,1.909,554,7.332,567,3.662,568,4.296,593,3.99,594,5.19,661,3.198,852,5.486,939,4.049,940,3.367,944,2.928,958,4.296,1167,4.901,1168,4.613,1272,4.901,1332,3.506,1652,4.049,1654,4.049,1683,4.3,1684,4.3,2425,8,2426,5.033,2427,7.969,2428,7.236,2429,8.395,2430,7.236,2431,5.671,2432,7.236,2433,5.671,2434,7.236,2435,5.671,2436,7.236,2437,5.671,2438,5.671,2439,5.671,2440,5.671,2441,5.671,2442,5.671,2443,5.671,2444,7.236,2445,8.395,2446,5.671,2447,5.671,2448,5.671,2449,5.671,2450,5.671,2451,7.236,2452,7.236,2453,7.236,2454,7.236]],["title/coverage.html",[2455,5.122]],["body/coverage.html",[0,1.105,1,3.56,5,0.085,6,5.677,7,0.878,8,5.071,9,5.677,17,0.298,18,0.008,20,3.376,27,0.927,32,2.659,38,2.171,46,1.171,47,1.171,48,1.127,49,1.105,53,1.876,66,1.29,78,1.876,146,5.124,147,0.006,148,0.005,149,0.004,150,0.431,151,1.194,153,2.351,169,1.241,241,0.666,247,0.88,261,0.732,268,0.799,275,0.732,303,1.241,304,1.194,305,1.241,306,1.217,307,1.241,308,1.241,309,1.241,310,1.241,311,1.241,312,1.241,313,1.241,314,1.241,315,1.241,319,1.217,322,1.217,325,1.217,328,1.217,331,1.194,334,1.194,337,1.217,338,1.217,341,1.217,342,1.217,344,1.217,347,1.241,350,1.241,353,1.241,355,1.241,357,1.217,360,1.241,363,1.217,366,1.194,367,1.194,370,1.217,373,1.217,376,1.217,379,1.217,380,1.217,381,1.217,384,1.241,388,1.171,391,1.171,394,1.127,397,1.171,399,1.194,400,1.063,402,1.194,403,1.217,406,1.149,407,1.194,410,1.316,415,4.425,432,1.342,434,1.342,437,1.342,439,1.316,441,1.316,443,1.316,445,1.342,447,1.342,449,1.342,450,1.342,452,1.342,454,1.342,456,1.342,457,1.316,460,1.342,461,1.316,463,1.342,465,1.342,467,1.342,469,1.369,471,1.342,473,1.342,475,1.342,477,1.342,479,1.316,481,1.29,483,1.316,485,1.342,487,1.342,490,1.342,492,1.265,494,1.316,496,1.316,498,1.342,500,1.316,502,1.342,506,5.412,507,3.56,509,4.425,513,2.354,551,5.346,554,4.055,557,3.78,563,4.055,565,5.704,567,4.296,582,4.425,585,2.85,595,3.376,596,3.219,597,3.082,614,6.057,616,5.044,621,3.78,708,3.78,723,5.412,749,5.904,755,4.055,759,4.055,761,3.78,767,3.78,780,3.78,781,5.412,804,5.677,832,3.78,834,3.376,853,3.78,885,4.425,886,3.78,887,5.528,914,4.425,939,4.75,940,3.95,942,3.78,949,5.412,953,3.78,961,4.425,962,4.055,963,4.425,977,4.425,993,4.425,994,3.56,1005,2.85,1054,4.425,1068,5.412,1069,4.055,1070,4.425,1102,5.677,1103,5.677,1111,3.78,1173,4.425,1224,4.425,1234,2.574,1273,4.425,1297,4.425,1320,4.425,1354,4.425,1430,5.412,1435,3.376,1450,3.78,1479,5.412,1498,4.055,1506,3.56,1507,5.677,1508,5.677,1512,3.56,1585,3.78,1586,5.412,1592,4.296,1593,5.346,1600,5.412,1601,5.412,1604,4.425,1665,4.425,1690,4.425,1714,5.412,1753,4.055,1810,4.425,1816,4.425,1916,4.425,1949,6.498,1980,4.055,1982,4.055,1984,4.055,2054,4.425,2084,4.425,2107,4.425,2125,4.425,2138,4.425,2139,4.425,2156,5.412,2176,4.055,2185,4.425,2239,4.425,2291,4.425,2320,4.425,2338,4.425,2354,4.425,2361,5.412,2425,4.425,2426,4.425,2455,4.055,2456,4.425,2457,4.985,2458,4.985,2459,9.782,2460,9.223,2461,9.671,2462,9.691,2463,6.652,2464,8.88,2465,8.88,2466,7.988,2467,7.988,2468,8.561,2469,5.904,2470,4.985,2471,4.425,2472,4.985,2473,8.322,2474,8.322,2475,4.985,2476,4.985,2477,4.985,2478,4.985,2479,4.985,2480,4.985,2481,4.985,2482,4.425,2483,4.425,2484,4.425,2485,4.425,2486,5.904,2487,4.425,2488,4.985]],["title/dependencies.html",[526,2.77,2489,3.826]],["body/dependencies.html",[18,0.008,26,2.079,31,0.126,35,4.149,36,4.149,37,3.702,41,2.556,42,2.261,44,3.244,137,1.917,147,0.005,148,0.006,149,0.005,265,1.576,296,2.195,297,1.98,299,2.27,520,3.261,526,3.36,528,3.465,620,3.579,725,7.127,726,6.532,732,5.956,733,5.956,739,3.465,741,4.149,834,4.545,849,5.459,850,6.532,1192,5.088,1272,4.545,1351,7.245,1352,5.459,1361,7.627,1362,5.956,1369,5.956,1371,5.088,1372,5.088,1373,6.088,1423,5.956,1456,5.459,1515,5.088,1935,5.956,2036,5.956,2455,5.459,2490,6.711,2491,9.48,2492,6.711,2493,8.03,2494,6.711,2495,8.03,2496,6.711,2497,6.711,2498,6.711,2499,6.711,2500,6.711,2501,6.711,2502,6.711,2503,6.711,2504,6.711,2505,6.711,2506,6.711,2507,6.711,2508,8.03,2509,6.711,2510,6.711,2511,6.711,2512,6.711,2513,8.03,2514,8.03,2515,8.03,2516,6.711,2517,6.711,2518,6.711,2519,6.711,2520,6.711,2521,6.711,2522,6.711,2523,6.711,2524,6.711,2525,6.711,2526,6.711,2527,6.711,2528,6.711,2529,6.711,2530,5.956,2531,6.711,2532,9.419,2533,9.342,2534,6.711,2535,6.711,2536,8.905,2537,6.711,2538,6.711,2539,6.711,2540,6.711,2541,6.711,2542,6.711,2543,6.711,2544,6.711,2545,6.711,2546,6.711,2547,6.711,2548,6.711,2549,6.711,2550,6.711,2551,6.711,2552,6.711,2553,6.711,2554,6.711,2555,6.711,2556,6.711,2557,6.711,2558,6.711,2559,6.711,2560,6.711,2561,6.711,2562,6.711,2563,6.711,2564,6.711,2565,6.711,2566,6.711,2567,6.711,2568,6.711,2569,6.711]],["title/miscellaneous/enumerations.html",[2570,2.365,2571,4.912]],["body/miscellaneous/enumerations.html",[10,0.389,18,0.007,147,0.006,148,0.007,149,0.006,153,1.803,156,1.583,171,2.138,172,2.18,173,2.18,174,2.18,175,2.057,176,2.057,177,1.911,178,1.911,2570,4.654,2571,6.682,2572,6.987]],["title/miscellaneous/functions.html",[2570,2.365,2573,4.912]],["body/miscellaneous/functions.html",[10,0.391,18,0.007,147,0.006,148,0.007,149,0.006,211,0.68,515,2.062,516,2.062,723,6.153,750,6.713,752,6.713,755,7.005,759,7.005,2570,4.676,2573,6.713,2574,8.611,2575,8.611]],["title/index.html",[10,0.198,2576,3.396,2577,3.396]],["body/index.html",[18,0.007,147,0.006,148,0.007,149,0.006,2456,6.772,2578,7.63,2579,8.654,2580,8.654,2581,7.63]],["title/modules.html",[525,2.37]],["body/modules.html",[18,0.007,147,0.006,148,0.007,149,0.006,524,5.486,525,2.724,534,5.167,535,5.167,536,3.859,704,4.901,714,5.486,720,5.167,721,5.167,722,4.901,726,7.859,983,5.486,987,5.167,1340,5.167,2012,5.486,2016,5.167,2075,5.486,2079,5.167,2283,5.486,2287,5.167,2346,5.486,2350,5.167,2413,5.486,2417,5.167,2582,9.66,2583,9.66,2584,9.825,2585,9.66,2586,9.66]],["title/overview.html",[2587,5.588]],["body/overview.html",[2,2.81,18,0.008,66,2.109,147,0.005,148,0.006,149,0.005,152,1.245,410,2.151,411,1.7,425,1.371,432,2.453,434,2.453,437,2.194,439,2.151,441,2.151,443,2.151,445,2.453,447,2.194,449,2.453,450,2.194,452,2.194,454,2.194,456,2.194,457,2.151,460,2.194,461,2.405,463,2.194,465,2.194,467,2.194,469,2.237,471,2.194,473,2.194,475,2.194,477,2.453,479,2.151,481,2.109,483,2.151,485,2.194,487,2.194,490,2.453,492,2.069,494,2.151,496,2.151,498,2.194,500,2.151,502,2.194,508,4.841,513,3.848,523,1.844,524,7.43,525,2.24,526,2.979,527,2.979,528,3.073,529,3.073,530,2.979,531,5.281,532,5.281,533,5.281,534,5.818,535,6.754,536,5.25,537,3.979,538,3.174,539,3.174,573,3.174,595,5.519,597,5.038,704,5.786,714,7.287,715,5.281,716,5.281,717,5.281,718,5.281,719,5.281,720,5.818,721,6.505,722,6.239,983,7.172,984,5.281,985,5.281,986,5.281,987,5.818,1336,5.281,1337,5.281,1338,5.281,1339,5.281,1340,5.818,1346,5.281,1347,5.281,1412,4.841,2012,7.096,2013,5.281,2014,5.281,2015,5.281,2016,5.818,2075,6.985,2076,5.281,2077,5.281,2078,5.281,2079,5.818,2221,5.281,2222,5.281,2224,5.281,2283,6.985,2284,5.281,2285,5.281,2286,5.281,2287,5.818,2346,6.985,2347,5.281,2348,5.281,2349,5.281,2350,5.818,2413,6.985,2414,5.281,2415,5.281,2416,5.281,2417,5.818,2587,5.281,2588,7.46,2589,5.95,2590,5.95,2591,5.95]],["title/routes.html",[573,3.358]],["body/routes.html",[18,0.007,147,0.006,148,0.007,149,0.006,573,4.084]],["title/todo.html",[897,3.396,2576,3.396,2577,3.396]],["body/todo.html",[18,0.007,137,2.174,147,0.006,148,0.007,149,0.006,294,1.894,298,0.877,2530,6.752,2592,7.608,2593,7.608,2594,7.608,2595,7.608,2596,7.608,2597,7.608,2598,7.608,2599,7.608]],["title/miscellaneous/typealiases.html",[2570,2.365,2600,5.534]],["body/miscellaneous/typealiases.html",[7,0.733,10,0.287,14,1.811,16,7.081,17,0.592,18,0.007,37,3.943,45,1.614,56,1.495,57,1.679,58,1.83,59,1.679,76,1.679,107,1.467,128,1.842,131,2.032,147,0.004,148,0.006,149,0.004,153,1.332,158,2.502,167,2.035,168,1.679,235,1.439,236,1.814,240,1.779,241,0.715,242,1.584,244,1.956,245,1.412,247,0.918,248,1.996,249,1.679,251,1.779,252,1.495,253,1.412,255,1.745,256,1.412,258,1.779,259,1.412,260,1.412,262,1.814,263,1.745,264,1.779,265,2.278,268,0.715,272,1.647,275,0.918,276,1.679,279,1.779,280,1.779,282,1.745,285,1.779,1420,5.419,1593,3.971,1595,5.814,2570,3.438,2572,8.081,2601,5.562,2602,7.652]],["title/miscellaneous/variables.html",[131,1.136,2570,2.365]],["body/miscellaneous/variables.html",[7,0.832,10,0.305,14,1.523,17,0.573,18,0.008,19,1.409,21,0.998,45,1.81,94,3.81,131,1.211,132,1.595,147,0.007,148,0.006,149,0.005,153,1.413,155,1.714,156,1.647,157,2.317,162,1.386,163,1.777,183,1.44,184,1.44,188,1.469,193,1.709,203,1.777,204,1.777,205,1.469,207,1.44,211,0.693,230,1.469,235,1.493,238,1.497,239,1.497,241,0.812,244,1.888,247,0.817,248,1.413,255,1.44,258,1.469,261,0.817,265,2.229,266,1.497,267,1.497,268,0.852,269,1.497,270,1.497,271,1.962,272,1.709,273,1.497,274,1.497,275,0.986,277,1.883,278,1.497,281,1.469,282,1.44,283,1.497,284,1.497,285,1.469,287,1.497,288,1.497,289,1.497,290,1.497,291,1.497,292,1.497,293,1.743,294,1.469,303,2.12,304,2.178,305,2.021,306,1.982,307,2.12,308,1.847,309,1.847,310,1.847,311,1.847,312,1.847,313,1.847,314,2.021,315,1.847,614,6.973,621,5.625,758,4.542,804,4.473,834,5.025,853,5.625,854,4.799,874,5.667,1368,7.559,1479,4.799,1498,6.036,1592,4.791,1593,4.212,1594,5.625,1598,5.625,1600,4.799,1601,6.036,1714,4.799,1753,6.603,1949,4.799,1980,6.036,1981,5.236,1982,6.036,1983,5.236,1984,6.036,1985,5.236,2156,4.799,2176,6.036,2177,5.236,2361,4.799,2377,5.236,2469,5.236,2471,6.585,2482,5.236,2483,5.236,2484,5.236,2485,5.236,2486,5.236,2487,6.585,2570,3.647,2572,7.719,2602,5.236,2603,5.899,2604,7.42,2605,5.899,2606,5.899,2607,5.899,2608,5.899,2609,8.117,2610,5.899,2611,5.899,2612,5.899,2613,5.899,2614,5.899,2615,5.899,2616,5.899,2617,5.899,2618,8.517,2619,8.517,2620,5.899]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":146,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["0.1.1",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.1",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["0.4.13",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":703,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":111,"title":{"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["1.0.17",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["1.1.10",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":677,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.1",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["14.1.1",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2591,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":681,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":691,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":1412,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":2540,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2588,"title":{},"body":{"overview.html":{}}}],["25",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["255",{"_index":910,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["25px",{"_index":673,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":1880,"title":{},"body":{"components/MatchComponent.html":{}}}],["2px",{"_index":697,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.1",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["3.30.19",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["304701",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["33",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":2589,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1749,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.0.0",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1398,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["441313",{"_index":701,"title":{},"body":{"components/AppComponent.html":{}}}],["5.0.2",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":687,"title":{},"body":{"components/AppComponent.html":{}}}],["53",{"_index":2590,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["6000",{"_index":2100,"title":{},"body":{"injectables/NotificationService.html":{}}}],["7.0.0",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["7.2.9",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["89ff00",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["8ch",{"_index":1296,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["9px",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["__schema",{"_index":1594,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["__typename",{"_index":185,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["_currentseason",{"_index":2157,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_subscriptionclient",{"_index":1431,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["a.email.tolowercase",{"_index":2442,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.label.tolowercase",{"_index":2117,"title":{},"body":{"injectables/PitchService.html":{}}}],["a.length",{"_index":1580,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercase",{"_index":2001,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a.number",{"_index":1769,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["a.occurred_at",{"_index":1333,"title":{},"body":{"components/EventsComponent.html":{}}}],["a.state.tolocalelowercase",{"_index":2214,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["a[i",{"_index":1583,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1584,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1911,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["abff00",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["acc.concat(val",{"_index":1575,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["access_time",{"_index":1170,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/MatchComponent.html":{}}}],["access_token",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":812,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["accesstoken",{"_index":805,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["activatedroute",{"_index":2058,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":2341,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_component",{"_index":505,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["add",{"_index":1272,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["addkickoffdatetopitch",{"_index":1885,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":1528,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["addnewteam",{"_index":1694,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamname",{"_index":1697,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addpenaltygql",{"_index":1112,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["addrankingpenalty",{"_index":159,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addrankingpenaltygql",{"_index":151,"title":{"injectables/AddRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addteam",{"_index":1140,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["addteam(hometeam",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addteamtoseason",{"_index":212,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason($season_id",{"_index":348,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(season_id",{"_index":349,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseasongql",{"_index":347,"title":{"injectables/AddTeamToSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addtypename",{"_index":1421,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["adm",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":176,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":431,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["admin.component",{"_index":544,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":418,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":419,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.guard",{"_index":575,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["admincomponent",{"_index":410,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":507,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":524,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":534,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplete",{"_index":995,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["afterwarelink",{"_index":1382,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["alert",{"_index":2104,"title":{},"body":{"injectables/NotificationService.html":{}}}],["alert(`${matchday.id",{"_index":1562,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["aliases",{"_index":2601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_matchdays",{"_index":2005,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_teams",{"_index":2006,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["allpitches",{"_index":251,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasons",{"_index":255,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allseasons.fragment",{"_index":256,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasonsfragment",{"_index":309,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allseasonslist",{"_index":254,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["allseasonslist.allseasons",{"_index":2171,"title":{},"body":{"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{}}}],["allseasonslistgql",{"_index":402,"title":{"injectables/AllSeasonsListGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["allteams",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allteamsgql",{"_index":403,"title":{"injectables/AllTeamsGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentlist",{"_index":257,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["alltournamentlistgql",{"_index":48,"title":{"injectables/AllTournamentListGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentqgl",{"_index":2367,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournaments",{"_index":258,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alltournaments.fragment",{"_index":259,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["alltournamentsfragment",{"_index":310,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alltournamentsgql",{"_index":1729,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["alltournamentsqgl",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["allusers",{"_index":264,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allusersgql",{"_index":407,"title":{"injectables/AllUsersGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["aname",{"_index":2218,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["angular",{"_index":297,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/de",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":2026,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":2030,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":2028,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":2032,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":2024,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":2022,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":520,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":2303,"title":{},"body":{"injectables/TeamService.html":{}}}],["api/graphql",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["apollo",{"_index":296,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["apollo.mutation",{"_index":321,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.query",{"_index":385,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.subscription",{"_index":1597,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["apollolink",{"_index":1364,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollolink((operation",{"_index":1383,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollomodule",{"_index":1349,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["app.component",{"_index":730,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":727,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":432,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodule",{"_index":704,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":714,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":720,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":786,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["appsettings.service",{"_index":1363,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["appsettingsmodel",{"_index":780,"title":{"interfaces/AppsettingsModel.html":{}},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["appsettingsservice",{"_index":596,"title":{"injectables/AppsettingsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/GraphqlService.html":{},"coverage.html":{}}}],["args",{"_index":1423,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["array",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1775,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["astate",{"_index":2213,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["async",{"_index":112,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["auth",{"_index":1402,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticateduser",{"_index":262,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["authentication.service",{"_index":1366,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticationservice",{"_index":513,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":517,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_name",{"_index":2072,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":662,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":663,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":680,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{}}}],["available",{"_index":2586,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1480,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":115,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["b",{"_index":1332,"title":{},"body":{"components/EventsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["b.email.tolowercase",{"_index":2443,"title":{},"body":{"components/UserListComponent.html":{}}}],["b.label.tolowercase",{"_index":2118,"title":{},"body":{"injectables/PitchService.html":{}}}],["b.name.tolowercase",{"_index":2002,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.state.tolocalelowercase",{"_index":2216,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["background",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["base64",{"_index":849,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercase",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercase",{"_index":881,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["based",{"_index":1415,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["basic",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":1406,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["behaviorsubject",{"_index":2174,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":2175,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.23",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["bname",{"_index":2217,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["boolean",{"_index":143,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["boolean(this.accesstoken",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":528,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":685,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":671,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1399,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{}}}],["browse",{"_index":2584,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":728,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["bstate",{"_index":2215,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["button.add_user",{"_index":1221,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.back",{"_index":1046,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.cancel",{"_index":911,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_match",{"_index":912,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{}}}],["button.cancel_result",{"_index":1294,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":668,"title":{},"body":{"components/AppComponent.html":{}}}],["button.close",{"_index":960,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["button.create_pitch",{"_index":1047,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["button.create_tournament",{"_index":1803,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1876,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1875,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_time",{"_index":1877,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":660,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":669,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":1044,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.no",{"_index":947,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["button.ok",{"_index":938,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.save",{"_index":1092,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.send_user_mail",{"_index":1223,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.set_time",{"_index":1312,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":1172,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["button.update_user",{"_index":1222,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.yes",{"_index":948,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["c1",{"_index":2168,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c1.id",{"_index":2183,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2",{"_index":2166,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2.id",{"_index":2184,"title":{},"body":{"injectables/SeasonService.html":{}}}],["cache",{"_index":1361,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["cacheredirects",{"_index":1422,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["calls",{"_index":2302,"title":{},"body":{"injectables/TeamService.html":{}}}],["canactivate",{"_index":510,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":2340,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":435,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["cancel_match",{"_index":906,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancellation_reason",{"_index":270,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelled_at",{"_index":269,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelmatch",{"_index":191,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch($match_id",{"_index":329,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(match_id",{"_index":330,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(reason",{"_index":892,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancelmatchdialogcomponent",{"_index":434,"title":{"components/CancelMatchDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cancelmatchgql",{"_index":328,"title":{"injectables/CancelMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["canload",{"_index":511,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":1517,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["card",{"_index":1878,"title":{},"body":{"components/MatchComponent.html":{}}}],["case",{"_index":1397,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["catch",{"_index":136,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["changedetectorref",{"_index":1014,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":1482,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":1486,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":806,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'name",{"_index":438,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["changepassword(newpassword",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":915,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":916,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordcomponent",{"_index":437,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordqgl",{"_index":819,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changeuserpassword",{"_index":198,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["changeuserpassword(new_password",{"_index":336,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["checknewpitchname",{"_index":1001,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["class",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["cleanup",{"_index":2598,"title":{},"body":{"todo.html":{}}}],["client",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["cluster_adminmodule",{"_index":531,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":532,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":533,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule",{"_index":984,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declarations",{"_index":985,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_imports",{"_index":986,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1336,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":1337,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":1339,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1338,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1346,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1347,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule",{"_index":2013,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declarations",{"_index":2014,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_imports",{"_index":2015,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule",{"_index":2076,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declarations",{"_index":2077,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_imports",{"_index":2078,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2221,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2222,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2224,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2223,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodule",{"_index":2284,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declarations",{"_index":2285,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":2286,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule",{"_index":2347,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declarations",{"_index":2348,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_imports",{"_index":2349,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":2414,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":2415,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":2416,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codacy",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":2530,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["codegen",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["color",{"_index":683,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["command",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":2081,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["component",{"_index":27,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsRoutingModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":430,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["components",{"_index":411,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["components/admin#adminmodule",{"_index":776,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.component",{"_index":613,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodule",{"_index":775,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodule",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodule",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/snackbar/snackbar.component",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{}}}],["components/table#tablemodule",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodule",{"_index":778,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodule",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament/tournament.component",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["conceded_goals",{"_index":292,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":440,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["confirm_tilte",{"_index":945,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmdialog",{"_index":1797,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["confirmdialog.afterclosed().subscribe",{"_index":1799,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["confirmdialogcomponent",{"_index":439,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmdialogcomponentdata",{"_index":942,"title":{"interfaces/ConfirmDialogComponentData.html":{}},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"coverage.html":{}}}],["connect",{"_index":1433,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["connected",{"_index":1432,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.error('iwas",{"_index":1569,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":934,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log",{"_index":1394,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["console.log('connected",{"_index":1459,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(error",{"_index":791,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["console.log(message.data",{"_index":1467,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(penalties",{"_index":2264,"title":{},"body":{"components/TableComponent.html":{}}}],["const",{"_index":302,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"modules/TeamadminRoutingModule.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["constructor",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["constructor(allseasonslistgql",{"_index":2160,"title":{},"body":{"injectables/SeasonService.html":{}}}],["constructor(alltournamentsqgl",{"_index":1144,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["constructor(allusersgql",{"_index":2431,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(apollo",{"_index":1356,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["constructor(authservice",{"_index":512,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(createteamql",{"_index":2298,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(data",{"_index":941,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1728,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":952,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["constructor(formbuilder",{"_index":1003,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(httpclient",{"_index":800,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["constructor(i18service",{"_index":2366,"title":{},"body":{"components/TournamentComponent.html":{}}}],["constructor(latesteventsgql",{"_index":1323,"title":{},"body":{"components/EventsComponent.html":{}}}],["constructor(match",{"_index":890,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(pitch",{"_index":1093,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["constructor(pitchesgql",{"_index":2108,"title":{},"body":{"injectables/PitchService.html":{}}}],["constructor(pitchservice",{"_index":1670,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(private",{"_index":787,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(rankinggql",{"_index":1636,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["constructor(redis",{"_index":1434,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["constructor(router",{"_index":816,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(seasonservice",{"_index":1959,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(snackbar",{"_index":2089,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(submitresultgql",{"_index":1921,"title":{},"body":{"injectables/MatchService.html":{}}}],["constructor(teamservice",{"_index":1177,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(translateservice",{"_index":1484,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservice",{"_index":1055,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["constructor(userqgl",{"_index":2324,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["contact",{"_index":275,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":442,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contact.component",{"_index":2232,"title":{},"body":{"modules/SharedModule.html":{}}}],["contact.component.css",{"_index":950,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.html",{"_index":951,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.ts",{"_index":1070,"title":{},"body":{"components/EditContactComponent.html":{},"coverage.html":{}}}],["contact.component.ts:14",{"_index":1077,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:16",{"_index":1079,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:18",{"_index":1076,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:24",{"_index":1087,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:27",{"_index":1082,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:36",{"_index":1085,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.email",{"_index":975,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_name",{"_index":970,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.fragment",{"_index":276,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["contact.last_name",{"_index":971,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phone",{"_index":973,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.component",{"_index":1849,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["contact/edit",{"_index":1069,"title":{},"body":{"components/EditContactComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["contact_mail",{"_index":974,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_phone",{"_index":972,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactchanged",{"_index":1075,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{}}}],["contactchanged(contact",{"_index":1095,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["contactcomponent",{"_index":441,"title":{"components/ContactComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactcomponentdata",{"_index":953,"title":{"interfaces/ContactComponentData.html":{}},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["contactfragment",{"_index":303,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactlist",{"_index":978,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'name",{"_index":444,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contactlist.component",{"_index":989,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":979,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":980,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcomponent",{"_index":443,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodule",{"_index":983,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodule",{"_index":987,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncomponent",{"_index":445,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts",{"_index":774,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["context",{"_index":834,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["core.module",{"_index":1344,"title":{},"body":{"modules/EventsModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.ts",{"_index":706,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverage",{"_index":2455,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["create",{"_index":448,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["createapollolink",{"_index":1355,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["created_at",{"_index":277,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["createform",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematchesforseason",{"_index":214,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseason(season_id",{"_index":354,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseasongql",{"_index":353,"title":{"injectables/CreateMatchesForSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createnewpitch",{"_index":1002,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"injectables/PitchService.html":{}}}],["createnewpitch(pitch",{"_index":2110,"title":{},"body":{"injectables/PitchService.html":{}}}],["createnewtournament",{"_index":1723,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(name",{"_index":1731,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewuser",{"_index":2429,"title":{},"body":{"components/UserListComponent.html":{}}}],["createpitch",{"_index":206,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createpitchdialogcomponent",{"_index":447,"title":{"components/CreatePitchDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createpitchgql",{"_index":342,"title":{"injectables/CreatePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createround",{"_index":113,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundgql",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createseason",{"_index":210,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason($id",{"_index":345,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(id",{"_index":346,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(seasonname",{"_index":2162,"title":{},"body":{"injectables/SeasonService.html":{}}}],["createseasongql",{"_index":344,"title":{"injectables/CreateSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteam",{"_index":219,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam($id",{"_index":364,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam(id",{"_index":365,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteamgql",{"_index":363,"title":{"injectables/CreateTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteamql",{"_index":2300,"title":{},"body":{"injectables/TeamService.html":{}}}],["createtournament",{"_index":224,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament($id",{"_index":374,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament(id",{"_index":375,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentgql",{"_index":373,"title":{"injectables/CreateTournamentGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createtournamentround",{"_index":225,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentroundgql",{"_index":46,"title":{"injectables/CreateTournamentRoundGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createuser",{"_index":228,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createusergql",{"_index":379,"title":{"injectables/CreateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["currentlang",{"_index":1483,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":2158,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchanged",{"_index":2190,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(event",{"_index":2198,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":708,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d').todate",{"_index":1555,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.name",{"_index":1909,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":2094,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["data.allpitches.sort((a",{"_index":2116,"title":{},"body":{"injectables/PitchService.html":{}}}],["data.allseasons.filter(s",{"_index":2209,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["data.allteams.sort((a",{"_index":2309,"title":{},"body":{"injectables/TeamService.html":{}}}],["data.alltournaments",{"_index":1759,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["data.allusers.sort((a",{"_index":2441,"title":{},"body":{"components/UserListComponent.html":{}}}],["data.dates",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.dates.from",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.dates.to",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.find(x",{"_index":1779,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["data.latestevents.sort((a",{"_index":1331,"title":{},"body":{"components/EventsComponent.html":{}}}],["data.message",{"_index":946,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/SnackbarComponent.html":{}}}],["data.pitch.label",{"_index":959,"title":{},"body":{"components/ContactComponent.html":{}}}],["data.round",{"_index":1164,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["data.season",{"_index":1650,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.match_days.find(x",{"_index":2003,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams",{"_index":1999,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.find(x",{"_index":2004,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.sort((a",{"_index":2000,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.teams",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.title",{"_index":2236,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.tournament",{"_index":2384,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds",{"_index":2385,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds.sort((a",{"_index":2386,"title":{},"body":{"components/TournamentComponent.html":{}}}],["date",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["date(list[0].kickofftime).getutchours",{"_index":1557,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminutes",{"_index":1559,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(r.end_date",{"_index":1784,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["date(r.start_date",{"_index":1783,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["date.setutchours(new",{"_index":1556,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutcminutes(new",{"_index":1558,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.toisostring",{"_index":1560,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1869,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'medium':'':i18service.currentlang",{"_index":1662,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":1315,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1807,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1870,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1881,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'medium\\':\\'\\':i18service.currentlang",{"_index":1664,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":1317,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1809,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1882,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":119,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dateperiod",{"_index":169,"title":{"interfaces/DatePeriod.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["dates",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["datetime",{"_index":37,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeadapter",{"_index":34,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["daysoffset",{"_index":1509,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":1489,"title":{},"body":{"injectables/I18Service.html":{}}}],["declarations",{"_index":527,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":610,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"components/TournamentComponent.html":{}}}],["default",{"_index":155,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["defaultduration",{"_index":2085,"title":{},"body":{"injectables/NotificationService.html":{}}}],["defined",{"_index":165,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["delete",{"_index":1167,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["deletepitch",{"_index":201,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch($pitch_id",{"_index":339,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitch",{"_index":1673,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["deletepitch(pitch_id",{"_index":340,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitchid",{"_index":2112,"title":{},"body":{"injectables/PitchService.html":{}}}],["deletepitchgql",{"_index":338,"title":{"injectables/DeletePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deleteteam",{"_index":223,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteam($team_id",{"_index":371,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteam(team",{"_index":1700,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["deleteteam(team_id",{"_index":372,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteamgql",{"_index":370,"title":{"injectables/DeleteTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deletetournament",{"_index":227,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament($tournament_id",{"_index":377,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament(tournament_id",{"_index":378,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament(tournamentid",{"_index":1733,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["deletetournamentgql",{"_index":376,"title":{"injectables/DeleteTournamentGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deleteuser",{"_index":234,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["deleteuser($user_id",{"_index":382,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteuser(user",{"_index":2434,"title":{},"body":{"components/UserListComponent.html":{}}}],["deleteuser(user_id",{"_index":383,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteusergql",{"_index":381,"title":{"injectables/DeleteUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dependencies",{"_index":526,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":756,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":2292,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":666,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["dialog'},{'name",{"_index":436,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["dialog.component",{"_index":568,"title":{},"body":{"modules/AdminModule.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{}}}],["dialog.component.css",{"_index":888,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.html",{"_index":889,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts",{"_index":887,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:116",{"_index":1183,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":1094,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":891,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1096,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":896,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":895,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1011,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":943,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1189,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1013,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1006,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1185,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":894,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1186,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1179,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":893,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1187,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1009,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1188,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1008,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":1007,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":1182,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":1180,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":1184,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog/cancel",{"_index":886,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/confirm",{"_index":940,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dialog/create",{"_index":994,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/edit",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/UserListComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1654,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1792,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["dialogs",{"_index":2597,"title":{},"body":{"todo.html":{}}}],["directive",{"_index":428,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["directives",{"_index":504,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["display",{"_index":2595,"title":{},"body":{"todo.html":{}}}],["displaypitch",{"_index":1230,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":1236,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":154,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["document.body.appendchild(tag",{"_index":644,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2456,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":179,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dom",{"_index":413,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["draws",{"_index":289,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":2096,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dynamic",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1908,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftime",{"_index":1907,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1906,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["edit_round",{"_index":1163,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":2337,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editcontactcomponent",{"_index":449,"title":{"components/EditContactComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatch.pitch",{"_index":1225,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'name",{"_index":451,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":1226,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":1227,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":1275,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":1276,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.time",{"_index":1298,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'name",{"_index":455,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.time.component.css",{"_index":1299,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":1300,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.component",{"_index":1852,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.result.component",{"_index":1850,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.time.component",{"_index":1851,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatchpitchcomponent",{"_index":450,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":1274,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'name",{"_index":453,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatchresultcomponent",{"_index":452,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecomponent",{"_index":454,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editpitchcontact",{"_index":1669,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontact(pitch",{"_index":1675,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontactdialogcomponent",{"_index":456,"title":{"components/EditPitchContactDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponent",{"_index":457,"title":{"components/EditRankingPenaltyComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponentdata",{"_index":1111,"title":{"interfaces/EditRankingPenaltyComponentData.html":{}},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"coverage.html":{}}}],["editround",{"_index":1724,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["editround(round",{"_index":1735,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["edittournamentroundcomponent",{"_index":66,"title":{"components/EditTournamentRoundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituser",{"_index":2430,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituser(user",{"_index":2436,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituserdialogcomponent",{"_index":460,"title":{"components/EditUserDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":427,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["email",{"_index":193,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["emailformcontrol",{"_index":1071,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitchanges",{"_index":1819,"title":{},"body":{"components/MatchComponent.html":{}}}],["emitcontactchanged",{"_index":1072,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitcontactchanged(firstname",{"_index":1080,"title":{},"body":{"components/EditContactComponent.html":{}}}],["empty",{"_index":1752,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["en",{"_index":1490,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":408,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["end_date",{"_index":239,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":174,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":218,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason($season_id",{"_index":361,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason(season_id",{"_index":362,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseasongql",{"_index":360,"title":{"injectables/EndSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["englisch",{"_index":667,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycomponents",{"_index":541,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enum",{"_index":170,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["enumerations",{"_index":2571,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.persistcache",{"_index":1425,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["err",{"_index":883,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":137,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{},"todo.html":{}}}],["error('empty",{"_index":2314,"title":{},"body":{"injectables/TeamService.html":{}}}],["errorhandler",{"_index":1389,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errorhandler.concat(afterwarelink).concat(auth).concat(http",{"_index":1407,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errors.enter_valid_email",{"_index":1218,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["errors.enter_valid_password",{"_index":935,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["errors.password_token_invalid",{"_index":2074,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pitch_exist",{"_index":1042,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["errors.username_password_wrong",{"_index":937,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["event",{"_index":235,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event($id",{"_index":386,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event(id",{"_index":387,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event.fragment",{"_index":236,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["event.occurred_at",{"_index":1334,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.seasonid",{"_index":1990,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["event.tournamentid",{"_index":2381,"title":{},"body":{"components/TournamentComponent.html":{}}}],["event.type",{"_index":1335,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.value",{"_index":140,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{}}}],["eventemitter",{"_index":1078,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventfragment",{"_index":313,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventgql",{"_index":384,"title":{"injectables/EventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["events",{"_index":559,"title":{},"body":{"modules/AdminModule.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{}}}],["events'},{'name",{"_index":462,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["events.component",{"_index":1343,"title":{},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{}}}],["events.component.css",{"_index":1321,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1322,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":461,"title":{"components/EventsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsgql",{"_index":1437,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["eventsmodule",{"_index":535,"title":{"modules/EventsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsroutingmodule",{"_index":1340,"title":{"modules/EventsRoutingModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["everything",{"_index":2295,"title":{},"body":{"injectables/TeamService.html":{}}}],["example",{"_index":2297,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["exports",{"_index":530,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["extends",{"_index":320,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["f00",{"_index":700,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":649,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["filter_list",{"_index":2007,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteractive",{"_index":1958,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitches",{"_index":1228,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filtermatchdays",{"_index":1955,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatchdays(matchdays",{"_index":1961,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches",{"_index":1956,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches(matches",{"_index":1963,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filterstates",{"_index":2191,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["finale",{"_index":2411,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["first_name",{"_index":203,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["first_name_required",{"_index":1219,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["firstname",{"_index":1083,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["fix",{"_index":2592,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":2011,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["flexlayoutmodule",{"_index":731,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":343,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["forgot_password",{"_index":1631,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuilder",{"_index":1004,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":922,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["formgroup",{"_index":1246,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodule",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["forward",{"_index":1384,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["forward(operation).map(response",{"_index":1385,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["fragment",{"_index":265,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fragmentname",{"_index":1942,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["fragments",{"_index":301,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["full",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":2573,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gamecount",{"_index":1773,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["generator",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["genrounds",{"_index":1725,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["getcachekey",{"_index":1424,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getcurrentlang",{"_index":1494,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteractive",{"_index":1977,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":844,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthenticated",{"_index":842,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmaindefinition",{"_index":1375,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmaindefinition(query",{"_index":1418,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmatchdaylength",{"_index":1904,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getpenaltyforteam",{"_index":2242,"title":{},"body":{"components/TableComponent.html":{}}}],["getpenaltyforteam(penalties",{"_index":2246,"title":{},"body":{"components/TableComponent.html":{}}}],["getranking",{"_index":2243,"title":{},"body":{"components/TableComponent.html":{}}}],["getsubscriptionclient",{"_index":1444,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["getting",{"_index":2576,"title":{"index.html":{},"todo.html":{}},"body":{}}],["getwinner",{"_index":2364,"title":{},"body":{"components/TournamentComponent.html":{}}}],["googelmapsscript",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplete",{"_index":1012,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeelement",{"_index":1021,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["googlemapsapikey",{"_index":782,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["googlemapsjs",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["gql",{"_index":157,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":2585,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":299,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["graphql.module",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":1390,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlerrors.map",{"_index":1392,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlmodule",{"_index":721,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlservice",{"_index":595,"title":{"injectables/GraphqlService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlsubscriptionservice",{"_index":597,"title":{"injectables/GraphqlSubscriptionService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlurl",{"_index":783,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["graphqlwsurl",{"_index":784,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["green",{"_index":679,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":506,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":508,"title":{},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["guest_score",{"_index":184,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team",{"_index":267,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team_id",{"_index":125,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["guestscore",{"_index":1453,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["guestteam",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["halbfinale",{"_index":2410,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerjs",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatches",{"_index":1957,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["headers",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('authorization",{"_index":1405,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('authorization",{"_index":1404,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('x",{"_index":1388,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["height",{"_index":672,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["hermes",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["hi",{"_index":2071,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played",{"_index":1981,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["hide_played_key",{"_index":1980,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_played_matches",{"_index":2008,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplayed",{"_index":1826,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplayed",{"_index":1952,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["home_score",{"_index":183,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team",{"_index":266,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team_id",{"_index":123,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["homescore",{"_index":1452,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["hometeam",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["html",{"_index":426,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["http",{"_index":1352,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["httpclient",{"_index":785,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["httpclientmodule",{"_index":735,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":848,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["httpheaders().set('authorization",{"_index":880,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["httplink",{"_index":1357,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["httplinkmodule",{"_index":1350,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":637,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2581,"title":{},"body":{"index.html":{}}}],["i18n/de",{"_index":1496,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":1497,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18service",{"_index":38,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactory",{"_index":755,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provider",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icons",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":132,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":2594,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":542,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["init",{"_index":788,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/I18Service.html":{}}}],["inject",{"_index":29,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SnackbarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["inject(mat_snack_bar_data",{"_index":1591,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectable",{"_index":150,"title":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":152,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"overview.html":{}}}],["inmemory",{"_index":1362,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":1360,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["input",{"_index":969,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputs",{"_index":966,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputsize",{"_index":1295,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["inset",{"_index":693,"title":{},"body":{"components/AppComponent.html":{}}}],["int",{"_index":164,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ConfirmDialogComponentData.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ConfirmDialogComponentData.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{},"overview.html":{}}}],["introspection",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["introspectionresultdata",{"_index":1592,"title":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipossiblekickoffs",{"_index":1506,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["isadmin",{"_index":814,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isauthenticated",{"_index":813,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isemailvalidorempty",{"_index":1073,"title":{},"body":{"components/EditContactComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1084,"title":{},"body":{"components/EditContactComponent.html":{}}}],["ismatchplayed",{"_index":1919,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1924,"title":{},"body":{"injectables/MatchService.html":{}}}],["isnackbardata",{"_index":1585,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnumber",{"_index":1820,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(val",{"_index":1835,"title":{},"body":{"components/MatchComponent.html":{}}}],["isroundvalid",{"_index":142,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["isteamadmin",{"_index":815,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":807,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isvalidresult",{"_index":1920,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(score",{"_index":1926,"title":{},"body":{"injectables/MatchService.html":{}}}],["iteamcanplayatdate",{"_index":1512,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["j",{"_index":1581,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jquery",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoffs",{"_index":1542,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(message.data.redisevent.payload",{"_index":1472,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["karma",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":1428,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["kickoff",{"_index":188,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["kickoffset",{"_index":1302,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(event",{"_index":1304,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftime",{"_index":1510,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["kind",{"_index":1417,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["konnte",{"_index":1565,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["label",{"_index":207,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/RoundTeam.html":{},"miscellaneous/variables.html":{}}}],["lang_key",{"_index":1498,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":665,"title":{},"body":{"components/AppComponent.html":{}}}],["last_name",{"_index":204,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["last_name_required",{"_index":1220,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["last_updated_at",{"_index":2281,"title":{},"body":{"components/TableComponent.html":{}}}],["lastname",{"_index":1081,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["latestevent",{"_index":237,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latestevent($start_date",{"_index":389,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventgql",{"_index":388,"title":{"injectables/LatestEventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["latestevents",{"_index":240,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["latestevents(start_date",{"_index":390,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventsgql",{"_index":1325,"title":{},"body":{"components/EventsComponent.html":{}}}],["latitude",{"_index":209,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["launcher",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":1409,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["led",{"_index":670,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":425,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["length",{"_index":2037,"title":{},"body":{"modules/MaterialModule.html":{}}}],["libraries=places",{"_index":639,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2578,"title":{},"body":{"index.html":{}}}],["line",{"_index":2036,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":2035,"title":{},"body":{"modules/MaterialModule.html":{}}}],["link",{"_index":1351,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["list",{"_index":503,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["list.component",{"_index":555,"title":{},"body":{"modules/AdminModule.html":{}}}],["list.component.css",{"_index":2427,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":2428,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2426,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":2432,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:28",{"_index":2438,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:34",{"_index":2433,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:38",{"_index":2437,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:45",{"_index":2435,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.filter(x",{"_index":1549,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list/user",{"_index":554,"title":{},"body":{"modules/AdminModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list[0",{"_index":1551,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":1561,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":1553,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["literal",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"components/ManagetournamentComponent.html":{},"miscellaneous/typealiases.html":{}}}],["load/save",{"_index":2294,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadalltournaments",{"_index":1726,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadappsettings",{"_index":792,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["loadappsettingsfactory",{"_index":759,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadappsettingsfactory(provider",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["loadchildren",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["loading",{"_index":2593,"title":{},"body":{"todo.html":{}}}],["loadpenalties",{"_index":1632,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["loaduser",{"_index":808,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localede",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":619,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["localstorage(access_token_key",{"_index":838,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localstorage(hide_played_key",{"_index":1967,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(lang_key",{"_index":1492,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage(manage_tournament_key",{"_index":1745,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["localstorage(selected_matchday_key",{"_index":1973,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_season_key",{"_index":2172,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage(selected_team_key",{"_index":1975,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_tournament_key",{"_index":611,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{}}}],["localstorageservice",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["locatematch",{"_index":189,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch($match_id",{"_index":326,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(match_id",{"_index":327,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(matchid",{"_index":1929,"title":{},"body":{"injectables/MatchService.html":{}}}],["locatematchgql",{"_index":325,"title":{"injectables/LocateMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["locatematchqgl",{"_index":1922,"title":{},"body":{"injectables/MatchService.html":{}}}],["location",{"_index":2131,"title":{},"body":{"components/PitchesComponent.html":{}}}],["location_latitude",{"_index":274,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_longitude",{"_index":273,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_off",{"_index":1265,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":1269,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["locations",{"_index":1393,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["login",{"_index":1605,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":464,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["login.component.css",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":809,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":831,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["logincomponent",{"_index":463,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":832,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":810,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["longitude",{"_index":208,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["losses",{"_index":290,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":1086,"title":{},"body":{"components/EditContactComponent.html":{}}}],["manage",{"_index":466,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manage_season_id_key",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage_season_key",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["manage_tournament_key",{"_index":1753,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managepenaltycomponent",{"_index":465,"title":{"components/ManagePenaltyComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managepitches",{"_index":1666,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches'},{'name",{"_index":468,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managepitches.component.css",{"_index":1667,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches.component.html",{"_index":1668,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches/managepitches.component",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{}}}],["managepitchescomponent",{"_index":467,"title":{"components/ManagepitchesComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":2579,"title":{},"body":{"index.html":{}}}],["manageseason",{"_index":1521,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'name",{"_index":470,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageseason/manage",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/manageseason.component",{"_index":547,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":550,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncomponent",{"_index":469,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageseasonid",{"_index":1635,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["manageteams",{"_index":1691,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams'},{'name",{"_index":472,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageteams.component.css",{"_index":1692,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams.component.html",{"_index":1693,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams/manageteams.component",{"_index":560,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteams/rename",{"_index":556,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteamscomponent",{"_index":471,"title":{"components/ManageteamsComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournament",{"_index":1715,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'name",{"_index":474,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managetournament.component.css",{"_index":1716,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1717,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/edit",{"_index":569,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.component",{"_index":549,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcomponent",{"_index":473,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentid",{"_index":1718,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentroundcount",{"_index":1719,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentrounds",{"_index":1720,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageusers",{"_index":1811,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'name",{"_index":476,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageusers.component.css",{"_index":1812,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1813,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/edit",{"_index":566,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/manageusers.component",{"_index":548,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/user",{"_index":553,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscomponent",{"_index":475,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["map((data",{"_index":1777,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["map((result",{"_index":2258,"title":{},"body":{"components/TableComponent.html":{}}}],["map(({data",{"_index":2308,"title":{},"body":{"injectables/TeamService.html":{}}}],["map(value",{"_index":1253,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(x",{"_index":1257,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["margin",{"_index":676,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["mat_snack_bar_data",{"_index":1588,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":744,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":2041,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":2025,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":2053,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":241,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["match'},{'name",{"_index":478,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["match($id",{"_index":392,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match(id",{"_index":393,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match.cancellation_reason",{"_index":1874,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.cancelled_at",{"_index":1873,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.css",{"_index":1817,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1818,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.fragment",{"_index":242,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["match.guest_score",{"_index":1866,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":2396,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.id).canplay",{"_index":1550,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team.name",{"_index":908,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":2401,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_score",{"_index":1867,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":2395,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.id).canplay",{"_index":1548,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team.name",{"_index":907,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":2403,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":1314,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":1552,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":1268,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1915,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match/match.component",{"_index":2226,"title":{},"body":{"modules/SharedModule.html":{}}}],["match:${matchid",{"_index":1943,"title":{},"body":{"injectables/MatchService.html":{}}}],["match_canceled_at",{"_index":1872,"title":{},"body":{"components/MatchComponent.html":{}}}],["match_day_id",{"_index":216,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match_days",{"_index":278,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["match_id",{"_index":182,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchcomponent",{"_index":477,"title":{"components/MatchComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchday",{"_index":271,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["matchday.end_date",{"_index":1914,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.fragment",{"_index":280,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchday.matches.foreach",{"_index":1543,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.number",{"_index":1912,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_date",{"_index":1913,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchdayfragment",{"_index":307,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchdaylength",{"_index":1525,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdays",{"_index":279,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchdays.filter(x",{"_index":1993,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcher",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":272,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches.filter(x",{"_index":1994,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matches.foreach",{"_index":1576,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchesgql",{"_index":1953,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcheventpayload",{"_index":1450,"title":{"interfaces/MatchEventPayload.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["matchfragment",{"_index":306,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchgql",{"_index":391,"title":{"injectables/MatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchid",{"_index":1451,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/TournamentComponent.html":{}}}],["matching",{"_index":148,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchkickoff",{"_index":1301,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"injectables/MatchService.html":{}}}],["matchkickoff.toisostring",{"_index":1945,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchplan",{"_index":243,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan'},{'name",{"_index":480,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["matchplan($id",{"_index":395,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan.component",{"_index":2018,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1950,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1951,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.season",{"_index":1522,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchplancomponent",{"_index":479,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplangql",{"_index":394,"title":{"injectables/MatchPlanGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchplanmodule",{"_index":2012,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodule",{"_index":2016,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchqgl",{"_index":1438,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["matchschedulingcomponent",{"_index":481,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservc",{"_index":899,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["matchservice",{"_index":1234,"title":{"injectables/MatchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["matchupdated",{"_index":1828,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["matchupdated(matchid",{"_index":2370,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matchviewmodel",{"_index":2399,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matdatepickermodule",{"_index":2045,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["matdialogmodule",{"_index":2038,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":23,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["matdividermodule",{"_index":2029,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["material.module",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodule",{"_index":722,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1771,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1582,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodule",{"_index":2027,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":2040,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":2044,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":2043,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":2046,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":2049,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":2052,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselect",{"_index":1119,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["matselectchange",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodule",{"_index":2031,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":2023,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":2050,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":2051,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{},"components/TableComponent.html":{}}}],["matsnackbarmodule",{"_index":2048,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":2039,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":2042,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":2021,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":2047,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maybe",{"_index":167,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["memberof",{"_index":2312,"title":{},"body":{"injectables/TeamService.html":{}}}],["menu.admin",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contacts",{"_index":657,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.table",{"_index":654,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tournament",{"_index":656,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":944,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/ISnackBarData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["message.data",{"_index":1466,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["message.data.redisevent.type.split",{"_index":1470,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["metadata",{"_index":416,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["methods",{"_index":420,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["miscellaneous",{"_index":2570,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":523,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":525,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1515,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentjs",{"_index":1514,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":1554,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["move",{"_index":898,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["msgtype",{"_index":1469,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["msgtype[0",{"_index":1473,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["mt.end_date",{"_index":1808,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["mt.number",{"_index":1805,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["mt.start_date",{"_index":1806,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["multi",{"_index":757,"title":{},"body":{"modules/AppModule.html":{}}}],["mutation",{"_index":158,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":211,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":180,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["nbsp",{"_index":1168,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/MatchplanComponent.html":{},"components/UserListComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1868,"title":{},"body":{"components/MatchComponent.html":{}}}],["network",{"_index":650,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["networkerror",{"_index":1391,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['status",{"_index":1396,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['statustext",{"_index":1401,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["new_kickoff_time",{"_index":1316,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_name",{"_index":222,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_password",{"_index":197,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_pitch",{"_index":1270,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":1045,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["new_pitch_label",{"_index":1041,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["new_tournament_round",{"_index":1804,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["newelement",{"_index":1529,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch",{"_index":1229,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.value.label",{"_index":1271,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newname",{"_index":2146,"title":{},"body":{"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{}}}],["newpassword",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'name",{"_index":484,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["newpassword.component",{"_index":2082,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":2055,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":2056,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcomponent",{"_index":483,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodule",{"_index":2075,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodule",{"_index":2079,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":996,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchformcontrol",{"_index":997,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchlabelexist",{"_index":998,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplace",{"_index":1019,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplaceformgroup",{"_index":999,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newroundplandatefrom",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newroundplandateto",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newwinner(match",{"_index":2398,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":2034,"title":{},"body":{"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["ng",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":543,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchanges",{"_index":1527,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1566,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":976,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":1266,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1871,"title":{},"body":{"components/MatchComponent.html":{}}}],["no_tournament_rounds_yet",{"_index":2405,"title":{},"body":{"components/TournamentComponent.html":{}}}],["notification.service",{"_index":1378,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["notificationservice",{"_index":53,"title":{"injectables/NotificationService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["notify",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["nswag",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["occurred_at",{"_index":283,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["occurredat",{"_index":1596,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["offset",{"_index":1531,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old_kickoff_time",{"_index":1313,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":1267,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":917,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchanges",{"_index":1513,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":1175,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onchangeteamselect(event",{"_index":1181,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onerror",{"_index":1377,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["oninit",{"_index":28,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["onlangselect",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["only'}).topromise",{"_index":1477,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["onpitchselect",{"_index":1231,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":1240,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclicked",{"_index":1232,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["ontournamentselected",{"_index":1727,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["opencancelmatchdialog",{"_index":1821,"title":{},"body":{"components/MatchComponent.html":{}}}],["openchangepassworddialog",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmodal",{"_index":1822,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditdialog",{"_index":1633,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["openeditdialog(round",{"_index":1741,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openeditdialog(season",{"_index":1641,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["openeditpitchdialog",{"_index":1823,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1824,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1825,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["openpenaltydialog",{"_index":2244,"title":{},"body":{"components/TableComponent.html":{}}}],["openpenaltydialog(penalties",{"_index":2250,"title":{},"body":{"components/TableComponent.html":{}}}],["openrenameteamdialog",{"_index":1695,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["openrenameteamdialog(team",{"_index":1703,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["operation",{"_index":1416,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operation.getcontext",{"_index":1386,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operationdefinition",{"_index":1419,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["optional",{"_index":516,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":539,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1089,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["outputs",{"_index":1074,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2587,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":707,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodule",{"_index":2228,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodule",{"_index":2229,"title":{},"body":{"modules/SharedModule.html":{}}}],["p",{"_index":2208,"title":{},"body":{"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["p.label",{"_index":1036,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["p.length",{"_index":2263,"title":{},"body":{"components/TableComponent.html":{}}}],["p.sort((a",{"_index":2212,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["package",{"_index":2489,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":1790,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/NotificationService.html":{}}}],["param",{"_index":2311,"title":{},"body":{"injectables/TeamService.html":{}}}],["parameters",{"_index":515,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2065,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["params['token",{"_index":2066,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["passt",{"_index":1570,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":229,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["password_forgot_text",{"_index":2073,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_required",{"_index":1630,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordchange",{"_index":196,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchange($new_password",{"_index":335,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchangegql",{"_index":334,"title":{"injectables/PasswordChangeGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["passwordforgot",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordreset",{"_index":192,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordreset($email",{"_index":332,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordresetgql",{"_index":331,"title":{"injectables/PasswordResetGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["path",{"_index":576,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1471,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{}}}],["payload.matchid",{"_index":1475,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["penalties",{"_index":248,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["penalties.filter(t",{"_index":2260,"title":{},"body":{"components/TableComponent.html":{}}}],["penalty",{"_index":293,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["penalty'},{'name",{"_index":458,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["penalty.component",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.css",{"_index":1104,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.html",{"_index":1105,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts",{"_index":1103,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty.component.ts:19",{"_index":1121,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:21",{"_index":1118,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:23",{"_index":1117,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:24",{"_index":1113,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:27",{"_index":1116,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:33",{"_index":1640,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:36",{"_index":1114,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:37",{"_index":1639,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:41",{"_index":1638,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:45",{"_index":1115,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:47",{"_index":1642,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:56",{"_index":1644,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.created_at",{"_index":1661,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.fragment",{"_index":249,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["penalty.id",{"_index":1656,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.points",{"_index":1663,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.reason",{"_index":1660,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.team.name",{"_index":1659,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty/edit",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty/manage",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penaltyfragment",{"_index":314,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["penaltypoints",{"_index":1106,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["penaltyreason",{"_index":1107,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["perm_contact_calendar",{"_index":1689,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{}}}],["persist",{"_index":1369,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["persistcache",{"_index":1368,"title":{},"body":{"injectables/GraphqlService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":664,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'name",{"_index":446,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["person.component",{"_index":2231,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":964,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":965,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts",{"_index":963,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":967,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":968,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":962,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":205,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pitch",{"_index":268,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pitch.fragment",{"_index":252,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["pitch.id",{"_index":1948,"title":{},"body":{"injectables/MatchService.html":{}}}],["pitch.label",{"_index":1101,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["pitch.location_latitude",{"_index":2124,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch.location_longitude",{"_index":2123,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch_contact",{"_index":2132,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":190,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitch_required",{"_index":1043,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitches",{"_index":250,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitches'},{'name",{"_index":486,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["pitches.component.css",{"_index":2126,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":2127,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.find(p",{"_index":1035,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchescomponent",{"_index":485,"title":{"components/PitchesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchesgql",{"_index":399,"title":{"injectables/PitchesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["pitchexist",{"_index":1038,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchfragment",{"_index":305,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pitchid",{"_index":2114,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitchservice",{"_index":1005,"title":{"injectables/PitchService.html":{}},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["place",{"_index":1023,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lat",{"_index":1026,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lng",{"_index":1028,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["places",{"_index":1000,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["plan_date_from",{"_index":1169,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["plan_date_to",{"_index":1171,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["plandatefrom",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["plandateto",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["points",{"_index":163,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["popper.js",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_goals",{"_index":2278,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draws",{"_index":2275,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.losses",{"_index":2276,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.matches",{"_index":2273,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.number",{"_index":2271,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.points",{"_index":2279,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_goals",{"_index":2277,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.team.name",{"_index":2272,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.wins",{"_index":2274,"title":{},"body":{"components/TableComponent.html":{}}}],["positions",{"_index":285,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["possiblekickoffs",{"_index":1523,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":1545,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possibletypes",{"_index":1599,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["preparation",{"_index":172,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["production",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":173,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":793,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["provide",{"_index":712,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["providedin",{"_index":317,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["provider",{"_index":2575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.init",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":529,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["public",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["query",{"_index":128,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["queueing",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["r",{"_index":1778,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["r.matches.map(y",{"_index":1780,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["radius",{"_index":686,"title":{},"body":{"components/AppComponent.html":{}}}],["ranking",{"_index":247,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ranking($id",{"_index":401,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["ranking.fragment",{"_index":253,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["ranking.updated_at",{"_index":2282,"title":{},"body":{"components/TableComponent.html":{}}}],["ranking_penalty_id",{"_index":200,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingfragment",{"_index":315,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rankinggql",{"_index":400,"title":{"injectables/RankingGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rankingpenalty",{"_index":294,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["rankingposition",{"_index":286,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingqgl",{"_index":1436,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/TableComponent.html":{}}}],["reactiveformsmodule",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["reason",{"_index":162,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["reason.value.length",{"_index":909,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["reconnect",{"_index":1410,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["reconnectionattempts",{"_index":1411,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["red",{"_index":699,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["redesign",{"_index":2596,"title":{},"body":{"todo.html":{}}}],["redirectto",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redis",{"_index":1440,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["redisevent",{"_index":1595,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["rediseventgql",{"_index":1435,"title":{"injectables/RedisEventGQL.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{}}}],["refetch",{"_index":1991,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["refetchqueries",{"_index":127,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["refresh",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["registerlocaledata",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":795,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":799,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(new",{"_index":2313,"title":{},"body":{"injectables/TeamService.html":{}}}],["related",{"_index":2296,"title":{},"body":{"injectables/TeamService.html":{}}}],["remove",{"_index":1910,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_eye",{"_index":936,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1886,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":1534,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removepenaltiesgql",{"_index":1637,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty",{"_index":1634,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty(penalty",{"_index":1643,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removerankingpenalty",{"_index":199,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removerankingpenaltygql",{"_index":337,"title":{"injectables/RemoveRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["removeteam",{"_index":1141,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["removeteam(index",{"_index":109,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["removeteamfromseason",{"_index":213,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason($season_id",{"_index":351,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(season_id",{"_index":352,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseasongql",{"_index":350,"title":{"injectables/RemoveTeamFromSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rename",{"_index":488,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["renameteam",{"_index":221,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam($team_id",{"_index":368,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(newname",{"_index":2144,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["renameteam(team_id",{"_index":369,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(teamid",{"_index":2305,"title":{},"body":{"injectables/TeamService.html":{}}}],["renameteamcomponent",{"_index":487,"title":{"components/RenameTeamComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renameteamgql",{"_index":367,"title":{"injectables/RenameTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["require",{"_index":2487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1625,"title":{},"body":{"components/LoginComponent.html":{}}}],["res",{"_index":797,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["reschedulematchday",{"_index":215,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchday(match_day_id",{"_index":356,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchdaygql",{"_index":355,"title":{"injectables/RescheduleMatchDayGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["reset",{"_index":538,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resetpasswordqgl",{"_index":820,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve",{"_index":794,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(res",{"_index":798,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["resolve(result.data.authenticateduser",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve(true",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["response",{"_index":882,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":147,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.data.authenticateduser",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["result.data.season.ranking",{"_index":2259,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.tournament",{"_index":1764,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds",{"_index":1765,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.length",{"_index":1767,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.sort((a",{"_index":1768,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.ts",{"_index":1601,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":149,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":144,"title":{},"body":{"interfaces/AddMatchData.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["returns",{"_index":423,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["rgba(0",{"_index":689,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":702,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":678,"title":{},"body":{"components/AppComponent.html":{}}}],["rimraf",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":230,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":318,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["root'},{'name",{"_index":433,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["round'},{'name",{"_index":459,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round.component",{"_index":570,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagetournamentComponent.html":{}}}],["round.component.html",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["round.component.ts",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["round.component.ts:111",{"_index":1151,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:115",{"_index":1152,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:119",{"_index":1148,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:28",{"_index":1160,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:29",{"_index":1159,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:31",{"_index":1157,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:32",{"_index":1156,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:34",{"_index":1153,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:36",{"_index":1161,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:37",{"_index":1158,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:38",{"_index":1145,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:42",{"_index":1155,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:43",{"_index":1162,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:50",{"_index":1154,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:66",{"_index":1149,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:69",{"_index":1146,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:81",{"_index":1150,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:85",{"_index":1147,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.number",{"_index":2409,"title":{},"body":{"components/TournamentComponent.html":{}}}],["round/edit",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AdminModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["rounds",{"_index":282,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roundteam",{"_index":20,"title":{"interfaces/RoundTeam.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["roundteams",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["router",{"_index":817,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["routermodule",{"_index":574,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":577,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":779,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2342,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routes",{"_index":573,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":545,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":572,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxjs",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["s.state",{"_index":2211,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["save",{"_index":1060,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{}}}],["savecontact",{"_index":2323,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":2327,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematches",{"_index":1571,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["savepenalty",{"_index":1110,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["schedulematch",{"_index":187,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch($match_id",{"_index":323,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(match_id",{"_index":324,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(matchid",{"_index":1931,"title":{},"body":{"injectables/MatchService.html":{}}}],["schedulematches",{"_index":1538,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchgql",{"_index":322,"title":{"injectables/ScheduleMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["scheduling",{"_index":1518,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling'},{'name",{"_index":482,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["scheduling.component",{"_index":552,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":1520,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":1519,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts",{"_index":1508,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:115",{"_index":1895,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:129",{"_index":1897,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:31",{"_index":1889,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1902,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1898,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1900,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1903,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1905,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1888,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1901,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1899,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:48",{"_index":1893,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:60",{"_index":1892,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1891,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1890,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:80",{"_index":1894,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:84",{"_index":1896,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":551,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1928,"title":{},"body":{"injectables/MatchService.html":{}}}],["scored_goals",{"_index":291,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1791,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["season",{"_index":244,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["season(id",{"_index":396,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["season.fragment",{"_index":245,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["season.name",{"_index":2219,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season.service",{"_index":1449,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["season.state",{"_index":2220,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season_id",{"_index":160,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonchanged",{"_index":2192,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser",{"_index":2186,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'name",{"_index":491,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["seasonchooser.component.css",{"_index":2187,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":2188,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser/seasonchooser.component",{"_index":2227,"title":{},"body":{"modules/SharedModule.html":{}}}],["seasonchoosercomponent",{"_index":490,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompare",{"_index":2159,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":2165,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonfragment",{"_index":308,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonid",{"_index":1827,"title":{},"body":{"components/MatchComponent.html":{},"injectables/SeasonService.html":{}}}],["seasonlist",{"_index":2189,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonmatchupdated",{"_index":1917,"title":{},"body":{"injectables/MatchService.html":{}}}],["seasonname",{"_index":2164,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonpenalties",{"_index":246,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties($id",{"_index":398,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties.season",{"_index":1124,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["seasonpenaltiesgql",{"_index":397,"title":{"injectables/SeasonPenaltiesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["seasonservice",{"_index":585,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonstate",{"_index":171,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["seasonstate.ended",{"_index":2195,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonstate.progress",{"_index":2194,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["selected_matchday",{"_index":1983,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_matchday_key",{"_index":1982,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_season",{"_index":2177,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/variables.html":{}}}],["selected_season_key",{"_index":2176,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_team",{"_index":1985,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_team_key",{"_index":1984,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament",{"_index":2377,"title":{},"body":{"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament_key",{"_index":621,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedmatchdayid",{"_index":1954,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1108,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["selector",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["sendpasswordmail",{"_index":811,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sendpasswordmail(email",{"_index":836,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["sendpasswordresetmail",{"_index":195,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendpasswordresetmail(email",{"_index":333,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendusermail",{"_index":1176,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["server",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":2293,"title":{},"body":{"injectables/TeamService.html":{}}}],["services",{"_index":316,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["services/appsettings.service",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/authentication.service",{"_index":521,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/graphql",{"_index":1353,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["services/graphql.service",{"_index":624,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{}}}],["services/i18.service",{"_index":39,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.service",{"_index":1250,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["services/pitch.service",{"_index":1249,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.service",{"_index":1979,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.service",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["set",{"_index":1456,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["set('authorization",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["setcontext",{"_index":1367,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setcontext((_",{"_index":1403,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setplandatefrom",{"_index":1142,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["setplandatefrom(event",{"_index":139,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setplandateto",{"_index":1143,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["setplandateto(event",{"_index":141,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setsubscriptionclient(value",{"_index":1446,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["settournamentround",{"_index":226,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["shadow",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/confirm",{"_index":1682,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["shared/create",{"_index":1681,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/edit",{"_index":1680,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/shared.module",{"_index":546,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["sharedmodule",{"_index":536,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":1233,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["showerrornotification",{"_index":2086,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerrornotification(title",{"_index":2091,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification",{"_index":2087,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification(title",{"_index":2093,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification",{"_index":2088,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification(title",{"_index":2098,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shuffle",{"_index":1887,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1579,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{}}}],["snackbar'},{'name",{"_index":493,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["snackbar.component.css",{"_index":1590,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1589,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.component",{"_index":2230,"title":{},"body":{"modules/SharedModule.html":{}}}],["snackbarcomponent",{"_index":492,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort_index",{"_index":287,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["spacer",{"_index":2010,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["spec\\.ts",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":1564,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":1563,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["split",{"_index":1365,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/.../app.module.ts",{"_index":2574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authentication.service.ts",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.local.ts",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.ts",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":2572,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphqlsubs.ts",{"_index":2602,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../i18.service.ts",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../introspection",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../manageseason.component.ts",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../managetournament.component.ts",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../matchplan.component.ts",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../season.service.ts",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tournament.component.ts",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/graphql",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["src/api/graphql.ts",{"_index":153,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphql.ts:1057",{"_index":2238,"title":{},"body":{"injectables/SubmitResultGQL.html":{}}}],["src/api/graphql.ts:1078",{"_index":2154,"title":{},"body":{"injectables/ScheduleMatchGQL.html":{}}}],["src/api/graphql.ts:1091",{"_index":1603,"title":{},"body":{"injectables/LocateMatchGQL.html":{}}}],["src/api/graphql.ts:1104",{"_index":913,"title":{},"body":{"injectables/CancelMatchGQL.html":{}}}],["src/api/graphql.ts:1117",{"_index":2106,"title":{},"body":{"injectables/PasswordResetGQL.html":{}}}],["src/api/graphql.ts:1130",{"_index":2105,"title":{},"body":{"injectables/PasswordChangeGQL.html":{}}}],["src/api/graphql.ts:1143",{"_index":166,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1168",{"_index":2136,"title":{},"body":{"injectables/RemoveRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1187",{"_index":1064,"title":{},"body":{"injectables/DeletePitchGQL.html":{}}}],["src/api/graphql.ts:1200",{"_index":2421,"title":{},"body":{"injectables/UpdatePitchContactGQL.html":{}}}],["src/api/graphql.ts:1225",{"_index":1048,"title":{},"body":{"injectables/CreatePitchGQL.html":{}}}],["src/api/graphql.ts:1248",{"_index":1049,"title":{},"body":{"injectables/CreateSeasonGQL.html":{}}}],["src/api/graphql.ts:1261",{"_index":409,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{}}}],["src/api/graphql.ts:1274",{"_index":2137,"title":{},"body":{"injectables/RemoveTeamFromSeasonGQL.html":{}}}],["src/api/graphql.ts:1287",{"_index":992,"title":{},"body":{"injectables/CreateMatchesForSeasonGQL.html":{}}}],["src/api/graphql.ts:1303",{"_index":2153,"title":{},"body":{"injectables/RescheduleMatchDayGQL.html":{}}}],["src/api/graphql.ts:1319",{"_index":2237,"title":{},"body":{"injectables/StartSeasonGQL.html":{}}}],["src/api/graphql.ts:1332",{"_index":1318,"title":{},"body":{"injectables/EndSeasonGQL.html":{}}}],["src/api/graphql.ts:1345",{"_index":1050,"title":{},"body":{"injectables/CreateTeamGQL.html":{}}}],["src/api/graphql.ts:1358",{"_index":2422,"title":{},"body":{"injectables/UpdateTeamContactGQL.html":{}}}],["src/api/graphql.ts:1383",{"_index":2152,"title":{},"body":{"injectables/RenameTeamGQL.html":{}}}],["src/api/graphql.ts:1396",{"_index":1065,"title":{},"body":{"injectables/DeleteTeamGQL.html":{}}}],["src/api/graphql.ts:1409",{"_index":1051,"title":{},"body":{"injectables/CreateTournamentGQL.html":{}}}],["src/api/graphql.ts:1422",{"_index":1052,"title":{},"body":{"injectables/CreateTournamentRoundGQL.html":{}}}],["src/api/graphql.ts:1445",{"_index":1066,"title":{},"body":{"injectables/DeleteTournamentGQL.html":{}}}],["src/api/graphql.ts:1458",{"_index":1053,"title":{},"body":{"injectables/CreateUserGQL.html":{}}}],["src/api/graphql.ts:1487",{"_index":2423,"title":{},"body":{"injectables/UpdateUserGQL.html":{}}}],["src/api/graphql.ts:1514",{"_index":1067,"title":{},"body":{"injectables/DeleteUserGQL.html":{}}}],["src/api/graphql.ts:1524",{"_index":1319,"title":{},"body":{"injectables/EventGQL.html":{}}}],["src/api/graphql.ts:1541",{"_index":1602,"title":{},"body":{"injectables/LatestEventGQL.html":{}}}],["src/api/graphql.ts:1555",{"_index":1883,"title":{},"body":{"injectables/MatchGQL.html":{}}}],["src/api/graphql.ts:1572",{"_index":1884,"title":{},"body":{"injectables/MatchPlanGQL.html":{}}}],["src/api/graphql.ts:1589",{"_index":2155,"title":{},"body":{"injectables/SeasonPenaltiesGQL.html":{}}}],["src/api/graphql.ts:1612",{"_index":2133,"title":{},"body":{"injectables/PitchesGQL.html":{}}}],["src/api/graphql.ts:1626",{"_index":2134,"title":{},"body":{"injectables/RankingGQL.html":{}}}],["src/api/graphql.ts:1643",{"_index":578,"title":{},"body":{"injectables/AllSeasonsListGQL.html":{}}}],["src/api/graphql.ts:1660",{"_index":579,"title":{},"body":{"injectables/AllTeamsGQL.html":{}}}],["src/api/graphql.ts:1677",{"_index":580,"title":{},"body":{"injectables/AllTournamentListGQL.html":{}}}],["src/api/graphql.ts:1694",{"_index":2412,"title":{},"body":{"injectables/TournamentGQL.html":{}}}],["src/api/graphql.ts:1708",{"_index":2424,"title":{},"body":{"injectables/UserGQL.html":{}}}],["src/api/graphql.ts:1725",{"_index":581,"title":{},"body":{"injectables/AllUsersGQL.html":{}}}],["src/api/graphqlsubs",{"_index":1448,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["src/api/graphqlsubs.ts",{"_index":1593,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphqlsubs.ts:52",{"_index":2135,"title":{},"body":{"injectables/RedisEventGQL.html":{}}}],["src/api/introspection",{"_index":1600,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":705,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["src/app/app.component.ts",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:24",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":723,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/admin/admin",{"_index":571,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":415,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":422,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":421,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.ts",{"_index":509,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":518,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":519,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":514,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.ts",{"_index":540,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/events/events",{"_index":1345,"title":{},"body":{"modules/EventsRoutingModule.html":{}}}],["src/app/components/admin/events/events.component.ts",{"_index":1320,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/events/events.component.ts:15",{"_index":1324,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:19",{"_index":1327,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:22",{"_index":1326,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.module.ts",{"_index":1341,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts",{"_index":1665,"title":{},"body":{"components/ManagepitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:18",{"_index":1671,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:21",{"_index":1678,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:27",{"_index":1677,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:31",{"_index":1674,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:50",{"_index":1672,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:54",{"_index":1676,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/manageseason/manage",{"_index":1102,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts",{"_index":2469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":1507,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts",{"_index":1690,"title":{},"body":{"components/ManageteamsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:15",{"_index":1696,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:18",{"_index":1706,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:19",{"_index":1705,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:26",{"_index":1702,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:29",{"_index":1698,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:38",{"_index":1701,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:55",{"_index":1704,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/rename",{"_index":2138,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/edit",{"_index":6,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts",{"_index":1714,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:128",{"_index":1742,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:140",{"_index":1734,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:22",{"_index":1751,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:24",{"_index":1746,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:25",{"_index":1747,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:26",{"_index":1750,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:27",{"_index":1748,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:28",{"_index":1730,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1743,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:38",{"_index":1744,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:41",{"_index":1739,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:48",{"_index":1738,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:54",{"_index":1732,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:66",{"_index":1740,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:85",{"_index":1737,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:96",{"_index":1736,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/edit",{"_index":1173,"title":{},"body":{"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts",{"_index":1810,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:14",{"_index":1815,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:8",{"_index":1814,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/user",{"_index":2425,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts",{"_index":914,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":923,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":924,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":918,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":921,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":920,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":919,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":991,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.ts",{"_index":977,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":982,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":981,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.ts",{"_index":988,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts",{"_index":2125,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":2130,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:15",{"_index":2129,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:9",{"_index":2128,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts",{"_index":2354,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":2359,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:15",{"_index":2358,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:9",{"_index":2357,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1604,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":1618,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1617,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":1616,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":2019,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.ts",{"_index":1949,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:21",{"_index":1970,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:23",{"_index":1968,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:25",{"_index":1974,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:27",{"_index":1976,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:29",{"_index":1978,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:31",{"_index":1960,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:34",{"_index":1972,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:35",{"_index":1969,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:36",{"_index":1971,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:41",{"_index":1966,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:52",{"_index":1962,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:58",{"_index":1964,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:66",{"_index":1965,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.ts",{"_index":2017,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":2083,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.ts",{"_index":2054,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:15",{"_index":2063,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:16",{"_index":2059,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:19",{"_index":2062,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:30",{"_index":2060,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:46",{"_index":2061,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.ts",{"_index":2080,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/cancel",{"_index":885,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/confirm",{"_index":939,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ManagePenaltyComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact",{"_index":961,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts",{"_index":949,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:14",{"_index":954,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:17",{"_index":957,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":956,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":955,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/create",{"_index":993,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1068,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts",{"_index":1224,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:18",{"_index":1245,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":1235,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:22",{"_index":1244,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:30",{"_index":1239,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:42",{"_index":1237,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":1241,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:50",{"_index":1242,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:59",{"_index":1243,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts",{"_index":1273,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:15",{"_index":1280,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:16",{"_index":1277,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:19",{"_index":1281,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:22",{"_index":1282,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:23",{"_index":1283,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:29",{"_index":1278,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:33",{"_index":1279,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts",{"_index":1297,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":1303,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":1309,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":1308,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":1306,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":1305,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":1307,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.ts",{"_index":1816,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:101",{"_index":1838,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:114",{"_index":1836,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:22",{"_index":1832,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1833,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1831,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1830,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:27",{"_index":1829,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1844,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1843,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1845,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1847,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1846,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:35",{"_index":1848,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:38",{"_index":1837,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:41",{"_index":1841,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:53",{"_index":1834,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:62",{"_index":1840,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:75",{"_index":1842,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:88",{"_index":1839,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts",{"_index":2185,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":2196,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:15",{"_index":2201,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":2202,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:17",{"_index":2197,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:19",{"_index":2193,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:22",{"_index":2203,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:26",{"_index":2200,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:61",{"_index":2199,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/shared.module",{"_index":1342,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/shared/shared.module.ts",{"_index":2225,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts",{"_index":1586,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:13",{"_index":2233,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:16",{"_index":2235,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:21",{"_index":2234,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/table",{"_index":2290,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.ts",{"_index":2239,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:18",{"_index":2245,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:21",{"_index":2253,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:22",{"_index":2252,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":2254,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:29",{"_index":2249,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:40",{"_index":2248,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:46",{"_index":2247,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:51",{"_index":2251,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.ts",{"_index":2288,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":2353,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts",{"_index":2320,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:15",{"_index":2325,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:20",{"_index":2330,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":2329,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":2331,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:26",{"_index":2326,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:29",{"_index":2328,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts",{"_index":2338,"title":{},"body":{"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":2344,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":2343,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":2339,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.ts",{"_index":2351,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tournament",{"_index":2420,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.ts",{"_index":2361,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":2376,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:19",{"_index":2375,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:21",{"_index":2368,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:24",{"_index":2374,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":2372,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:46",{"_index":2371,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:49",{"_index":2373,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:75",{"_index":2369,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.ts",{"_index":2418,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/graphql.module.ts",{"_index":1348,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/app/material.module.ts",{"_index":2020,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/appsettings.service.ts",{"_index":781,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["src/app/services/appsettings.service.ts:15",{"_index":801,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:19",{"_index":802,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:27",{"_index":803,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/authentication.service",{"_index":1191,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["src/app/services/authentication.service.ts",{"_index":804,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:119",{"_index":837,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:21",{"_index":841,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":839,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":843,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:27",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":833,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":830,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:78",{"_index":835,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:84",{"_index":845,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:88",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":828,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":825,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/graphql",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts",{"_index":1354,"title":{},"body":{"injectables/GraphqlService.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts:23",{"_index":1358,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/graphql.service.ts:36",{"_index":1359,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/i18.service",{"_index":1328,"title":{},"body":{"components/EventsComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["src/app/services/i18.service.ts",{"_index":1479,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/i18.service.ts:14",{"_index":1491,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:16",{"_index":1493,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:18",{"_index":1495,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":1485,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:25",{"_index":1488,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:37",{"_index":1487,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":709,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts",{"_index":1054,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":1056,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service",{"_index":1516,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["src/app/services/match.service.ts",{"_index":1916,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:10",{"_index":1936,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:11",{"_index":1923,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:112",{"_index":1930,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1925,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:23",{"_index":1927,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1934,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:68",{"_index":1932,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/notification.service",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["src/app/services/notification.service.ts",{"_index":2084,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/services/notification.service.ts:10",{"_index":2090,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:16",{"_index":2099,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:20",{"_index":2092,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:24",{"_index":2097,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/pitch.service",{"_index":1015,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["src/app/services/pitch.service.ts",{"_index":2107,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:12",{"_index":2119,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:14",{"_index":2109,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:23",{"_index":2113,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:45",{"_index":2111,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service",{"_index":618,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{}}}],["src/app/services/season.service.ts",{"_index":2156,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/season.service.ts:14",{"_index":2173,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:16",{"_index":2161,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:32",{"_index":2163,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:57",{"_index":2170,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:81",{"_index":2167,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.service",{"_index":1190,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/TeamsComponent.html":{}}}],["src/app/services/team.service.ts",{"_index":2291,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:102",{"_index":2304,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:17",{"_index":2310,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:19",{"_index":2299,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:35",{"_index":2301,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:61",{"_index":2306,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/environments/environment",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["src/environments/environment.app.local.ts",{"_index":2482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.ts",{"_index":2483,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":295,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["start_date",{"_index":238,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2577,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1770,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":1524,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startseason",{"_index":217,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason($id",{"_index":358,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(season_id",{"_index":359,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(seasonid",{"_index":2169,"title":{},"body":{"injectables/SeasonService.html":{}}}],["startseasongql",{"_index":357,"title":{"injectables/StartSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["startteamcount",{"_index":1721,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":1247,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":281,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":1426,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["store",{"_index":620,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["store.readfragment",{"_index":1941,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["store.writefragment",{"_index":1944,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["storedlang",{"_index":1481,"title":{},"body":{"injectables/I18Service.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":412,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":417,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["subject",{"_index":1935,"title":{},"body":{"injectables/MatchService.html":{},"dependencies.html":{}}}],["submit",{"_index":2057,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":186,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitmatchresult(matchid",{"_index":1933,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitresult",{"_index":181,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitresultgql",{"_index":319,"title":{"injectables/SubmitResultGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["subscribe",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{}}}],["subscription",{"_index":1420,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.service",{"_index":617,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{}}}],["subscription.service.ts",{"_index":1430,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["subscription.service.ts:19",{"_index":1443,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:21",{"_index":1442,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:22",{"_index":1445,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:25",{"_index":1447,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:59",{"_index":1439,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:71",{"_index":1441,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient",{"_index":1370,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptionclient(value",{"_index":1457,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptions",{"_index":1371,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["success",{"_index":2095,"title":{},"body":{"injectables/NotificationService.html":{}}}],["super",{"_index":1058,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2582,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2583,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1395,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["switchmapto",{"_index":1248,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["switchmapto(this.pitchservice.allpitches",{"_index":1256,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["t",{"_index":168,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["t.dates",{"_index":1788,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["t.guestteam.id",{"_index":126,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.hometeam.id",{"_index":124,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.id",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["t.team.id",{"_index":2261,"title":{},"body":{"components/TableComponent.html":{}}}],["t.teams",{"_index":1787,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["table",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":495,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["table.component",{"_index":2289,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":2241,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":2240,"title":{},"body":{"components/TableComponent.html":{}}}],["table.games",{"_index":2267,"title":{},"body":{"components/TableComponent.html":{}}}],["table.place",{"_index":2265,"title":{},"body":{"components/TableComponent.html":{}}}],["table.points",{"_index":2270,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":2266,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tore",{"_index":2269,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":2268,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":494,"title":{"components/TableComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":2283,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodule",{"_index":2287,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":300,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tag.id",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.type",{"_index":640,"title":{},"body":{"components/AppComponent.html":{}}}],["target_path",{"_index":194,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team",{"_index":45,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team'},{'name",{"_index":489,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["team.component",{"_index":558,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{}}}],["team.component.css",{"_index":2140,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.html",{"_index":2141,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts",{"_index":2139,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team.component.ts:13",{"_index":2142,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:16",{"_index":2147,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:20",{"_index":2148,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:23",{"_index":2143,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:27",{"_index":2145,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.fragment",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["team.id",{"_index":2262,"title":{},"body":{"components/TableComponent.html":{},"injectables/TeamService.html":{}}}],["team.name",{"_index":958,"title":{},"body":{"components/ContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["team/rename",{"_index":557,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team:${teamid",{"_index":2318,"title":{},"body":{"injectables/TeamService.html":{}}}],["team_contact",{"_index":2360,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_id",{"_index":161,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_id_pairs",{"_index":121,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_ids",{"_index":231,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_manager",{"_index":178,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamadmin",{"_index":777,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'name",{"_index":497,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teamadmin.component",{"_index":2352,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":2321,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":2322,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincomponent",{"_index":496,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":761,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["teamadminmodule",{"_index":2346,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodule",{"_index":2350,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamfragment",{"_index":304,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamid",{"_index":829,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamidpair",{"_index":47,"title":{"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teammanager",{"_index":177,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamname",{"_index":1699,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teams'},{'name",{"_index":499,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teams.component.css",{"_index":2355,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":2356,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.subscribe",{"_index":1785,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["teams/teams.component",{"_index":990,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscanplay",{"_index":1511,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscomponent",{"_index":498,"title":{"components/TeamsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamselect",{"_index":1109,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["teamservice",{"_index":32,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["template",{"_index":298,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["templateref",{"_index":1679,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["templateurl",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["terminiert",{"_index":1567,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["testing",{"_index":2599,"title":{},"body":{"todo.html":{}}}],["text",{"_index":1879,"title":{},"body":{"components/MatchComponent.html":{}}}],["text/javascript",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["thing",{"_index":1684,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this._currentseason",{"_index":2179,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this._subscriptionclient",{"_index":1455,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":2064,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.addpenaltygql.mutate",{"_index":1133,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.allseasonslistgql.document",{"_index":2181,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allseasonslistgql.watch().valuechanges.pipe",{"_index":2207,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.allteamsgql.document",{"_index":2316,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.allteamsgql.watch().valuechanges.pipe",{"_index":2307,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.alltournamentqgl.watch().valuechanges.pipe",{"_index":2378,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.alltournamentsgql.document",{"_index":1761,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.alltournamentsgql.watch().valuechanges.pipe",{"_index":1758,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.alltournamentsqgl.document",{"_index":129,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.allusers",{"_index":2439,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.document",{"_index":2448,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.watch().valuechanges.pipe",{"_index":2440,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.apollo.create",{"_index":1429,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettings",{"_index":789,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.appsettingsservice.appsettings.googlemapsapikey",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appsettingsservice.appsettings.graphqlurl",{"_index":1381,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettingsservice.appsettings.graphqlwsurl",{"_index":626,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["this.authenticationservice.loginasync(this.loginform.value",{"_index":1622,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.sendpasswordmail(email",{"_index":1627,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.loginform.value.password",{"_index":2068,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.newpassword.value",{"_index":930,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":522,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":2345,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loaduser",{"_index":629,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":933,"title":{},"body":{"components/ChangepasswordComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.sendpasswordmail(this.email.value.tolowercase",{"_index":1215,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.authservice.user",{"_index":2332,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":1063,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cancelmatchgql.mutate",{"_index":900,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.changelang(this.storedlang",{"_index":1504,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.changepasswordqgl.mutate",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.connected",{"_index":1460,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.contactchanged.emit",{"_index":1090,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.createform",{"_index":1619,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createpitchgql.mutate",{"_index":2122,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.createroundgql.mutate",{"_index":116,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.createseasongql.mutate",{"_index":2180,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.createteamql.mutate",{"_index":2315,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.createtournament.mutate",{"_index":1760,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createusergql.mutate",{"_index":1203,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.currentseason.subscribe",{"_index":2178,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.penalty",{"_index":1125,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.id",{"_index":1134,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.points",{"_index":1129,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.reason",{"_index":1131,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.team.id",{"_index":1127,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.round",{"_index":120,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.data.season.id",{"_index":1135,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.tournamentid",{"_index":118,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.defaultduration",{"_index":2103,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.deletepitchgql.mutate",{"_index":2120,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.deleteteamgql.mutate",{"_index":2319,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.deletetournamentgql.mutate",{"_index":1800,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.deleteusergql.mutate",{"_index":2446,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(cancelmatchdialogcomponent",{"_index":1865,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(changepasswordcomponent",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1652,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this.dialog.open(contactcomponent",{"_index":1862,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(createpitchdialogcomponent",{"_index":1264,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editmatchpitchcomponent",{"_index":1860,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcomponent",{"_index":1853,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecomponent",{"_index":1861,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editpitchcontactdialogcomponent",{"_index":1688,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editrankingpenaltycomponent",{"_index":1651,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.dialog.open(edittournamentroundcomponent",{"_index":1789,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.dialog.open(edituserdialogcomponent",{"_index":2444,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(logincomponent",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(renameteamcomponent",{"_index":1713,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.dialogref.close",{"_index":904,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{}}}],["this.dialogref.close(true",{"_index":135,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.email",{"_index":1193,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.setvalue(this.user.email",{"_index":1197,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.value.tolowercase",{"_index":1204,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1091,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.emitchanges",{"_index":1855,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.error",{"_index":1621,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.eventsgql.fetch(null",{"_index":1468,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.filteredpitches",{"_index":1251,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterstates.some(x",{"_index":2210,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.firstname",{"_index":1194,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.setvalue(this.user.first_name",{"_index":1198,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.value",{"_index":1206,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.formbuilder.group",{"_index":1018,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getranking",{"_index":2255,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getround(m.match_day_id).number",{"_index":2387,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinner",{"_index":2390,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.graphqlservice.createapollolink",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.connect",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.subscriptionclient",{"_index":1408,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.guest.value",{"_index":108,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.guest_score",{"_index":1286,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.handlegetmatches",{"_index":1987,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplayed",{"_index":1986,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home.value",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.home_score",{"_index":1284,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.httpclient.get('./appsettings.json",{"_index":796,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.httplink.create",{"_index":1379,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.i18service.changelang(lang",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isteamadmin",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_score",{"_index":1938,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.isvalidresult(match.home_score",{"_index":1937,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.lastname",{"_index":1195,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.setvalue(this.user.last_name",{"_index":1199,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.value",{"_index":1207,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.latestevents",{"_index":1329,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.latesteventsgql.watch().valuechanges.pipe",{"_index":1330,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadalltournaments",{"_index":1754,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadappsettings",{"_index":790,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.loadgooglemapsscript",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1793,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpenalties",{"_index":1645,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.localstorageservice.remove(access_token_key",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.locatematchqgl.mutate",{"_index":1947,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.loginform",{"_index":1620,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls.password.disable",{"_index":1628,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.seterrors",{"_index":1626,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.setvalue",{"_index":1623,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.seterrors",{"_index":1624,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.manageseason.match_days.filter",{"_index":1539,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days.map(x",{"_index":1572,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days[0].matches.length",{"_index":1526,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.teams.map(x",{"_index":1532,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseasonid",{"_index":1648,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.managetournamentid",{"_index":1755,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentroundcount",{"_index":1766,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds",{"_index":1762,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds.pipe",{"_index":1776,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1854,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.guest_score",{"_index":1287,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team",{"_index":1864,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_score",{"_index":1285,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team",{"_index":1863,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":901,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":1262,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.matches",{"_index":2388,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches.reverse",{"_index":2389,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":2392,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":2393,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesgql",{"_index":1997,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchkickoff",{"_index":1310,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchplangql.document",{"_index":902,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.matchplangql.fetch",{"_index":651,"title":{},"body":{"components/AppComponent.html":{}}}],["this.matchplangql.fetch({id",{"_index":1476,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchplangql.watch",{"_index":1998,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchqgl.fetch",{"_index":1474,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchservice.isvalidresult(this.guest_score",{"_index":1289,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_score",{"_index":1288,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.locatematch(match.id",{"_index":1577,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.locatematch(this.match.id",{"_index":1263,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchservice.schedulematch(match.id",{"_index":1578,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.schedulematch(this.match.id",{"_index":1311,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.seasonmatchupdated.next",{"_index":1858,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.seasonmatchupdated.subscribe",{"_index":1988,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":1290,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.tournamentmatchupdated.next",{"_index":1857,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.tournamentmatchupdated.subscribe",{"_index":2380,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchupdated(event.matchid",{"_index":2382,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchupdated.emit(this.match.id",{"_index":1856,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.value",{"_index":1258,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.valuechanges.pipe",{"_index":1252,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":926,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch",{"_index":1030,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_latitude",{"_index":1025,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_longitude",{"_index":1027,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol",{"_index":1016,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors",{"_index":1037,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors(null",{"_index":1039,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalidity",{"_index":1040,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.value",{"_index":1031,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":1017,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newroundplandatefrom",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.newroundplandateto",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('cancel_match_error",{"_index":905,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_pitch_error",{"_index":1033,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_team_error",{"_index":1709,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_tournament__round_error",{"_index":138,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_user_error",{"_index":1210,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_pitch_error",{"_index":1687,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_team_error",{"_index":1712,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_tournament_error",{"_index":1802,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_user_error",{"_index":2450,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('edit_result_error",{"_index":1292,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('enter_valid_result",{"_index":1293,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('password_changed_error",{"_index":2070,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('penalty_error",{"_index":1139,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('remove_penalty_error",{"_index":1658,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('rename_team_error",{"_index":2151,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('send_new_password_mail_error",{"_index":1217,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('team_contact_save_error",{"_index":2336,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('update_user_error",{"_index":1214,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translationservice.instant('unknown_network_error",{"_index":1400,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('cancel_match_success",{"_index":903,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_pitch_success",{"_index":1032,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_team_success",{"_index":1708,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_tournament_round_success",{"_index":134,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_user_success",{"_index":1209,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_pitch_sucess",{"_index":1686,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_team_success",{"_index":1711,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_tournament_success",{"_index":1801,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_user_success",{"_index":2449,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('edit_result_success",{"_index":1291,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('password_changed_success",{"_index":2069,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('penalty_saved",{"_index":1138,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_error",{"_index":1100,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_success",{"_index":1099,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('remove_penalty_success",{"_index":1657,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('rename_team_success",{"_index":2150,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('send_new_password_mail_success",{"_index":1216,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('team_contact_save_success",{"_index":2335,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('update_user_success",{"_index":1213,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.oldpassword",{"_index":929,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpassword.value",{"_index":931,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":932,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.ontournamentselected",{"_index":1756,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.openeditdialog(round",{"_index":1786,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.password",{"_index":1196,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.password.value",{"_index":1205,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.penalties",{"_index":1646,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.penaltypoints",{"_index":1128,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.penaltyreason",{"_index":1130,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.pitch.id",{"_index":1098,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.pitchesgql.document",{"_index":2121,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchesgql.watch().valuechanges.pipe",{"_index":2115,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.allpitches.subscribe",{"_index":1034,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.createnewpitch",{"_index":1029,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.deletepitch(pitch.id",{"_index":1685,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.places",{"_index":1020,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.addlistener('place_changed",{"_index":1022,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.getplace",{"_index":1024,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.possiblekickoffs",{"_index":1535,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":1536,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":1530,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newelement",{"_index":1533,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.ranking.fetch",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranking.watch",{"_index":2256,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankinggql.document",{"_index":1137,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["this.rankinggql.watch",{"_index":1989,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.rankingqgl",{"_index":2257,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankingqgl.fetch({id",{"_index":1478,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.redis.subscribe().subscribe",{"_index":1465,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.removepenaltiesgql.mutate",{"_index":1655,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.renameteamgql.mutate",{"_index":2317,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.resetpasswordqgl.mutate",{"_index":884,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.rounds",{"_index":1772,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1774,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.roundteams",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.length",{"_index":145,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.map((t",{"_index":122,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.push",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.splice(index",{"_index":110,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.router.navigatebyurl",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.schedulematchgql.mutate",{"_index":1946,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.season",{"_index":2205,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonid",{"_index":1859,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.seasonlist",{"_index":2206,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonpenaltiesgql.document",{"_index":1136,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["this.seasonpenaltiesgql.watch",{"_index":1647,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.seasonservice.currentseason.getvalue",{"_index":646,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id",{"_index":648,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.subscribe",{"_index":2204,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchdayid",{"_index":1992,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1126,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["this.setbtnlabel",{"_index":1061,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.shownotification(title",{"_index":2101,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.shuffle(possiblekickoffs",{"_index":1544,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":2102,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.startmatchday).foreach",{"_index":1541,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.startseasongql.mutate",{"_index":2182,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.storedlang",{"_index":1502,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.submitresultgql.mutate",{"_index":1939,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.subscriptionclient.onconnected",{"_index":1458,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onconnecting",{"_index":1461,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onerror",{"_index":1462,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnected",{"_index":1463,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnecting",{"_index":1464,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.teamselect.setdisabledstate(true",{"_index":1132,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.teamservice.addnewteam(teamname",{"_index":1707,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.teamservice.deleteteam(team",{"_index":1710,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.teamservice.renameteam(this.team.id",{"_index":2149,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.token",{"_index":2067,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tournament",{"_index":2383,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentchanged",{"_index":2379,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentgql.fetch",{"_index":653,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tournamentid",{"_index":652,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentqgl.document",{"_index":130,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.tournamentqgl.watch",{"_index":1763,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments",{"_index":1757,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments.subscribe",{"_index":1794,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1499,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":1503,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('confirm_delete",{"_index":1683,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this.translateservice.instant('confirm_delete_penalty",{"_index":1653,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.translateservice.onlangchange.subscribe",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.translateservice.settranslation('de",{"_index":1500,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":1501,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":1505,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscribe",{"_index":1062,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscribe",{"_index":1059,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.updatepitchcontactgql.mutate",{"_index":1097,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.updateteamcontact.mutate",{"_index":2333,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.updateusergql.mutate",{"_index":1211,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.id",{"_index":1212,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user.role",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.map(t",{"_index":1202,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userqgl.document",{"_index":2334,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.userqgl.fetch",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.fetch().subscribe",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userrole",{"_index":1200,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.usersgql.document",{"_index":1208,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userteamlist",{"_index":1201,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.winnerlastround",{"_index":2391,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":2400,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":2404,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_score",{"_index":2394,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":2402,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":2397,"title":{},"body":{"components/TournamentComponent.html":{}}}],["title",{"_index":1587,"title":{},"body":{"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{}}}],["todo",{"_index":897,"title":{"todo.html":{}},"body":{"components/CancelMatchDialogComponent.html":{}}}],["token",{"_index":1387,"title":{},"body":{"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["topromise",{"_index":133,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["tournament",{"_index":7,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tournament'},{'name",{"_index":501,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["tournament($id",{"_index":404,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament(id",{"_index":405,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament.component",{"_index":2419,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":2363,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":2362,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.fragment",{"_index":260,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["tournament.name",{"_index":1798,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament_id",{"_index":117,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournamentchanged",{"_index":2365,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcomponent",{"_index":500,"title":{"components/TournamentComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentfragment",{"_index":311,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentgql",{"_index":49,"title":{"injectables/TournamentGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["tournamentid",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentmatchupdated",{"_index":1918,"title":{},"body":{"injectables/MatchService.html":{}}}],["tournamentmodule",{"_index":2413,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentqgl",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentroutingmodule",{"_index":2417,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":1722,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournaments.find(x",{"_index":1795,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["translate",{"_index":661,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["translate/core",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":2009,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodule",{"_index":710,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":711,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":40,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["translationservice",{"_index":1057,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"injectables/GraphqlService.html":{}}}],["transport",{"_index":1372,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["tree",{"_index":414,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":114,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["tslint:disable",{"_index":2033,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tupel.guestteam.name",{"_index":1166,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["tupel.hometeam.name",{"_index":1165,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2600,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1254,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{}}}],["types",{"_index":1598,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["types/googlemaps",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2580,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":1238,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["update",{"_index":1940,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["updated_at",{"_index":284,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["updatepitchcontact",{"_index":202,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updatepitchcontactgql",{"_index":341,"title":{"injectables/UpdatePitchContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateteamcontact",{"_index":220,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontactgql",{"_index":366,"title":{"injectables/UpdateTeamContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateuser",{"_index":232,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateusergql",{"_index":380,"title":{"injectables/UpdateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["uri",{"_index":1380,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["useclass",{"_index":713,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["useexisting",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["usefactory",{"_index":754,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":261,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.authenticateduser",{"_index":840,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["user.email",{"_index":2445,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.first_name",{"_index":2452,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.fragment",{"_index":263,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["user.id",{"_index":2447,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.last_name",{"_index":2453,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":2454,"title":{},"body":{"components/UserListComponent.html":{}}}],["user_id",{"_index":233,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["user_role",{"_index":2451,"title":{},"body":{"components/UserListComponent.html":{}}}],["userfragment",{"_index":312,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergql",{"_index":406,"title":{"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["userid",{"_index":1454,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["userlistcomponent",{"_index":502,"title":{"components/UserListComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/UserListComponent.html":{}}}],["username_required",{"_index":1629,"title":{},"body":{"components/LoginComponent.html":{}}}],["userqgl",{"_index":818,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/TeamadminComponent.html":{}}}],["userrole",{"_index":175,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["userrole.teammanager",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["usersgql",{"_index":1178,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["userteamlist",{"_index":1174,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["utilities",{"_index":1376,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["uuid",{"_index":1192,"title":{},"body":{"components/EditUserDialogComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":1123,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["uuidv4",{"_index":1122,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{}}}],["val",{"_index":1574,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["validators",{"_index":925,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["validators.email",{"_index":1088,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.minlength(6",{"_index":928,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.required",{"_index":927,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["value",{"_index":156,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":1255,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["valuechanges.pipe",{"_index":1649,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["var",{"_index":429,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["variable",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":131,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["viertelfinale",{"_index":2408,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('adressautocomplete",{"_index":1010,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["viewchild('guest",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('home",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('plandatefrom",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('plandateto",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('teamselect",{"_index":1120,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["void",{"_index":424,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["warning",{"_index":2280,"title":{},"body":{"components/TableComponent.html":{}}}],["websocketlink",{"_index":1374,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websocketlink(this.graphqlsubscriptionservice.subscriptionclient",{"_index":1414,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websockets",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["webstoragemodule",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["werden",{"_index":1568,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["width",{"_index":674,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{}}}],["window.localstorage",{"_index":1427,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["winner.name",{"_index":2407,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":2406,"title":{},"body":{"components/TournamentComponent.html":{}}}],["wins",{"_index":288,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ws",{"_index":1373,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["wsclient",{"_index":1413,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["x",{"_index":1261,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["x.filter(y",{"_index":1259,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.guest_team.id",{"_index":1995,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.home_team.id",{"_index":1996,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.id",{"_index":1796,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{}}}],["x.index",{"_index":1537,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.matches).reduce((acc",{"_index":1573,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.number",{"_index":1540,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(y",{"_index":1546,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.guest_team",{"_index":1782,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["y.home_team",{"_index":1781,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["y.label.tolowercase().includes(this.newmatchpitch.value.tolowercase",{"_index":1260,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":1547,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["yes",{"_index":826,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/NotificationService.html":{}}}],["zip",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":537,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dates\n                                \n                                \n                                        round\n                                \n                                \n                                        teams\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dates\n                                    \n                                \n                                \n                                    \n                                        dates:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:         RoundTeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoundTeam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddRankingPenaltyGQL.html":{"url":"injectables/AddRankingPenaltyGQL.html","title":"injectable - AddRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1143\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddTeamToSeasonGQL.html":{"url":"injectables/AddTeamToSeasonGQL.html","title":"injectable - AddTeamToSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddTeamToSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1261\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditTournamentRoundComponent\n\nEditTournamentRoundComponent\n\nAdminModule -->\n\nEditTournamentRoundComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditTournamentRoundComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            ManagePenaltyComponent\n                        \n                        \n                            ManagepitchesComponent\n                        \n                        \n                            ManageseasonComponent\n                        \n                        \n                            ManageteamsComponent\n                        \n                        \n                            ManagetournamentComponent\n                        \n                        \n                            ManageusersComponent\n                        \n                        \n                            MatchSchedulingComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditTournamentRoundComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\nimport { UserListComponent } from './manageusers/user-list/user-list.component';\nimport { RenameTeamComponent } from './manageteams/rename-team/rename-team.component';\nimport { EventsModule } from './events';\nimport { ManageteamsComponent } from './manageteams/manageteams.component';\nimport { ManagepitchesComponent } from './managepitches/managepitches.component';\nimport { ManagePenaltyComponent } from './manageseason/manage-penalty/manage-penalty.component';\nimport { EditRankingPenaltyComponent } from './manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component';\nimport { EditUserDialogComponent } from './manageusers/edit-user-dialog/edit-user-dialog.component';\nimport { EditTournamentRoundComponent } from './managetournament/edit-tournament-round/edit-tournament-round.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule,\n    EventsModule\n  ],\n  declarations: [\n    AdminComponent,\n    ManageteamsComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    EditTournamentRoundComponent,\n    MatchSchedulingComponent,\n    UserListComponent,\n    RenameTeamComponent,\n    ManagepitchesComponent,\n    ManagePenaltyComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ],\n  entryComponents: [\n    EditTournamentRoundComponent,\n    RenameTeamComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllSeasonsListGQL.html":{"url":"injectables/AllSeasonsListGQL.html","title":"injectable - AllSeasonsListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllSeasonsListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1643\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTeamsGQL.html":{"url":"injectables/AllTeamsGQL.html","title":"injectable - AllTeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1660\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTournamentListGQL.html":{"url":"injectables/AllTournamentListGQL.html","title":"injectable - AllTournamentListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTournamentListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1677\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllUsersGQL.html":{"url":"injectables/AllUsersGQL.html","title":"injectable - AllUsersGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllUsersGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1725\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, dialog: MatDialog, ranking: RankingGQL, matchPlanGQL: MatchPlanGQL, tournamentGQL: TournamentGQL, seasonService: SeasonService, graphqlService: GraphqlService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentGQL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlService\n                                                  \n                                                        \n                                                                        GraphqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGoogleMapsScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadGoogleMapsScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLangSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLangSelect(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openChangePasswordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenChangePasswordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { RankingGQL, MatchPlanGQL, TournamentGQL } from 'src/api/graphql';\nimport { SeasonService } from 'src/app/services/season.service';\nimport { LocalStorage } from 'ngx-store';\nimport { SELECTED_TOURNAMENT_KEY } from './components/tournament/tournament.component';\nimport { AppsettingsService } from './services/appsettings.service';\nimport { Apollo } from 'apollo-angular';\nimport { GraphqlService } from './services/graphql.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private ranking: RankingGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private tournamentGQL: TournamentGQL,\n    public seasonService: SeasonService,\n    private graphqlService: GraphqlService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService) {\n  }\n  async ngOnInit() {\n\n    this.graphqlService.createApolloLink();\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n      this.graphqlSubscriptionService.connect();\n    }\n\n    if (this.authService.accessToken) {\n      this.authService.loadUser();\n    }\n    this.loadGoogleMapsScript();\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + this.appsettingsService.appsettings.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n\n  async refresh() {\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.ranking.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.matchPlanGQL.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.tournamentId) {\n      await this.tournamentGQL.fetch({ id: this.tournamentId }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n       -->\n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n      \n        \n          refresh\n        \n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .led-box {\n    height: 25px;\n    width: 25%;\n    margin: 10px 0;\n    float: right;\n  }\n  .led-green {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #ABFF00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;\n  }\n  .led-red {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #F00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                   -->              {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                              refresh                                  Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { GraphQLModule } from './graphql.module';\nimport { AuthenticationService } from './services/authentication.service';\nimport { WebStorageModule } from 'ngx-store';\nimport { AppsettingsService } from './services/appsettings.service';\n\nregisterLocaleData(localeDe);\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function loadAppsettingsFactory(provider: AppsettingsService) {\n  return () => provider.init();\n}\n\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    WebStorageModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthenticationService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadAppsettingsFactory,\n      deps: [AppsettingsService], multi: true\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'matchplan',\n    pathMatch: 'full'\n  },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppsettingsModel.html":{"url":"interfaces/AppsettingsModel.html","title":"interface - AppsettingsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppsettingsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        googleMapsApiKey\n                                \n                                \n                                        graphqlUrl\n                                \n                                \n                                        graphqlWsUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleMapsApiKey\n                                    \n                                \n                                \n                                    \n                                        googleMapsApiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlWsUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlWsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppsettingsService.html":{"url":"injectables/AppsettingsService.html","title":"injectable - AppsettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppsettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appsettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                loadAppsettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettings\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appsettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppsettingsModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                sendPasswordMail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userQGL: UserGQL, changePasswordQGL: PasswordChangeGQL, resetPasswordQGL: PasswordResetGQL, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswordQGL\n                                                  \n                                                        \n                                                                        PasswordChangeGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPasswordQGL\n                                                  \n                                                        \n                                                                        PasswordResetGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string, oldPassword?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTeamAdminForTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeamAdminForTeam(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAsync(context: LoginContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                LoginContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(ACCESS_TOKEN_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User.AuthenticatedUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:88\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CancelMatchDialogComponent.html":{"url":"components/CancelMatchDialogComponent.html","title":"component - CancelMatchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CancelMatchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cancel-match-dialog\n            \n\n            \n                styleUrls\n                ./cancel-match-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cancel-match-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancelMatch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dialogRef: MatDialogRef, cancelMatchGQL: CancelMatchGQL, translateService: TranslateService, notify: NotificationService, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancelMatchGQL\n                                                  \n                                                        \n                                                                        CancelMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            cancelMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelMatch(reason: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Match, CancelMatchGQL, MatchPlanGQL } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { SeasonService } from 'src/app/services/season.service';\n\n@Component({\n  selector: 'app-cancel-match-dialog',\n  templateUrl: './cancel-match-dialog.component.html',\n  styleUrls: ['./cancel-match-dialog.component.css']\n})\nexport class CancelMatchDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    public dialogRef: MatDialogRef,\n    private cancelMatchGQL: CancelMatchGQL,\n    private translateService: TranslateService,\n    private notify: NotificationService,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async cancelMatch(reason: string) {\n    // TODO: move to MatchServc\n    try {\n      await this.cancelMatchGQL.mutate({\n        match_id: this.match.id,\n        reason: reason\n      }, {\n          refetchQueries: [\n            {\n              query: this.matchPlanGQL.document,\n              variables: { id: this.seasonService.currentSeason.getValue().id}\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CANCEL_MATCH_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CANCEL_MATCH_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'CANCEL_MATCH' | translate }}\n    \n    \n      {{ match.home_team.name}} - {{ match.guest_team.name}}\n    \n  \n\n\n  \n    \n    {{reason.value.length}} / 255\n  \n\n\n  {{ 'BUTTON.CANCEL' | translate }} \n  {{ 'BUTTON.CANCEL_MATCH' | translate }} \n\n    \n\n    \n                \n                    ./cancel-match-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'CANCEL_MATCH\\' | translate }}              {{ match.home_team.name}} - {{ match.guest_team.name}}                {{reason.value.length}} / 255    {{ \\'BUTTON.CANCEL\\' | translate }}   {{ \\'BUTTON.CANCEL_MATCH\\' | translate }} '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CancelMatchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CancelMatchGQL.html":{"url":"injectables/CancelMatchGQL.html","title":"injectable - CancelMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CancelMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1104\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                ./changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      try {\n        await this.authService.changePassword(this.newPassword.value, this.oldPassword.value);\n        this.oldPasswordWrong = false;\n        this.authService.logout();\n        this.dialogRef.close();\n      } catch (error) {\n          console.error(error);\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./changepassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ConfirmDialogComponentData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ConfirmDialogComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfirmDialogComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface ConfirmDialogComponentData {\n  message: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogComponentData,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ 'CONFIRM_TILTE' | translate }}\n\n\n  {{ data.message }}\n\n\n  \n    {{ 'BUTTON.NO' | translate }}\n  \n  \n      {{ 'BUTTON.YES' | translate }}\n  \n\n    \n\n    \n                \n                    ./confirm-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'CONFIRM_TILTE\\' | translate }}  {{ data.message }}      {{ \\'BUTTON.NO\\' | translate }}          {{ \\'BUTTON.YES\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmDialogComponentData.html":{"url":"interfaces/ConfirmDialogComponentData.html","title":"interface - ConfirmDialogComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmDialogComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface ConfirmDialogComponentData {\n  message: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogComponentData,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ContactComponentData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ContactComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContactComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         {{ 'CONTACT' | translate }}\n\n  \n    \n      {{ team.name }}\n    \n    \n      \n    \n  \n  \n    \n      {{ data.pitch.label }}\n    \n    \n      \n    \n  \n\n\n  {{ 'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{ \\'CONTACT\\' | translate }}            {{ team.name }}                                {{ data.pitch.label }}                      {{ \\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactComponentData.html":{"url":"interfaces/ContactComponentData.html","title":"interface - ContactComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/contact/contact.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pitch\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team.Fragment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                ./contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n                \n                    ./contact-person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                ./contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./contactlist.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactlistComponent\n                        \n                        \n                            PitchesComponent\n                        \n                        \n                            TeamsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactlistRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMatchesForSeasonGQL.html":{"url":"injectables/CreateMatchesForSeasonGQL.html","title":"injectable - CreateMatchesForSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMatchesForSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1287\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreatePitchDialogComponent.html":{"url":"components/CreatePitchDialogComponent.html","title":"component - CreatePitchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreatePitchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-pitch-dialog\n            \n\n            \n                styleUrls\n                ./create-pitch-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-pitch-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialogRef: MatDialogRef, pitchService: PitchService, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkNewPitchName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckNewPitchName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('adressAutoComplete')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Pitch } from 'src/api/graphql';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-create-pitch-dialog',\n  templateUrl: './create-pitch-dialog.component.html',\n  styleUrls: ['./create-pitch-dialog.component.css']\n})\nexport class CreatePitchDialogComponent implements OnInit {\n\n  newPitchFormControl: FormControl;\n  newPitch = {};\n  newPitchPlaceFormGroup: any;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private pitchService: PitchService,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n  \n  async createNewPitch() {\n    try {\n      await this.pitchService.createNewPitch({\n        ...this.newPitch,\n        label: this.newPitchFormControl.value\n      });\n      this.dialogRef.close();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_PITCH_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_PITCH_ERROR'), error);\n    }\n  }\n  checkNewPitchName() {\n    this.pitchService.allPitches.subscribe(\n      (pitches) => {\n        const pitch = pitches.find(p => p.label === this.newPitchFormControl.value);\n        if (pitch) {\n          this.newPitchFormControl.setErrors({ pitchexist: true });\n        } else {\n          this.newPitchFormControl.setErrors(null);\n          this.newPitchFormControl.updateValueAndValidity();\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ 'NEW_PITCH_LABEL' | translate }}\n    \n      \n      \n        ERRORS.PITCH_EXIST\n      \n      PITCH_REQUIRED\n      \n    \n    \n      \n    \n    \n      \n        {{'BUTTON.NEXT' | translate}}\n      \n    \n  \n  \n    \n      {{ 'NEW_PITCH_ADRESS' | translate}}\n      \n        \n      \n      \n        \n          {{'BUTTON.BACK' | translate}}\n        \n        \n          {{'BUTTON.CREATE_PITCH' | translate}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./create-pitch-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'NEW_PITCH_LABEL\\' | translate }}                        ERRORS.PITCH_EXIST            PITCH_REQUIRED                                          {{\\'BUTTON.NEXT\\' | translate}}                        {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                            {{\\'BUTTON.BACK\\' | translate}}                          {{\\'BUTTON.CREATE_PITCH\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreatePitchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreatePitchGQL.html":{"url":"injectables/CreatePitchGQL.html","title":"injectable - CreatePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreatePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1225\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateSeasonGQL.html":{"url":"injectables/CreateSeasonGQL.html","title":"injectable - CreateSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1248\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTeamGQL.html":{"url":"injectables/CreateTeamGQL.html","title":"injectable - CreateTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1345\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentGQL.html":{"url":"injectables/CreateTournamentGQL.html","title":"injectable - CreateTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1409\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentRoundGQL.html":{"url":"injectables/CreateTournamentRoundGQL.html","title":"injectable - CreateTournamentRoundGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentRoundGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1422\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserGQL.html":{"url":"injectables/CreateUserGQL.html","title":"injectable - CreateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1458\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OwlDateTimeIntl\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePeriod.html":{"url":"interfaces/DatePeriod.html","title":"interface - DatePeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatePeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeletePitchGQL.html":{"url":"injectables/DeletePitchGQL.html","title":"injectable - DeletePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeletePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1187\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteTeamGQL.html":{"url":"injectables/DeleteTeamGQL.html","title":"injectable - DeleteTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1396\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteTournamentGQL.html":{"url":"injectables/DeleteTournamentGQL.html","title":"injectable - DeleteTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1445\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserGQL.html":{"url":"injectables/DeleteUserGQL.html","title":"injectable - DeleteUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1514\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditContactComponent.html":{"url":"components/EditContactComponent.html","title":"component - EditContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-contact/edit-contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-contact\n            \n\n            \n                styleUrls\n                ./edit-contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitContactChanged\n                            \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                contactChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        contactChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitContactChanged\n                        \n                        \n                    \n                \n            \n            \n                \nemitContactChanged(firstName: string, lastName: string, email: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmailValidOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmailValidOrEmpty(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserGQL, UpdateTeamContactGQL, Contact } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  @Output() contactChanged = new EventEmitter();\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n\n  constructor(\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  emitContactChanged(firstName: string, lastName: string, email: string, phone: string) {\n    this.contactChanged.emit({\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      phone: phone\n    });\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        {{ 'BUTTON.SAVE' | translate }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./edit-contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                    {{ \\'BUTTON.SAVE\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditPitchContactDialogComponent.html":{"url":"components/EditPitchContactDialogComponent.html","title":"component - EditPitchContactDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditPitchContactDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-pitch-contact-dialog\n            \n\n            \n                styleUrls\n                ./edit-pitch-contact-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-pitch-contact-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                contactChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitch: Pitch.Fragment, notify: NotificationService, dialogRef: MatDialogRef, translateService: TranslateService, updatePitchContactGQL: UpdatePitchContactGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                  \n                                                        \n                                                                    Pitch.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updatePitchContactGQL\n                                                  \n                                                        \n                                                                        UpdatePitchContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            contactChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    contactChanged(contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Pitch.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { Pitch, Contact, UpdatePitchContactGQL } from 'src/api/graphql';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-edit-pitch-contact-dialog',\n  templateUrl: './edit-pitch-contact-dialog.component.html',\n  styleUrls: ['./edit-pitch-contact-dialog.component.css']\n})\nexport class EditPitchContactDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public pitch: Pitch.Fragment,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private updatePitchContactGQL: UpdatePitchContactGQL\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async contactChanged(contact: Contact.Fragment) {\n    try {\n      await this.updatePitchContactGQL.mutate(\n        {\n          pitch_id: this.pitch.id,\n          ...contact\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        {{pitch.label}}\n\n  \n\n    \n\n    \n                \n                    ./edit-pitch-contact-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{pitch.label}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditPitchContactDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditRankingPenaltyComponent.html":{"url":"components/EditRankingPenaltyComponent.html","title":"component - EditRankingPenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditRankingPenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-ranking-penalty\n            \n\n            \n                styleUrls\n                ./edit-ranking-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-ranking-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                penaltyPoints\n                            \n                            \n                                penaltyReason\n                            \n                            \n                                selectedTeamId\n                            \n                            \n                                teamSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                savePenalty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: EditRankingPenaltyComponentData, addPenaltyGQL: AddRankingPenaltyGQL, dialogRef: MatDialogRef, notify: NotificationService, seasonPenaltiesGQL: SeasonPenaltiesGQL, translateService: TranslateService, rankingGQL: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        EditRankingPenaltyComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addPenaltyGQL\n                                                  \n                                                        \n                                                                        AddRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            savePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    savePenalty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EditRankingPenaltyComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyReason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSelect\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('teamSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL, RankingGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n          refetchQueries: [\n            {\n              query: this.seasonPenaltiesGQL.document,\n              variables: { id: this.data.season.id }\n            },\n            {\n              query: this.rankingGQL.document,\n              variables: { id: this.data.season.id }\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n  {{ 'BUTTON.SAVE' | translate }}\n\n    \n\n    \n                \n                    ./edit-ranking-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ team.name }}                                                                                                {{ \\'BUTTON.SAVE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditRankingPenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditRankingPenaltyComponentData.html":{"url":"interfaces/EditRankingPenaltyComponentData.html","title":"interface - EditRankingPenaltyComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditRankingPenaltyComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        penalty\n                                \n                                \n                                        season\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        penalty\n                                    \n                                \n                                \n                                    \n                                        penalty:     Penalty.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Penalty.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                    \n                                \n                                \n                                    \n                                        season:     SeasonPenalties.Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SeasonPenalties.Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL, RankingGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n          refetchQueries: [\n            {\n              query: this.seasonPenaltiesGQL.document,\n              variables: { id: this.data.season.id }\n            },\n            {\n              query: this.rankingGQL.document,\n              variables: { id: this.data.season.id }\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTournamentRoundComponent.html":{"url":"components/EditTournamentRoundComponent.html","title":"component - EditTournamentRoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTournamentRoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-tournament-round\n            \n\n\n\n\n            \n                templateUrl\n                edit-tournament-round.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guest\n                            \n                            \n                                home\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                planDateFrom\n                            \n                            \n                                planDateTo\n                            \n                            \n                                roundTeams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                    Async\n                                createRound\n                            \n                            \n                                isRoundValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allTournamentsQGL: AllTournamentListGQL, dialogRef: MatDialogRef, teamService: TeamService, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, createRoundGQL: CreateTournamentRoundGQL, notify: NotificationService, tournamentQGL: TournamentGQL, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createRoundGQL\n                                                  \n                                                        \n                                                                        CreateTournamentRoundGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    homeTeam\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestTeam\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRoundValid\n                        \n                        \n                    \n                \n            \n            \n                \nisRoundValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTeam(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateFrom\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateFrom(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateTo\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateTo(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('guest')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('home')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            planDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('planDateFrom')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            planDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('planDateTo')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roundTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoundTeam[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n    \n         {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n\n  \n    \n      {{ tupel.homeTeam.name }}\n    \n    \n      -\n    \n    \n      {{ tupel.guestTeam.name }}\n    \n    \n      \n        \n          delete\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n    \n      -\n    \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n    \n      &nbsp;\n    \n  \n  \n    \n      {{ 'PLAN_DATE_FROM'| translate}}:\n    \n    \n      \n    \n    \n      \n        \n          access_time\n        \n      \n      \n    \n    \n      {{ 'PLAN_DATE_TO'| translate}}:\n    \n    \n      \n    \n    \n      \n        \n          access_time\n        \n      \n      \n    \n  \n\n\n  \n    {{ 'BUTTON.START_ROUND' | translate }}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}            {{ tupel.homeTeam.name }}              -              {{ tupel.guestTeam.name }}                                delete                                                              {{team.name}}                                      -                                            {{team.name}}                                                         {{ \\'PLAN_DATE_FROM\\'| translate}}:                                              access_time                                  {{ \\'PLAN_DATE_TO\\'| translate}}:                                              access_time                                {{ \\'BUTTON.START_ROUND\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTournamentRoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserDialogComponent.html":{"url":"components/EditUserDialogComponent.html","title":"component - EditUserDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-dialog\n            \n\n            \n                styleUrls\n                ./edit-user-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-user-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                userRole\n                            \n                            \n                                UserRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                            \n                                    Async\n                                sendUsermail\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, translateService: TranslateService, authService: AuthenticationService, createUserGQL: CreateUserGQL, usersGQL: AllUsersGQL, notify: NotificationService, dialogRef: MatDialogRef, updateUserGQL: UpdateUserGQL, user: User.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserGQL\n                                                  \n                                                        \n                                                                        CreateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateUserGQL\n                                                  \n                                                        \n                                                                        UpdateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeTeamSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeTeamSelect(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUsermail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUsermail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { UserRole, CreateUserGQL, AllUsersGQL, User, UpdateUserGQL } from 'src/api/graphql';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TeamService } from 'src/app/services/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { MatSelectChange, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport * as uuid from 'uuid/v4';\n\n@Component({\n  selector: 'app-edit-user-dialog',\n  templateUrl: './edit-user-dialog.component.html',\n  styleUrls: ['./edit-user-dialog.component.css']\n})\nexport class EditUserDialogComponent implements OnInit {\n\n  userTeamList: string[] = new Array();\n\n  userRole: UserRole;\n\n  UserRole = UserRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    public teamService: TeamService,\n    private translateService: TranslateService,\n    private authService: AuthenticationService,\n    private createUserGQL: CreateUserGQL,\n    private usersGQL: AllUsersGQL,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private updateUserGQL: UpdateUserGQL,\n    @Inject(MAT_DIALOG_DATA) public user: User.Fragment,\n  ) {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    if (!this.user) {\n      this.password = new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]);\n    }\n    if (this.user) {\n      this.email.setValue(this.user.email);\n      this.firstName.setValue(this.user.first_name);\n      this.lastName.setValue(this.user.last_name);\n      this.userRole = this.user.role;\n      this.userTeamList = this.user.teams.map(t => t.id);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  async createUser() {\n    try {\n      await this.createUserGQL.mutate(\n        {\n          id: uuid(),\n          email: this.email.value.toLowerCase(),\n          password: this.password.value,\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_USER_ERROR'), error);\n    }\n  }\n\n  async updateUser() {\n    try {\n      await this.updateUserGQL.mutate(\n        {\n          user_id: this.user.id,\n          email: this.email.value.toLowerCase(),\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('UPDATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('UPDATE_USER_ERROR'), error);\n    }\n  }\n\n  async sendUsermail() {\n    try {\n      await this.authService.sendPasswordMail(this.email.value.toLowerCase());\n      this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_EMAIL\n      \n    \n  \n  \n    \n      \n        \n        FIRST_NAME_REQUIRED\n      \n      \n        \n        LAST_NAME_REQUIRED\n      \n    \n  \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_PASSWORD\n      \n    \n  \n  \n    \n      \n        \n          \n            {{ UserRole.Admin }}\n          \n          \n            {{ UserRole.TeamManager }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n  \n\n\n  \n    {{ 'BUTTON.ADD_USER' | translate}}\n  \n  \n  {{ 'BUTTON.UPDATE_USER' | translate}}\n\n  \n    {{ 'BUTTON.SEND_USER_MAIL' | translate}}\n  \n\n    \n\n    \n                \n                    ./edit-user-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ERRORS.ENTER_VALID_EMAIL                                        FIRST_NAME_REQUIRED                            LAST_NAME_REQUIRED                                        ERRORS.ENTER_VALID_PASSWORD                                                      {{ UserRole.Admin }}                                {{ UserRole.TeamManager }}                                                                        {{team.name}}                                    {{ \\'BUTTON.ADD_USER\\' | translate}}      {{ \\'BUTTON.UPDATE_USER\\' | translate}}      {{ \\'BUTTON.SEND_USER_MAIL\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                ./editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayPitch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, pitchService: PitchService, matchService: MatchService, dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPitchSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonPitchSelect(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showCreateNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \nshowCreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { map, startWith, switchMapTo } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Match, Pitch } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { CreatePitchDialogComponent } from '../create-pitch-dialog/create-pitch-dialog.component';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private pitchService: PitchService,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    private dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch.Fragment) {\n    this.match.pitch = pitch;\n  }\n\n  async onSaveClicked() {\n    try {\n      await this.matchService.locateMatch(this.match.id, this.newMatchPitch.value);\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  showCreateNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.value.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.pitch.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.value.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                    {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                ./editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, matchService: MatchService, dialogRef: MatDialogRef, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchService } from '../../../services/match.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  async onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      try {\n        await this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score);\n        this.notify.showSuccessNotification(this.translateService.instant('EDIT_RESULT_SUCCESS'));\n        this.dialogRef.close(true);\n      } catch (error) {\n        this.notify.showErrorNotification(this.translateService.instant('EDIT_RESULT_ERROR'), error);\n      }\n    } else {\n      this.notify.showErrorNotification(this.translateService.instant('ENTER_VALID_RESULT'));\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.result.component.css\n                \n                .inputsize {\n    width: 8ch;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                ./editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            kickoffSet\n                        \n                        \n                    \n                \n            \n            \n                \nkickoffSet(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\nimport { MatchService } from '../../../services/match.service';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private matchService: MatchService\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.matchService.scheduleMatch(this.match.id, this.matchKickoff)\n      .then(\n        () => {\n          this.dialogRef.close(true);\n        }\n      )\n      .catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n                \n                    ./editmatch.time.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndSeasonGQL.html":{"url":"injectables/EndSeasonGQL.html","title":"injectable - EndSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EndSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1332\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventGQL.html":{"url":"injectables/EventGQL.html","title":"injectable - EventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1524\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                latestEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(latestEventsGQL: LatestEventGQL, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latestEventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/events/events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { LatestEventGQL, Event } from 'src/api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  latestEvents: Observable;\n\n  constructor(\n    private latestEventsGQL: LatestEventGQL,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.latestEvents = this.latestEventsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.latestEvents.sort((a, b) => a.occurred_at \n    \n\n    \n        \n  \n    \n      {{ event.occurred_at | date:'short':'':i18Service.currentLang}}\n    \n    \n      {{ event.type }}\n    \n  \n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.occurred_at | date:\\'short\\':\\'\\':i18Service.currentLang}}              {{ event.type }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nEventsComponent\n\nEventsComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            EventsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { SharedModule } from 'src/app/components/shared/shared.module';\nimport { EventsComponent } from './events.component';\nimport { AppCoreModule } from 'src/app/app-core.module';\n\n@NgModule({\n  imports: [\n    EventsRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    EventsComponent\n  ],\n  exports: [\n    EventsComponent\n  ]\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsRoutingModule.html":{"url":"modules/EventsRoutingModule.html","title":"module - EventsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class EventsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\n\nGraphqlService\n\nGraphqlService\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlService\n                        \n                        \n                            GraphqlSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule } from 'apollo-angular';\nimport { HttpLinkModule } from 'apollo-angular-link-http';\nimport { GraphqlService } from './services/graphql.service';\nimport { GraphqlSubscriptionService } from './services/graphql-subscription.service';\n\n@NgModule({\n  exports: [\n    ApolloModule,\n    HttpLinkModule\n  ],\n  providers: [\n    GraphqlSubscriptionService,\n    GraphqlService\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlService.html":{"url":"injectables/GraphqlService.html","title":"injectable - GraphqlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApolloLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apollo: Apollo, httpLink: HttpLink, authService: AuthenticationService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService, notify: NotificationService, translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpLink\n                                                  \n                                                        \n                                                                    HttpLink\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createApolloLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApolloLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { AppsettingsService } from './appsettings.service';\nimport { ApolloLink, split } from 'apollo-link';\nimport { AuthenticationService } from './authentication.service';\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { persistCache } from 'apollo-cache-persist';\nimport { GraphqlSubscriptionService } from './graphql-subscription.service';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { onError } from 'apollo-link-error';\nimport { NotificationService } from './notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlService {\n\n  constructor(\n    private apollo: Apollo,\n    private httpLink: HttpLink,\n    private authService: AuthenticationService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService,\n    private notify: NotificationService,\n    private translationService: TranslateService\n  ) {\n  }\n\n  createApolloLink() {\n    const http = this.httpLink.create({ uri: this.appsettingsService.appsettings.graphqlUrl });\n\n    const afterwareLink = new ApolloLink((operation, forward) => {\n      return forward(operation).map(response => {\n        const { response: { headers } } = operation.getContext();\n        if (headers) {\n          const token = headers.get('x-token');\n          if (token) {\n            this.authService.accessToken = token;\n          }\n        }\n        return response;\n      });\n    });\n\n    const errorHandler = onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}`,\n          ),\n        );\n      }\n      if (networkError) {\n        switch (networkError['status']) {\n          case 401:\n            this.authService.logout();\n            break;\n          default:\n            this.notify.showErrorNotification(this.translationService.instant('UNKNOWN_NETWORK_ERROR'), networkError['statusText']);\n        }\n      }\n    });\n\n    const auth = setContext((_, { headers }) => {\n      if (!headers) {\n        headers = new HttpHeaders();\n      }\n      const token = this.authService.accessToken;\n      if (token) {\n        return {\n          headers: headers.get('Authorization') ? null : headers.append('Authorization', `Bearer ${token}`)\n        };\n      } else {\n        return {};\n      }\n    });\n\n    let link = errorHandler.concat(afterwareLink).concat(auth).concat(http);\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n\n      this.graphqlSubscriptionService.subscriptionClient = new SubscriptionClient(\n        this.appsettingsService.appsettings.graphqlWsUrl,\n        {\n          lazy: true,\n          reconnect: true,\n          reconnectionAttempts: 2\n        });\n      const wsClient = new WebSocketLink(this.graphqlSubscriptionService.subscriptionClient);\n\n      link = split(\n        // split based on operation type\n        ({ query }) => {\n          const { kind, operation } = getMainDefinition(query);\n          return kind === 'OperationDefinition' && operation === 'subscription';\n        },\n        wsClient,\n        link,\n      );\n    }\n    const cache = new InMemoryCache(\n      {\n        addTypename: true,\n        cacheRedirects: {\n          Query: {\n            allSeasons: (t, args, { getCacheKey }) => {\n              return getCacheKey({ __typename: 'Season' });\n            }\n          },\n        }\n      }\n    );\n    if (environment.persistCache) {\n      persistCache({\n        cache,\n        storage: window.localStorage,\n        key: 'graphql-cache'\n      });\n    }\n    this.apollo.create({\n      link: link,\n      cache: cache\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlSubscriptionService.html":{"url":"injectables/GraphqlSubscriptionService.html","title":"injectable - GraphqlSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptionClient\n                            \n                            \n                                    Public\n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptionClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisEventGQL, rankingQGL: RankingGQL, eventsGQL: LatestEventGQL, matchQGL: MatchGQL, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql-subscription.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchQGL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql-subscription.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptionClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptionClient\n                    \n                \n\n                \n                    \n                        getsubscriptionClient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:22\n                                \n                            \n\n                \n                    \n                        setsubscriptionClient(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                            \n                                storedLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storedLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(LANG_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\nimport { LocalStorage } from 'ngx-store';\n\nconst LANG_KEY = 'LANG';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  @LocalStorage(LANG_KEY) storedLang: string;\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    if (!this.storedLang) {\n      this.storedLang = this.translateService.getBrowserLang();\n    }\n    if (!this.storedLang) {\n      this.storedLang = 'de';\n    }\n    this.changeLang(this.storedLang);\n  }\n\n  changeLang(lang: string) {\n    this.translateService.use(lang);\n    this.storedLang = lang;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:         ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData.html":{"url":"interfaces/IntrospectionResultData.html","title":"interface - IntrospectionResultData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData-1.html":{"url":"interfaces/IntrospectionResultData-1.html","title":"interface - IntrospectionResultData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/introspection-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatestEventGQL.html":{"url":"injectables/LatestEventGQL.html","title":"injectable - LatestEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LatestEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1541\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateMatchGQL.html":{"url":"injectables/LocateMatchGQL.html","title":"injectable - LocateMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocateMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1091\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordForgot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordForgot(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    try {\n      this.error = false;\n      await this.authenticationService.loginAsync(this.loginForm.value);\n      this.dialogRef.close();\n    } catch (error) {\n      this.error = true;\n      this.loginForm.controls.password.setValue('');\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.setErrors({ required: true });\n    }\n  }\n\n  async passwordForgot(email: string) {\n    if (email) {\n      try {\n        await this.authenticationService.sendPasswordMail(email);\n        this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      } catch (error) {\n        this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n      }\n    } else {\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.disable();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n      \n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n  \n  \n    \n      {{ 'FORGOT_PASSWORD' | translate}}\n    \n    \n      {{ 'BUTTON.LOGIN' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .login-error {\n    color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    USERNAME_REQUIRED                                                                              PASSWORD_REQUIRED                                remove_red_eye                                          {{ \\'FORGOT_PASSWORD\\' | translate}}              {{ \\'BUTTON.LOGIN\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagePenaltyComponent.html":{"url":"components/ManagePenaltyComponent.html","title":"component - ManagePenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagePenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-penalty\n            \n\n            \n                styleUrls\n                ./manage-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manage-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                penalties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPenalties\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Async\n                                removePenalty\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeasonId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rankingGQL: RankingGQL, seasonPenaltiesGQL: SeasonPenaltiesGQL, removePenaltiesGQL: RemoveRankingPenaltyGQL, i18Service: I18Service, dialog: MatDialog, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removePenaltiesGQL\n                                                  \n                                                        \n                                                                        RemoveRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeasonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPenalties\n                        \n                        \n                    \n                \n            \n            \n                \nloadPenalties()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    season\n                                    \n                                            SeasonPenalties.Season\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePenalty(penalty: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penalties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { SeasonPenaltiesGQL, SeasonPenalties, Penalty, RemoveRankingPenaltyGQL, RankingGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditRankingPenaltyComponent } from './edit-ranking-penalty/edit-ranking-penalty.component';\nimport { I18Service } from 'src/app/services/i18.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from 'src/app/components/shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-manage-penalty',\n  templateUrl: './manage-penalty.component.html',\n  styleUrls: ['./manage-penalty.component.css']\n})\nexport class ManagePenaltyComponent implements OnInit, OnChanges {\n\n  @Input() manageSeasonId: string;\n\n  penalties: Observable;\n\n  constructor(\n    private rankingGQL: RankingGQL,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private removePenaltiesGQL: RemoveRankingPenaltyGQL,\n    public i18Service: I18Service,\n    private dialog: MatDialog,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.loadPenalties();\n  }\n\n  ngOnChanges() {\n    this.loadPenalties();\n  }\n\n  loadPenalties() {\n    this.penalties = this.seasonPenaltiesGQL.watch({ id: this.manageSeasonId }).valueChanges.pipe(\n      map(({ data }) => data.season)\n    );\n  }\n\n  openEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment) {\n    const dialogRef = this.dialog.open(EditRankingPenaltyComponent, {\n      data: {\n        season: season,\n        penalty: penalty\n      }\n    });\n  }\n\n  async removePenalty(penalty: Penalty.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE_PENALTY')\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.removePenaltiesGQL.mutate({\n              ranking_penalty_id: penalty.id,\n              season_id: this.manageSeasonId\n            }, {\n                refetchQueries: [\n                  {\n                    query: this.seasonPenaltiesGQL.document,\n                    variables: { id: this.manageSeasonId }\n                  },\n                  {\n                    query: this.rankingGQL.document,\n                    variables: { id: this.manageSeasonId }\n                  }\n                ]\n              }).toPromise();\n            this.notify.showSuccessNotification(this.translateService.instant('REMOVE_PENALTY_SUCCESS'));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('REMOVE_PENALTY_ERROR'), error);\n          }\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ 'TEAM' | translate }}\n            \n            \n                {{ 'REASON' | translate }}\n            \n            \n                {{ 'DATE' | translate }}\n            \n            \n                {{ 'POINTS' | translate }}\n            \n            \n                \n                    \n                        add\n                    \n                \n            \n        \n        \n            \n                {{ penalty.team.name }}\n            \n            \n                {{ penalty.reason }}\n            \n            \n                {{ penalty.created_at | date:'medium':'':i18Service.currentLang }}\n            \n            \n                {{ penalty.points }}\n            \n            \n                \n                    \n                        edit\n                    \n                 -->\n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./manage-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'TEAM\\' | translate }}                                        {{ \\'REASON\\' | translate }}                                        {{ \\'DATE\\' | translate }}                                        {{ \\'POINTS\\' | translate }}                                                                                    add                                                                                            {{ penalty.team.name }}                                        {{ penalty.reason }}                                        {{ penalty.created_at | date:\\'medium\\':\\'\\':i18Service.currentLang }}                                        {{ penalty.points }}                                                                                    edit                                     -->                                                            delete                                                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagePenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagepitchesComponent.html":{"url":"components/ManagepitchesComponent.html","title":"component - ManagepitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagepitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managepitches/managepitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managepitches\n            \n\n            \n                styleUrls\n                ./managepitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managepitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewPitch\n                            \n                            \n                                deletePitch\n                            \n                            \n                                editPitchContact\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, dialog: MatDialog, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managepitches/managepitches.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editPitchContact\n                        \n                        \n                    \n                \n            \n            \n                \neditPitchContact(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pitch, PitchesGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialog } from '@angular/material';\nimport { EditPitchContactDialogComponent } from '../../shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from '../../shared/create-pitch-dialog/create-pitch-dialog.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-managepitches',\n  templateUrl: './managepitches.component.html',\n  styleUrls: ['./managepitches.component.css']\n})\nexport class ManagepitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService,\n    private dialog: MatDialog,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  deletePitch(pitch: Pitch.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: pitch.label })\n      }\n    });\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.pitchService.deletePitch(pitch.id);\n            this.notify.showSuccessNotification(this.translateService.instant('DELETE_PITCH_SUCESS'));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('DELETE_PITCH_ERROR'), error);\n          }\n        }\n      });\n  }\n\n  createNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n\n  editPitchContact(pitch: Pitch.Fragment) {\n    this.dialog.open(EditPitchContactDialogComponent,\n      {\n        data: pitch\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'PITCH' | translate }}\n      \n      \n        {{ 'CONTACT' | translate }}\n      \n      \n        \n          \n            add\n          \n        \n      \n    \n    \n      \n        location_on\n        \n          {{ pitch.label }}\n        \n      \n      \n        \n          \n        \n      \n      \n        \n          \n            perm_contact_calendar\n          \n        \n        \n          \n            delete\n          \n        \n      \n      \n    \n  \n  \n      \n    \n\n\n    \n\n    \n                \n                    ./managepitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PITCH\\' | translate }}                    {{ \\'CONTACT\\' | translate }}                                          add                                              location_on                  {{ pitch.label }}                                                                                        perm_contact_calendar                                                delete                                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagepitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageteamsComponent.html":{"url":"components/ManageteamsComponent.html","title":"component - ManageteamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageteamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/manageteams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageteams\n            \n\n            \n                styleUrls\n                ./manageteams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageteams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openRenameTeamDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, dialog: MatDialog, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/manageteams.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTeam\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTeam(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openRenameTeamDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenRenameTeamDialog(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from 'src/api/graphql';\nimport { MatDialog } from '@angular/material';\nimport { RenameTeamComponent } from './rename-team/rename-team.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-manageteams',\n  templateUrl: './manageteams.component.html',\n  styleUrls: ['./manageteams.component.css']\n})\nexport class ManageteamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService,\n    public dialog: MatDialog,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) {\n\n  }\n\n  async ngOnInit() {\n  }\n\n  async addNewTeam(teamName: string) {\n    try {\n      await this.teamService.addNewTeam(teamName);\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TEAM_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TEAM_ERROR'), error);\n    }\n  }\n\n  deleteTeam(team: Team.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: team.name })\n      }\n    });\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        try {\n          await this.teamService.deleteTeam(team);\n          this.notify.showSuccessNotification(this.translateService.instant('DELETE_TEAM_SUCCESS'));\n        } catch (error) {\n          this.notify.showErrorNotification(this.translateService.instant('DELETE_TEAM_ERROR'), error);\n        }\n      });\n  }\n\n  openRenameTeamDialog(team: Team.Fragment) {\n    this.dialog.open(RenameTeamComponent, { data: team });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n          add\n        \n      \n    \n  \n  \n    \n      {{team.name}}\n    \n    \n      \n        \n          edit\n        \n      \n      \n          \n            delete\n          \n        \n    \n  \n\n    \n\n    \n                \n                    ./manageteams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          add                                {{team.name}}                                edit                                          delete                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageteamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                ./managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                manageTournamentId\n                            \n                            \n                                manageTournamentRoundCount\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTournament\n                            \n                            \n                                deleteTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                            \n                                    Private\n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, allTournamentsGQL: AllTournamentListGQL, tournamentQGL: TournamentGQL, createTournament: CreateTournamentGQL, translateService: TranslateService, deleteTournamentGQL: DeleteTournamentGQL, notify: NotificationService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentsGQL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTournament\n                                                  \n                                                        \n                                                                        CreateTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteTournamentGQL\n                                                  \n                                                        \n                                                                        DeleteTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewTournament\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTournament(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTournament\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTournament(tournamentId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournamentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editRound\n                        \n                        \n                    \n                \n            \n            \n                \neditRound(round: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genRounds\n                        \n                        \n                    \n                \n            \n            \n                \ngenRounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllTournaments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onTournamentSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTournamentSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openEditDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditDialog(round: number, teams?: RoundTeam[], dates?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teams\n                                    \n                                                RoundTeam[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    dates\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(MANAGE_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRoundCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, MatchDay, CreateTournamentGQL, DeleteTournamentGQL } from '../../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable, empty } from 'rxjs';\nimport * as uuidv4 from 'uuid/v4';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LocalStorage } from 'ngx-store';\nimport { RoundTeam, EditTournamentRoundComponent } from './edit-tournament-round/edit-tournament-round.component';\nimport { I18Service } from 'src/app/services/i18.service';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nconst MANAGE_TOURNAMENT_KEY = 'MANAGE_TOURNAMENT_KEY';\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  @LocalStorage(MANAGE_TOURNAMENT_KEY)\n  manageTournamentId: string = null;\n  manageTournamentRounds: Observable;\n  startTeamCount = 4;\n  rounds: number[][];\n  manageTournamentRoundCount: number;\n\n  constructor(\n    public dialog: MatDialog,\n    private allTournamentsGQL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private createTournament: CreateTournamentGQL,\n    private translateService: TranslateService,\n    private deleteTournamentGQL: DeleteTournamentGQL,\n    private notify: NotificationService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n    if (this.manageTournamentId) {\n      this.onTournamentSelected();\n    }\n  }\n\n  private loadAllTournaments() {\n    this.tournaments = this.allTournamentsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n  }\n\n  async createNewTournament(name: string) {\n    await this.createTournament.mutate({\n      id: uuidv4(),\n      name: name\n    },\n      {\n        refetchQueries: [\n          { query: this.allTournamentsGQL.document }\n        ]\n      }).toPromise();\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = this.tournamentQGL.watch(\n      {\n        id: this.manageTournamentId\n      }\n    ).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.data.tournament && result.data.tournament.rounds) {\n            this.manageTournamentRoundCount = result.data.tournament.rounds.length + 1;\n            return result.data.tournament.rounds.sort((a, b) => a.number ();\n          }\n        })\n    );\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound(round: number) {\n    if (round  {\n          if (confirm) {\n            const teams: Observable = this.manageTournamentRounds.pipe(\n              map((data) => {\n                const r = data.find(x => x.number === round);\n                return {\n                  teams: r.matches.map(y => ({ homeTeam: y.home_team, guestTeam: y.guest_team })),\n                  dates: { from: new Date(r.start_date), to: new Date(r.end_date) }\n                };\n              })\n            );\n            teams.subscribe(\n              (t) => {\n                this.openEditDialog(round, t.teams, t.dates);\n              }\n            );\n          }\n        }\n      );\n    } else {\n      this.openEditDialog(round);\n    }\n  }\n\n  private openEditDialog(round: number, teams?: RoundTeam[], dates?: { from: Date, to: Date }) {\n    const dialogRef = this.dialog.open(EditTournamentRoundComponent, {\n      data: { round: round, tournamentId: this.manageTournamentId, teams: teams, dates: dates },\n      panelClass: 'my-full-screen-dialog'\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        // this.loadMatches(this.tournament.id);\n      }\n    });\n  }\n\n  deleteTournament(tournamentId: string) {\n    this.tournaments.subscribe(\n      (tournaments) => {\n        const tournament = tournaments.find(x => x.id === tournamentId);\n        if (!tournament) {\n          return;\n        }\n        const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\n          data: {\n            message: this.translateService.instant('CONFIRM_DELETE', { thing: tournament.name })\n          }\n        });\n        confirmDialog.afterClosed().subscribe(\n          async (confirm) => {\n            if (confirm) {\n              try {\n                await this.deleteTournamentGQL.mutate({\n                  tournament_id: tournamentId\n                }, {\n                  refetchQueries: [\n                    { query: this.allTournamentsGQL.document}\n                  ]\n                }).toPromise();\n                this.notify.showSuccessNotification(this.translateService.instant('DELETE_TOURNAMENT_SUCCESS'));\n                delete this.manageTournamentRounds;\n              } catch (error) {\n                this.notify.showErrorNotification(this.translateService.instant('DELETE_TOURNAMENT_ERROR'), error);\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT'\n        | translate}}\n    \n  \n  \n    \n      \n        \n          {{ 'NEW_TOURNAMENT_ROUND' | translate }}\n        \n      \n      \n        \n          \n            delete\n          \n        \n      \n    \n    \n      \n        \n          {{ mt.number }}. {{ 'ROUND' | translate }} ({{ mt.start_date | date:'shortDate':'':i18Service.currentLang}} -\n          {{ mt.end_date | date:'shortDate':'':i18Service.currentLang}})\n          \n            \n              edit\n            \n          \n        \n        \n          \n            {{ match.home_team.name }} - {{ match.guest_team.name }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./managetournament.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\'        | translate}}                                    {{ \\'NEW_TOURNAMENT_ROUND\\' | translate }}                                                  delete                                                        {{ mt.number }}. {{ \\'ROUND\\' | translate }} ({{ mt.start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}} -          {{ mt.end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}})                                    edit                                                            {{ match.home_team.name }} - {{ match.guest_team.name }}                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                ./manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  constructor(\n  ) {\n  }\n\n  async ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./manageusers.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                ./match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitChanges\n                            \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCancelMatchDialog\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                seasonId\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                matchUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, i18Service: I18Service, notify: NotificationService, matchService: MatchService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :     Match.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seasonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournamentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        matchUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            emitChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCancelMatchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenCancelMatchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openContactModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenContactModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditPitchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditPitchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditResultDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditResultDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditTimeDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditTimeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog } from '@angular/material';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { CancelMatchDialogComponent } from '../cancel-match-dialog/cancel-match-dialog.component';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() seasonId: string;\n  @Input() tournamentId: string;\n  @Input() match: Match.Fragment;\n  @Input() hideIfPlayed: boolean;\n\n  @Output() matchUpdated = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public notify: NotificationService,\n    public matchService: MatchService,\n    public translateService: TranslateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog() {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: this.match\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  private emitChanges() {\n    this.matchUpdated.emit(this.match.id);\n    if (this.tournamentId) {\n      this.matchService.tournamentMatchUpdated.next({ tournamentId: this.tournamentId, matchId: this.match.id });\n    } else {\n      this.matchService.seasonMatchUpdated.next({ seasonId: this.seasonId, matchId: this.match.id });\n    }\n  }\n\n  openEditPitchDialog() {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  openEditTimeDialog() {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  openContactModal() {\n    this.dialog.open(ContactComponent, {\n      data: {\n        teams: [\n          this.match.home_team,\n          this.match.guest_team\n        ],\n        pitch: this.match.pitch\n      },\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  openCancelMatchDialog() {\n    const dialogRef = this.dialog.open(CancelMatchDialogComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    \n                        access_time\n                    \n                    \n                        \n                            {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                            {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                        \n                        {{ 'NO_TIME_SET' | translate }}\n                    \n                    \n                        location_off\n                        location_on\n                    \n                    \n                        {{ 'NO_PTICH_SET' | translate }}\n                    \n                    \n                        \n                            {{ match.pitch.label }}\n                        \n                    \n                \n                \n                    \n                        {{ 'MATCH_CANCELED_AT' | translate }} {{ match.cancelled_at | date:'short':'':i18Service.currentLang }}\n                    \n                    \n                        {{ match.cancellation_reason }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n    \n        {{ 'BUTTON.CANCEL_MATCH' | translate }}\n    \n\n    \n\n    \n                \n                    ./match.component.css\n                \n                .card-text {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                                                    access_time                                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                             {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                                {{ \\'NO_TIME_SET\\' | translate }}                                                                location_off                        location_on                                                                {{ \\'NO_PTICH_SET\\' | translate }}                                                                                            {{ match.pitch.label }}                                                                                                                        {{ \\'MATCH_CANCELED_AT\\' | translate }} {{ match.cancelled_at | date:\\'short\\':\\'\\':i18Service.currentLang }}                                                                {{ match.cancellation_reason }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}                {{ \\'BUTTON.CANCEL_MATCH\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchEventPayload.html":{"url":"interfaces/MatchEventPayload.html","title":"interface - MatchEventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchEventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestScore\n                                \n                                \n                                        homeScore\n                                \n                                \n                                        matchId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestScore\n                                    \n                                \n                                \n                                    \n                                        guestScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeScore\n                                    \n                                \n                                \n                                    \n                                        homeScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchGQL.html":{"url":"injectables/MatchGQL.html","title":"injectable - MatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1555\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPlanGQL.html":{"url":"injectables/MatchPlanGQL.html","title":"injectable - MatchPlanGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchPlanGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1572\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                ./match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                    Public\n                                pitchService\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                \n                \n                    \n                        Type :     MatchPlan.Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addKickoffDateToPitch\n                        \n                        \n                    \n                \n            \n            \n                \naddKickoffDateToPitch(offset: number, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePair\n                        \n                        \n                    \n                \n            \n            \n                \nremovePair(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveMatches\n                        \n                        \n                    \n                \n            \n            \n                \nsaveMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatches\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(a)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n    \n      scheduleMatches\n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      \n        {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:'shortDate':'':i18Service.currentLang}}\n          - {{ matchDay.end_date | date:'shortDate':'':i18Service.currentLang}})\n      \n    \n    \n      \n        {{ match.home_team.name }} - {{ match.guest_team.name }}\n      \n      \n        {{ match.kickoff | date:'short':'':i18Service.currentLang}}\n      \n      \n        ({{ match.pitch?.label }})\n      \n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./match-scheduling.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                    scheduleMatches                  {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove                  ab Spieltag:                                {{ matchDay.number }}                                        {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}}          - {{ matchDay.end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}})                            {{ match.home_team.name }} - {{ match.guest_team.name }}                    {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}}                    ({{ match.pitch?.label }})                        save      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                seasonMatchUpdated\n                            \n                            \n                                tournamentMatchUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                locateMatch\n                            \n                            \n                                scheduleMatch\n                            \n                            \n                                submitMatchResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submitResultGQL: SubmitResultGQL, scheduleMatchGQL: ScheduleMatchGQL, locateMatchQGL: LocateMatchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submitResultGQL\n                                                  \n                                                        \n                                                                        SubmitResultGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleMatchGQL\n                                                  \n                                                        \n                                                                        ScheduleMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locateMatchQGL\n                                                  \n                                                        \n                                                                        LocateMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMatchPlayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPlayed(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidResult(score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locateMatch\n                        \n                        \n                    \n                \n            \n            \n                \nlocateMatch(matchId: string, pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatch\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatch(matchId: string, matchKickoff: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchKickoff\n                                    \n                                                Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    homeScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonMatchUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentMatchUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubmitResultGQL, MatchFragment, ScheduleMatchGQL, LocateMatchGQL, Match, Pitch } from '../../api/graphql';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  seasonMatchUpdated = new Subject();\n  tournamentMatchUpdated = new Subject();\n\n  constructor(\n    private submitResultGQL: SubmitResultGQL,\n    private scheduleMatchGQL: ScheduleMatchGQL,\n    private locateMatchQGL: LocateMatchGQL,\n  ) { }\n\n  public isMatchPlayed(match: Match.Fragment): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    const result = { home_score: homeScore, guest_score: guestScore };\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.submitResultGQL.mutate(\n            {\n              match_id: matchId,\n              ...result\n            },\n            {\n              update: (store, { data }) => {\n                const match: any = store.readFragment(\n                  {\n                    fragmentName: 'Match',\n                    fragment: MatchFragment,\n                    id: `Match:${matchId}`\n                  }\n                );\n                store.writeFragment(\n                  {\n                    fragmentName: 'Match',\n                    fragment: MatchFragment,\n                    id: `Match:${matchId}`,\n                    data: {\n                      __typename: 'Match',\n                      ...match,\n                      ...result\n                    }\n                  }\n                );\n              }\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n  }\n\n  scheduleMatch(matchId: string, matchKickoff: Date | string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const kickoff = typeof matchKickoff === 'string' ? matchKickoff : matchKickoff.toISOString();\n        this.scheduleMatchGQL.mutate(\n          {\n            match_id: matchId,\n            kickoff: kickoff\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    kickoff: matchKickoff\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  locateMatch(matchId: string, pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.locateMatchQGL.mutate(\n          {\n            match_id: matchId,\n            pitch_id: pitch.id\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    pitch: pitch\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                ./matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchesGQL\n                            \n                            \n                                    Public\n                                matchPlanGQL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                selectedMatchDayId\n                            \n                            \n                                selectedTeamId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMatchDays\n                            \n                            \n                                filterMatches\n                            \n                            \n                                handleGetMatches\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, matchPlanGQL: MatchPlanGQL, matchService: MatchService, rankingGQL: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatchDays(matchDays: MatchDay.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchDays\n                                    \n                                            MatchDay.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatchDay.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatches\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatches(matches: Match.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            Match.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Match.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGetMatches\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGetMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePlayed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(HIDE_PLAYED_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchesGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchPlanGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchPlanGQL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMatchDayId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_MATCHDAY_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TEAM_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { I18Service } from '../../services/i18.service';\nimport { Observable } from 'rxjs';\nimport { MatchPlanGQL, MatchPlan, Match, MatchDay, RankingGQL, MatchGQL } from '../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\nimport { MatchService } from 'src/app/services/match.service';\n\nconst HIDE_PLAYED_KEY = 'HIDE_PLAYED';\nconst SELECTED_MATCHDAY_KEY = 'SELECTED_MATCHDAY';\nconst SELECTED_TEAM_KEY = 'SELECTED_TEAM';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matchesGQL: Observable;\n\n  @LocalStorage(HIDE_PLAYED_KEY) hidePlayed: boolean;\n\n  @LocalStorage(SELECTED_MATCHDAY_KEY) selectedMatchDayId = '0';\n\n  @LocalStorage(SELECTED_TEAM_KEY) selectedTeamId = '0';\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public matchPlanGQL: MatchPlanGQL,\n    private matchService: MatchService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.handleGetMatches();\n    }\n    this.matchService.seasonMatchUpdated.subscribe(\n      (event) => {\n        this.rankingGQL.watch({ id: event.seasonId }, { fetchPolicy: 'network-only' }).refetch();\n      }\n    );\n  }\n\n  filterMatchDays(matchDays: MatchDay.Fragment[]): MatchDay.Fragment[] {\n\n    return this.selectedMatchDayId !== '0' ? matchDays.filter(x => x.id === this.selectedMatchDayId) : matchDays;\n\n  }\n\n  filterMatches(matches: Match.Fragment[]): Match.Fragment[] {\n\n    return this.selectedTeamId !== '0' ?\n      matches.filter(x => x.guest_team.id === this.selectedTeamId || x.home_team.id === this.selectedTeamId) :\n      matches;\n\n  }\n\n  handleGetMatches() {\n    this.matchesGQL = this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id } ).valueChanges.pipe(\n      map(\n        ({ data }) => {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n          if (this.selectedMatchDayId && !data.season.match_days.find(x => x.id === this.selectedMatchDayId)) {\n            this.selectedMatchDayId = '0';\n          }\n          if (this.selectedTeamId && !data.season.teams.find(x => x.id === this.selectedTeamId)) {\n            this.selectedTeamId = '0';\n          }\n          return data.season;\n        }\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ 'ALL_MATCHDAYS' | translate }}\n            \n            \n              {{ matchDay.number }}\n              \n                {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ 'ALL_TEAMS' | translate }}\n            \n            \n              {{ team.name }}\n            \n          \n        \n      \n      \n        \n          filter_list\n          filter_list\n        \n        \n          \n            {{ 'HIDE_PLAYED_MATCHES' | translate }}\n          \n        \n      \n    \n  \n  \n    \n        \n          {{ 'MATCHDAY' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n        \n        \n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./matchplan.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ \\'ALL_MATCHDAYS\\' | translate }}                                      {{ matchDay.number }}                              {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                      {{ team.name }}                                                            filter_list          filter_list                                      {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                                      {{ \\'MATCHDAY\\' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchplanComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            MatchplanRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule, MatCardModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatCardModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatCardModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                ./newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, activatedRoute: ActivatedRoute, formBuilder: FormBuilder, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.accessToken = params['token'];\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.logout();\n          }\n        }\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      await this.authService.changePassword(this.loginForm.value.password);\n      this.authService.logout();\n      this.notify.showSuccessNotification(this.translateService.instant('PASSWORD_CHANGED_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PASSWORD_CHANGED_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n                \n                    ./newpassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewpasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NewpasswordRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDuration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrorNotification\n                            \n                            \n                                    Private\n                                showNotification\n                            \n                            \n                                showSuccessNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showNotification(title: string, message: string, type: \"danger\" | \"success\", duration?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"danger\" | \"success\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 6000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../components/shared/snackbar/snackbar.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  defaultDuration = 6000;\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) { }\n\n  showSuccessNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'success');\n  }\n\n  showErrorNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'danger');\n  }\n\n  private showNotification(title: string, message: string, type: 'danger' | 'success', duration?: number) {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        title: title,\n        message: message\n      },\n      duration: duration || this.defaultDuration,\n      panelClass: ['alert', `alert-${type}`]\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordChangeGQL.html":{"url":"injectables/PasswordChangeGQL.html","title":"injectable - PasswordChangeGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordChangeGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1130\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetGQL.html":{"url":"injectables/PasswordResetGQL.html","title":"injectable - PasswordResetGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1117\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                    Async\n                                deletePitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchesGQL: PitchesGQL, createPitchGQL: CreatePitchGQL, deletePitchGQL: DeletePitchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchesGQL\n                                                  \n                                                        \n                                                                        PitchesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createPitchGQL\n                                                  \n                                                        \n                                                                        CreatePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deletePitchGQL\n                                                  \n                                                        \n                                                                        DeletePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePitch(pitchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pitch, PitchesGQL, CreatePitchGQL, DeletePitchGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuidv4 from 'uuid/v4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  allPitches: Observable = this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private pitchesGQL: PitchesGQL,\n    private createPitchGQL: CreatePitchGQL,\n    private deletePitchGQL: DeletePitchGQL\n  ) {\n  }\n\n  async deletePitch(pitchId: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.deletePitchGQL.mutate({\n            pitch_id: pitchId\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  async createNewPitch(pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.createPitchGQL.mutate({\n            id: uuidv4(),\n            label: pitch.label,\n            longitude: pitch.location_longitude,\n            latitude: pitch.location_latitude\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                ./pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./pitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchesGQL.html":{"url":"injectables/PitchesGQL.html","title":"injectable - PitchesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1612\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingGQL.html":{"url":"injectables/RankingGQL.html","title":"injectable - RankingGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RankingGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1626\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisEventGQL.html":{"url":"injectables/RedisEventGQL.html","title":"injectable - RedisEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RedisEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphqlsubs.ts:52\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveRankingPenaltyGQL.html":{"url":"injectables/RemoveRankingPenaltyGQL.html","title":"injectable - RemoveRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1168\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveTeamFromSeasonGQL.html":{"url":"injectables/RemoveTeamFromSeasonGQL.html","title":"injectable - RemoveTeamFromSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveTeamFromSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1274\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenameTeamComponent.html":{"url":"components/RenameTeamComponent.html","title":"component - RenameTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RenameTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rename-team\n            \n\n            \n                styleUrls\n                ./rename-team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rename-team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, notify: NotificationService, translateService: TranslateService, team: Team.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    Team.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, RenameTeamGQL, TeamFragment } from 'src/api/graphql';\nimport { TeamService } from '../../../../services/team.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-rename-team',\n  templateUrl: './rename-team.component.html',\n  styleUrls: ['./rename-team.component.css']\n})\nexport class RenameTeamComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private teamService: TeamService,\n    private notify: NotificationService,\n    private translateService: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public team: Team.Fragment\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async renameTeam(newName: string) {\n    try {\n      await this.teamService.renameTeam(this.team.id, newName);\n      this.notify.showSuccessNotification(this.translateService.instant('RENAME_TEAM_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('RENAME_TEAM_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ 'TEAM' | translate }} {{team.name}}\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          save\n        \n      \n    \n  \n\n\n  {{'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./rename-team.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'TEAM\\' | translate }} {{team.name}}                                                          save                      {{\\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenameTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenameTeamGQL.html":{"url":"injectables/RenameTeamGQL.html","title":"injectable - RenameTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RenameTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1383\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RescheduleMatchDayGQL.html":{"url":"injectables/RescheduleMatchDayGQL.html","title":"injectable - RescheduleMatchDayGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RescheduleMatchDayGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1303\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoundTeam.html":{"url":"interfaces/RoundTeam.html","title":"interface - RoundTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoundTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeam\n                                \n                                \n                                        homeTeam\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeam\n                                    \n                                \n                                \n                                    \n                                        guestTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeam\n                                    \n                                \n                                \n                                    \n                                        homeTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleMatchGQL.html":{"url":"injectables/ScheduleMatchGQL.html","title":"injectable - ScheduleMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1078\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonPenaltiesGQL.html":{"url":"injectables/SeasonPenaltiesGQL.html","title":"injectable - SeasonPenaltiesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonPenaltiesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1589\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _currentSeason\n                            \n                            \n                                currentSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSeason\n                            \n                            \n                                seasonCompare\n                            \n                            \n                                    Async\n                                startSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allSeasonsListGQL: AllSeasonsListGQL, startSeasonGQL: StartSeasonGQL, createSeasonGQL: CreateSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startSeasonGQL\n                                                  \n                                                        \n                                                                        StartSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSeasonGQL\n                                                  \n                                                        \n                                                                        CreateSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seasonCompare\n                        \n                        \n                    \n                \n            \n            \n                \nseasonCompare(c1: any, c2: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startSeason(seasonId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_SEASON_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AllSeasonsList, AllSeasonsListGQL, CreateSeasonGQL, StartSeasonGQL } from '../../api/graphql';\nimport * as uuid from 'uuid/v4';\nimport { LocalStorage } from 'ngx-store';\n\nconst SELECTED_SEASON_KEY = 'SELECTED_SEASON';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  @LocalStorage(SELECTED_SEASON_KEY) _currentSeason: AllSeasonsList.AllSeasons;\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n\n  constructor(\n    private allSeasonsListGQL: AllSeasonsListGQL,\n    private startSeasonGQL: StartSeasonGQL,\n    private createSeasonGQL: CreateSeasonGQL\n  ) {\n    this.currentSeason.subscribe(\n      (season) => {\n        if (season) {\n          this._currentSeason = season;\n        }\n      }\n    );\n  }\n\n  public async createSeason(seasonName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.createSeasonGQL.mutate(\n          {\n            id: uuid(),\n            name: seasonName\n          },\n          {\n            refetchQueries: [\n              { query: this.allSeasonsListGQL.document }\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  async startSeason(seasonId: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.startSeasonGQL.mutate(\n            {\n              id: seasonId\n            },\n            {\n              refetchQueries: [\n                {\n                  query: this.allSeasonsListGQL.document\n                }\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  seasonCompare(c1: any, c2: any) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                ./seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                SeasonState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterStates\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [SeasonState.Progress, SeasonState.Ended]\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SeasonState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\nimport { AllSeasonsList, SeasonState, AllSeasonsListGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  @Input() filterStates: Array = [SeasonState.Progress, SeasonState.Ended];\n  season: AllSeasonsList.AllSeasons;\n  seasonList: Observable;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  SeasonState = SeasonState;\n\n  constructor(\n    public seasonService: SeasonService,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => {\n          let p = data.allSeasons.filter(s => this.filterStates.some(x => x === s.state));\n          p = p.sort((a, b) => {\n\n            const aState = a.state.toLocaleLowerCase();\n            const bState = b.state.toLocaleLowerCase();\n            if (aState > bState) {\n              return -1;\n            }\n            if (aState  bName) {\n              return 1;\n            }\n            if (aName \n    \n\n    \n        \n  \n    \n      {{ season.name }} {{ season.state !== SeasonState.Progress ? ('(' + ('SeasonState.' + season.state | translate) + ')') : ''  }}\n    \n  \n\n    \n\n    \n                \n                    ./seasonchooser.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }} {{ season.state !== SeasonState.Progress ? (\\'(\\' + (\\'SeasonState.\\' + season.state | translate) + \\')\\') : \\'\\'  }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            SeasonchooserComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SeasonchooserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './match/match.component';\nimport { MaterialModule } from '../../material.module';\nimport { ContactComponent } from './contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { ContactPersonComponent } from './contact-person/contact-person.component';\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\nimport { EditPitchContactDialogComponent } from './edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from './create-pitch-dialog/create-pitch-dialog.component';\nimport { CancelMatchDialogComponent } from './cancel-match-dialog/cancel-match-dialog.component';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent,\n    ConfirmDialogComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent,\n    EditContactComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent,\n    ConfirmDialogComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    EditContactComponent,\n    OwlNativeDateTimeModule,\n    CancelMatchDialogComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.title }}\n\n\n    {{ data.message }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.title }}    {{ data.message }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartSeasonGQL.html":{"url":"injectables/StartSeasonGQL.html","title":"injectable - StartSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1319\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitResultGQL.html":{"url":"injectables/SubmitResultGQL.html","title":"injectable - SubmitResultGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmitResultGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1057\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                rankingQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPenaltyForTeam\n                            \n                            \n                                getRanking\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPenaltyDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, snackBar: MatSnackBar, matchService: MatchService, ranking: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPenaltyForTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalties\n                                    \n                                            Penalty.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Penalty.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRanking\n                        \n                        \n                    \n                \n            \n            \n                \ngetRanking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPenaltyDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenPenaltyDialog(penalties: Penalty.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalties\n                                    \n                                            Penalty.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rankingQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Ranking, RankingGQL, Team, Penalty } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { I18Service } from '../../services/i18.service';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatchService } from 'src/app/services/match.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  rankingQGL: Observable;\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private matchService: MatchService,\n    private ranking: RankingGQL\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.getRanking();\n    }\n    this.matchService.seasonMatchUpdated.subscribe(\n      (event) => {\n        this.ranking.watch({ id: event.seasonId }, { fetchPolicy: 'network-only' }).refetch();\n      }\n    );\n  }\n\n  getRanking() {\n    this.rankingQGL = this.ranking.watch({ id: this.seasonService.currentSeason.getValue().id }).valueChanges.pipe(\n      map((result) => result.data.season.ranking)\n    );\n  }\n\n  getPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment): Penalty.Fragment[] {\n    const p = penalties.filter(t => t.team.id === team.id);\n    return p.length === 0 ? null : p;\n  }\n\n  openPenaltyDialog(penalties: Penalty.Fragment[]) {\n    console.log(penalties);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            TABLE.PLACE\n            TABLE.TEAM\n            TABLE.GAMES\n            TABLE.WIN_DRAW_LOST\n            TABLE.TORE:TORE\n            TABLE.POINTS\n          \n        \n        \n          \n            \n              {{ pos.number }}\n              {{ pos.team.name }}\n              {{ pos.matches }}\n              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n              \n                \n                  {{ pos.points }}\n                \n              \n              \n                \n                  {{ pos.points }}\n                    \n                      warning\n                    \n                \n              \n            \n          \n        \n      \n      \n        {{ 'LAST_UPDATED_AT' | translate }}: ({{ ranking.updated_at | date:'medium':'':i18Service.currentLang}})\n      \n    \n  \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            TABLE.PLACE            TABLE.TEAM            TABLE.GAMES            TABLE.WIN_DRAW_LOST            TABLE.TORE:TORE            TABLE.POINTS                                                              {{ pos.number }}              {{ pos.team.name }}              {{ pos.matches }}              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})                                                {{ pos.points }}                                                                              {{ pos.points }}                                          warning                                                                                                    {{ \\'LAST_UPDATED_AT\\' | translate }}: ({{ ranking.updated_at | date:\\'medium\\':\\'\\':i18Service.currentLang}})                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TableRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TableRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamIdPair.html":{"url":"interfaces/TeamIdPair.html","title":"interface - TeamIdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeamIdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guest_team_id\n                                \n                                \n                                        home_team_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guest_team_id\n                                    \n                                \n                                \n                                    \n                                        guest_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        home_team_id\n                                    \n                                \n                                \n                                    \n                                        home_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createTeamQL: CreateTeamGQL, allTeamsGQL: AllTeamsGQL, renameTeamGQL: RenameTeamGQL, deleteTeamGQL: DeleteTeamGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createTeamQL\n                                                  \n                                                        \n                                                                        CreateTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTeamsGQL\n                                                  \n                                                        \n                                                                        AllTeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameTeamGQL\n                                                  \n                                                        \n                                                                        RenameTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteTeamGQL\n                                                  \n                                                        \n                                                                        DeleteTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:35\n                \n            \n\n\n            \n                \n                    Calls the API to create a new Team\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTeam\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTeam(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \nrenameTeam(teamId: string, newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/team.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CreateTeamGQL, Team, AllTeamsGQL, RenameTeamGQL, TeamFragment, DeleteTeamGQL } from '../../api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuid from 'uuid/v4';\n\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  allTeams: Observable = this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private createTeamQL: CreateTeamGQL,\n    private allTeamsGQL: AllTeamsGQL,\n    private renameTeamGQL: RenameTeamGQL,\n    private deleteTeamGQL: DeleteTeamGQL\n  ) {\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  addNewTeam(teamName: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!teamName) {\n          reject(new Error('Empty Teamname'));\n        }\n        try {\n          await this.createTeamQL.mutate(\n            {\n              id: uuid(),\n              name: teamName\n            },\n            {\n              refetchQueries: [\n                {query: this.allTeamsGQL.document}\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  renameTeam(teamId: string, newName: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.renameTeamGQL.mutate(\n            {\n              team_id: teamId,\n              new_name: newName\n            },\n            {\n              update: (store, { data }) => {\n                const team: any = store.readFragment(\n                  {\n                    fragmentName: 'Team',\n                    fragment: TeamFragment,\n                    id: `Team:${teamId}`\n                  }\n                );\n                store.writeFragment(\n                  {\n                    fragmentName: 'Team',\n                    fragment: TeamFragment,\n                    id: `Team:${teamId}`,\n                    data: {\n                      __typename: 'Team',\n                      ...team,\n                      name: newName\n                    }\n                  }\n                );\n              },\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  deleteTeam(team: Team.Fragment): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.deleteTeamGQL.mutate(\n            {\n              team_id: team.id\n            },\n            {\n              refetchQueries: [\n                {query: this.allTeamsGQL.document}\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                ./teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userQGL: UserGQL, authService: AuthenticationService, teamService: TeamService, updateTeamContact: UpdateTeamContactGQL, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTeamContact\n                                                  \n                                                        \n                                                                        UpdateTeamContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveContact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(teamId: string, contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.authService.user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { UpdateTeamContactGQL, UserGQL, Contact } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  user = this.authService.user;\n\n  constructor(\n    private userQGL: UserGQL,\n    private authService: AuthenticationService,\n    public teamService: TeamService,\n    private updateTeamContact: UpdateTeamContactGQL,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async saveContact(teamId: string, contact: Contact.Fragment) {\n    try {\n      await this.updateTeamContact.mutate(\n        {\n          team_id: teamId,\n          ...contact\n        },\n        {\n          refetchQueries: [\n            { query: this.userQGL.document }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('TEAM_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n                \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./teamadmin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamadminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamadminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/teams/teams.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./teams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                tournament\n                            \n                            \n                                tournamentId\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWinner\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tournamentChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(i18Service: I18Service, allTournamentQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWinner\n                        \n                        \n                    \n                \n            \n            \n                \ngetWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { I18Service } from '../../services/i18.service';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, Tournament } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\nimport { MatchService } from 'src/app/services/match.service';\n\nexport const SELECTED_TOURNAMENT_KEY = 'SELECTED_TOURNAMENT';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  tournament: Observable;\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public i18Service: I18Service,\n    private allTournamentQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private matchService: MatchService\n  ) { }\n\n  ngOnInit() {\n    this.tournaments = this.allTournamentQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n    if (this.tournamentId) {\n      this.tournamentChanged();\n    }\n    this.matchService.tournamentMatchUpdated.subscribe(\n      (event) => {\n        if (event.tournamentId === this.tournamentId) {\n          this.matchUpdated(event.matchId);\n        }\n      }\n    );\n  }\n\n  matchUpdated(matchId: string) {\n  }\n\n  tournamentChanged() {\n\n    this.tournament = this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).valueChanges.pipe(\n      map(({ data }) => {\n        if (data.tournament && data.tournament.rounds) {\n          data.tournament.rounds = data.tournament.rounds.sort((a, b) => a.number ();\n    // for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    // }\n    // this.matches = this.matches.reverse();\n    // this.getWinner();\n  }\n\n  getWinner() {\n    // this.winnerLastRound = new Array();\n    // if (this.matches[0]) {\n    //   this.matches[0].forEach(\n    //     (match) => {\n    //       if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n    //         this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n    //       }\n    //     });\n    //   this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    // }\n  }\n\n  // newWinner(match: MatchViewModel) {\n  //   if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n  //     if (match.home_score > match.guest_score) {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n  //       this.winnerLastRound.push(match.home_team);\n  //     } else {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n  //       this.winnerLastRound.push(match.guest_team);\n  //     }\n\n  //     this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n    \n  \n  \n    \n      {{ 'NO_TOURNAMENT_ROUNDS_YET' | translate}}\n    \n    \n      \n        \n          {{ 'WINNER_LAST_ROUND' | translate }}\n        \n        \n          \n            {{ winner.name }}\n          \n        \n       -->\n      \n        \n          {{ 'VIERTELFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'HALBFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'FINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ round.number + 1 }}. {{ 'ROUND' | translate }}\n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./tournament.component.less\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                        {{ \\'NO_TOURNAMENT_ROUNDS_YET\\' | translate}}                                {{ \\'WINNER_LAST_ROUND\\' | translate }}                                      {{ winner.name }}                         -->                        {{ \\'VIERTELFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'HALBFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'FINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ round.number + 1 }}. {{ \\'ROUND\\' | translate }}                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentGQL.html":{"url":"injectables/TournamentGQL.html","title":"injectable - TournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1694\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdatePitchContactGQL.html":{"url":"injectables/UpdatePitchContactGQL.html","title":"injectable - UpdatePitchContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdatePitchContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1200\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTeamContactGQL.html":{"url":"injectables/UpdateTeamContactGQL.html","title":"injectable - UpdateTeamContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTeamContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1358\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserGQL.html":{"url":"injectables/UpdateUserGQL.html","title":"injectable - UpdateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1487\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGQL.html":{"url":"injectables/UserGQL.html","title":"injectable - UserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1708\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allUsersGQL: AllUsersGQL, deleteUserGQL: DeleteUserGQL, notify: NotificationService, translateService: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allUsersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteUserGQL\n                                                  \n                                                        \n                                                                        DeleteUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AllUsersGQL, User, DeleteUserGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditUserDialogComponent } from '../edit-user-dialog/edit-user-dialog.component';\nimport { ConfirmDialogComponent } from 'src/app/components/shared/confirm-dialog/confirm-dialog.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  allUsers: Observable;\n\n  constructor(\n    private allUsersGQL: AllUsersGQL,\n    private deleteUserGQL: DeleteUserGQL,\n    private notify: NotificationService,\n    private translateService: TranslateService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.allUsers = this.allUsersGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allUsers.sort((a, b) => a.email.toLowerCase() > b.email.toLowerCase() ? 1 : -1))\n    );\n  }\n\n  createNewUser() {\n    this.dialog.open(EditUserDialogComponent);\n  }\n\n  editUser(user: User.Fragment) {\n\n    this.dialog.open(EditUserDialogComponent, {\n      data: user\n    });\n  }\n\n  deleteUser(user: User.Fragment) {\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: user.email })\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.deleteUserGQL.mutate({\n              user_id: user.id\n            }, {\n                refetchQueries: [\n                  {\n                    query: this.allUsersGQL.document\n                  }\n                ]\n              }).toPromise();\n            this.notify.showSuccessNotification(this.translateService.instant('DELETE_USER_SUCCESS', { user: user.email }));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('DELETE_USER_ERROR'), error);\n          }\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          add\n        \n      \n    \n  \n  \n    \n      {{ 'USERNAME' | translate }}\n    \n    \n      {{ 'FIRST_NAME' | translate }} {{ 'LAST_NAME' | translate }}\n    \n    \n      {{ 'USER_ROLE' | translate }}\n    \n    \n      {{ 'TEAMS' | translate }}\n    \n    \n      &nbsp;\n    \n  \n  \n    \n      {{ user.email }}\n    \n    \n      {{ user.first_name }} {{ user.last_name }}\n    \n    \n      {{ user.role }}\n    \n    \n      \n        \n          {{ team.name }}\n        \n      \n    \n    \n      \n        \n          edit\n        \n      \n      \n        \n          delete\n        \n      \n    \n  \n    \n\n    \n                \n                    ./user-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              add                                {{ \\'USERNAME\\' | translate }}              {{ \\'FIRST_NAME\\' | translate }} {{ \\'LAST_NAME\\' | translate }}              {{ \\'USER_ROLE\\' | translate }}              {{ \\'TEAMS\\' | translate }}                                 {{ user.email }}              {{ user.first_name }} {{ user.last_name }}              {{ user.role }}                                {{ team.name }}                                              edit                                      delete                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddTeamToSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllSeasonsListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTournamentListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllUsersGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CancelMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateMatchesForSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreatePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentRoundGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeletePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EndSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LatestEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LocateMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchPlanGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordChangeGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordResetGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PitchesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RankingGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveTeamFromSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RenameTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RescheduleMatchDayGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            ScheduleMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SeasonPenaltiesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            StartSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SubmitResultGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdatePitchContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateTeamContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            DatePeriod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            TeamIdPair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllSeasonsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllTournamentsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            ContactFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            EventFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchDayFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PenaltyFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PitchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            RankingFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            SeasonFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TeamFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TournamentFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            UserFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            injectable\n            RedisEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            i18ServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            loadAppsettingsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/managepitches/managepitches.component.ts\n            \n            component\n            ManagepitchesComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            component\n            EditRankingPenaltyComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            interface\n            EditRankingPenaltyComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n            \n            component\n            ManagePenaltyComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            component\n            ManageseasonComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            variable\n            MANAGE_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            component\n            MatchSchedulingComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            IPossibleKickoffs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            ITeamCanPlayAtDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/manageteams.component.ts\n            \n            component\n            ManageteamsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n            \n            component\n            RenameTeamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            component\n            EditTournamentRoundComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            interface\n            AddMatchData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            interface\n            RoundTeam\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            component\n            ManagetournamentComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            variable\n            MANAGE_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n            \n            component\n            EditUserDialogComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            component\n            ManageusersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            component\n            ChangepasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            component\n            ContactlistComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            component\n            PitchesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            component\n            MatchplanComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            HIDE_PLAYED_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_MATCHDAY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_TEAM_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            component\n            NewpasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n            \n            component\n            CancelMatchDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n            \n            interface\n            ConfirmDialogComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            component\n            ContactPersonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            interface\n            ContactComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n            \n            component\n            CreatePitchDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-contact/edit-contact.component.ts\n            \n            component\n            EditContactComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n            \n            component\n            EditPitchContactDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            component\n            EditmatchPitchComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            component\n            EditmatchResultComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            component\n            EditmatchTimeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            component\n            SeasonchooserComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            interface\n            ISnackBarData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            component\n            TeamadminComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n            guard\n            TeamadminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            variable\n            SELECTED_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            injectable\n            AppsettingsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            interface\n            AppsettingsModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            LoginContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            injectable\n            GraphqlSubscriptionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            interface\n            MatchEventPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql.service.ts\n            \n            injectable\n            GraphqlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            injectable\n            I18Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            variable\n            LANG_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            injectable\n            CustomOwlDateTimeIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            injectable\n            PitchService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            injectable\n            SeasonService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            variable\n            SELECTED_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.9\n        \n            @angular/cdk : ^7.3.4\n        \n            @angular/common : ^7.2.9\n        \n            @angular/compiler : ^7.2.9\n        \n            @angular/core : ^7.2.9\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.9\n        \n            @angular/http : ^7.2.9\n        \n            @angular/material : ^7.3.4\n        \n            @angular/platform-browser : ^7.2.9\n        \n            @angular/platform-browser-dynamic : ^7.2.9\n        \n            @angular/router : ^7.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/googlemaps : ^3.30.19\n        \n            adm-zip : >=0.4.13\n        \n            apollo-angular : ^1.5.0\n        \n            apollo-angular-link-http : ^1.5.0\n        \n            apollo-cache-hermes : ^0.8.8\n        \n            apollo-cache-inmemory : ^1.5.1\n        \n            apollo-cache-persist : ^0.1.1\n        \n            apollo-client : ^2.5.1\n        \n            apollo-link-context : ^1.0.17\n        \n            apollo-link-error : ^1.1.10\n        \n            apollo-link-ws : ^1.0.17\n        \n            bootstrap : ^4.3.1\n        \n            codacy-coverage : ^3.4.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.4\n        \n            core-js : ^2.6.5\n        \n            exec : ^0.2.1\n        \n            graphql : ^14.1.1\n        \n            graphql-code-generator : ^0.18.0\n        \n            graphql-codegen-add : ^0.18.0\n        \n            graphql-codegen-fragment-matcher : ^0.18.0\n        \n            graphql-codegen-introspection : ^0.18.0\n        \n            graphql-codegen-typescript-apollo-angular : ^0.18.0\n        \n            graphql-codegen-typescript-client : ^0.18.0\n        \n            graphql-codegen-typescript-common : ^0.18.0\n        \n            graphql-codegen-typescript-server : ^0.18.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.5.1\n        \n            jslint : ^0.12.1\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-pick-datetime : ^7.0.0\n        \n            ngx-store : ^2.1.0\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.7\n        \n            queueing-subject : ^0.3.0\n        \n            rimraf : ^2.6.3\n        \n            rxjs : ^6.4.0\n        \n            rxjs-websockets : ^6.0.2\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SeasonState   (src/.../graphql.ts)\n                        \n                        \n                            UserRole   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                Value : preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n                        \n                            \n                                Value : ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 TeamManager\n                            \n                        \n                        \n                            \n                                Value : team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            loadAppsettingsFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            i18ServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \ni18ServiceFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettingsFactory\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettingsFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditTournamentRoundComponent\n\nEditTournamentRoundComponent\n\nAdminModule -->\n\nEditTournamentRoundComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nGraphqlService\n\nGraphqlService\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    53 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nFix loading template on error\nImplement RankingPenalty Display\nRedesign Dialogs\nCleanup Code\nTesting\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllPitches   (src/.../graphql.ts)\n                        \n                        \n                            AllSeasons   (src/.../graphql.ts)\n                        \n                        \n                            AllTeams   (src/.../graphql.ts)\n                        \n                        \n                            AllTournaments   (src/.../graphql.ts)\n                        \n                        \n                            AllUsers   (src/.../graphql.ts)\n                        \n                        \n                            AuthenticatedUser   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Date   (src/.../graphql.ts)\n                        \n                        \n                            DateTime   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Event   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            GuestTeam   (src/.../graphql.ts)\n                        \n                        \n                            HomeTeam   (src/.../graphql.ts)\n                        \n                        \n                            LatestEvents   (src/.../graphql.ts)\n                        \n                        \n                            Match   (src/.../graphql.ts)\n                        \n                        \n                            MatchDays   (src/.../graphql.ts)\n                        \n                        \n                            Matches   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Pitch   (src/.../graphql.ts)\n                        \n                        \n                            Positions   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Redisevent   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Rounds   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Subscription   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Tournament   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    AllPitches\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllSeasons\n                \n            \n            \n                \n                        AllSeasons.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTeams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTournaments\n                \n            \n            \n                \n                        AllTournaments.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllUsers\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedUser\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Date\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Event\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuestTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HomeTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LatestEvents\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Match\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MatchDays\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Matches\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pitch\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Positions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Rounds\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Season.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Ranking.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tournament\n                \n            \n            \n                \n                        Tournament.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/api/graphqlsubs.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redisevent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (src/.../authentication.service.ts)\n                        \n                        \n                            AllSeasonsFragment   (src/.../graphql.ts)\n                        \n                        \n                            AllTournamentsFragment   (src/.../graphql.ts)\n                        \n                        \n                            ContactFragment   (src/.../graphql.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            EventFragment   (src/.../graphql.ts)\n                        \n                        \n                            HIDE_PLAYED_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            LANG_KEY   (src/.../i18.service.ts)\n                        \n                        \n                            MANAGE_SEASON_KEY   (src/.../manageseason.component.ts)\n                        \n                        \n                            MANAGE_TOURNAMENT_KEY   (src/.../managetournament.component.ts)\n                        \n                        \n                            MatchDayFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchFragment   (src/.../graphql.ts)\n                        \n                        \n                            PenaltyFragment   (src/.../graphql.ts)\n                        \n                        \n                            PitchFragment   (src/.../graphql.ts)\n                        \n                        \n                            RankingFragment   (src/.../graphql.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            result   (src/.../introspection-result.ts)\n                        \n                        \n                            result   (src/.../graphqlsubs.ts)\n                        \n                        \n                            SeasonFragment   (src/.../graphql.ts)\n                        \n                        \n                            SELECTED_MATCHDAY_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_SEASON_KEY   (src/.../season.service.ts)\n                        \n                        \n                            SELECTED_TEAM_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_TOURNAMENT_KEY   (src/.../tournament.component.ts)\n                        \n                        \n                            TeamFragment   (src/.../graphql.ts)\n                        \n                        \n                            TournamentFragment   (src/.../graphql.ts)\n                        \n                        \n                            UserFragment   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACCESS_TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACCESS_TOKEN'\n                        \n                    \n\n\n            \n        \n\n    src/api/graphql.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllSeasonsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AllTournamentsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ContactFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchDayFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PenaltyFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PitchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RankingFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TeamFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TournamentFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/matchplan/matchplan.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HIDE_PLAYED_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HIDE_PLAYED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_MATCHDAY_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_MATCHDAY'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TEAM_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TEAM'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/i18.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LANG_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LANG'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/admin/manageseason/manageseason.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MANAGE_SEASON_ID_KEY'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/admin/managetournament/managetournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MANAGE_TOURNAMENT_KEY'\n                        \n                    \n\n\n            \n        \n\n    src/api/introspection-result.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/graphqlsubs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/season.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_SEASON'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tournament/tournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TOURNAMENT'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
