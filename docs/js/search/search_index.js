var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,0.677,1,3.091]],["body/interfaces/AddMatchData.html",[0,1.134,1,5.605,2,2.976,3,0.144,4,0.144,5,0.131,6,4.496,7,0.406,8,0.775,9,2.33,10,6.23,11,1.721,12,0.558,13,0.009,14,1.137,15,0.235,16,4.081,17,3.616,18,2.096,19,0.752,20,2.011,21,3.324,22,0.144,23,3.954,24,3.616,25,5.974,26,3.616,27,3.616,28,3.198,29,3.375,30,2.976,31,3.823,32,2.54,33,2.54,34,3.029,35,2.332,36,1.389,37,2.011,38,2.011,39,1.918,40,1.918,41,2.269,42,2.617,43,2.617,44,0.177,45,5.179,46,2.229,47,2.017,48,2.229,49,1.638,50,1.562,51,4.844,52,1.638,53,4.844,54,0.158,55,1.6,56,1.526,57,1.638,58,4.844,59,2.209,60,3.324,61,4.844,62,1.788,63,4.844,64,1.178,65,2.386,66,4.496,67,1.98,68,3.198,69,4.844,70,4.218,71,3.616,72,2.269,73,4.496,74,4.496,75,3.987,76,4.496,77,1.638,78,4.844,79,4.496,80,6.436,81,6.436,82,4.844,83,5.179,84,4.844,85,4.844,86,4.844,87,1.526,88,4.844,89,1.942,90,4.844,91,2.698,92,2.467,93,4.844,94,1.718,95,5.947,96,1.718,97,5.947,98,5.947,99,4.844,100,1.718,101,4.844,102,1.718,103,4.844,104,1.718,105,4.844,106,3.616,107,1.788,108,4.496,109,4.844,110,1.491,111,1.235,112,3.324,113,3.987,114,2.54,115,2.043,116,4.496,117,4.844,118,4.44,119,4.844,120,0.006,121,0.007,122,0.006]],["title/injectables/AddTeamToSeasonGQL.html",[123,0.309,124,1.259]],["body/injectables/AddTeamToSeasonGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,1.131,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,1.216,133,2.342,134,1.216,135,2.118,136,0.286,137,2.496,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731]],["title/components/AddUserComponent.html",[19,0.449,335,1.23]],["body/components/AddUserComponent.html",[3,0.116,4,0.116,5,0.105,7,0.325,8,0.672,12,0.652,13,0.009,14,0.911,15,0.226,18,1.677,19,0.733,20,1.96,22,0.116,23,4.264,24,2.894,31,4.01,32,2.033,33,2.033,41,1.816,44,0.116,49,2.527,50,2.41,52,1.744,54,0.126,55,1.28,56,1.625,59,3.016,60,3.539,64,1.255,65,2.14,67,1.783,72,2.894,77,2.089,89,2.652,91,2.873,92,2.627,111,0.989,112,2.66,114,2.704,115,2.175,118,2.894,120,0.005,121,0.006,122,0.005,128,1.411,129,1.255,136,1.018,146,2.39,163,1.993,170,0.735,179,1.343,180,1.343,187,2.3,188,2.04,189,1.409,190,1.443,191,1.138,197,0.583,215,0.946,228,0.685,254,0.685,311,2.395,335,2.14,336,1.92,337,1.516,338,1.479,339,1.479,340,7.886,341,7.195,342,4.249,343,1.479,344,2.553,345,1.874,346,7.198,347,6.405,348,6.352,349,6.352,350,7.198,351,1.587,352,6.405,353,7.673,354,3.876,355,3.826,356,4.416,357,3.977,358,3.24,359,6.405,360,1.625,361,1.55,362,4.815,363,1.901,364,4.815,365,1.92,366,6.405,367,6.178,368,4.815,369,4.815,370,5.6,371,4.815,372,4.815,373,4.815,374,4.815,375,4.815,376,4.815,377,4.815,378,3.191,379,2.467,380,2.467,381,1.703,382,3.376,383,4.787,384,3.598,385,4.815,386,5.085,387,4.249,388,4.815,389,4.815,390,4.815,391,4.249,392,6.405,393,4.815,394,4.815,395,4.815,396,4.815,397,4.815,398,4.815,399,4.612,400,3.931,401,4.815,402,4.612,403,5.118,404,4.245,405,3.063,406,4.815,407,4.034,408,4.815,409,4.249,410,4.249,411,6.405,412,6.405,413,6.405,414,5.653,415,4.787,416,4.787,417,3.686,418,6.405,419,2.817,420,6.405,421,1.112,422,1.968,423,1.968,424,1.479,425,2.357,426,1.479,427,1.343,428,1.479,429,1.479,430,1.479,431,1.311,432,1.479,433,1.343,434,1.479,435,1.343,436,1.479,437,1.343,438,1.479,439,1.311,440,1.479,441,1.343,442,1.479,443,1.343,444,1.479,445,1.343,446,1.479,447,1.343,448,1.479,449,1.311,450,1.479,451,1.343,452,1.479,453,1.343,454,1.479,455,1.343,456,1.479,457,1.343,458,1.479,459,1.343,460,1.479,461,1.311,462,1.479,463,1.28,464,1.479,465,1.311,466,1.479,467,1.343,468,1.479,469,1.343,470,1.443,471,1.479,472,1.343,473,1.479,474,1.479,475,1.311,476,1.479,477,1.311,478,1.479,479,1.343,480,1.479,481,1.311,482,1.479,483,1.343,484,1.409,485,1.479,486,1.479]],["title/components/AddteamComponent.html",[19,0.449,427,1.23]],["body/components/AddteamComponent.html",[3,0.135,4,0.135,5,0.123,7,0.381,8,0.745,12,0.635,13,0.009,14,1.104,15,0.22,18,1.965,19,0.791,20,2.115,22,0.135,23,4.392,24,3.391,36,1.793,41,2.128,44,0.135,47,1.879,49,2.55,50,2.431,52,1.933,54,0.148,55,1.5,56,1.8,64,1.39,67,2.124,72,2.128,77,2.219,79,5.304,89,2.767,91,2.53,92,2.314,114,2.382,115,1.916,120,0.006,121,0.007,122,0.006,136,0.982,170,0.804,197,0.683,215,0.742,228,0.802,254,0.802,335,1.573,336,2.128,337,1.776,338,1.733,339,1.733,343,1.733,344,1.691,345,2.077,351,1.758,354,4.542,360,1.97,361,1.879,363,1.924,365,1.691,381,1.5,405,2.698,417,4.084,419,2.606,421,1.303,422,2.18,423,2.18,424,1.733,425,2.503,426,1.733,427,2.273,428,1.733,429,1.733,430,1.733,431,1.536,432,1.733,433,1.573,434,1.733,435,1.573,436,1.733,437,1.573,438,1.733,439,1.536,440,1.733,441,1.573,442,1.733,443,1.573,444,1.733,445,1.573,446,1.733,447,1.573,448,1.733,449,1.536,450,1.733,451,1.573,452,1.733,453,1.573,454,1.733,455,1.573,456,1.733,457,1.573,458,1.733,459,1.573,460,1.733,461,1.536,462,1.733,463,1.5,464,1.733,465,1.536,466,1.733,467,1.573,468,1.733,469,1.979,470,2.128,471,1.733,472,1.573,473,1.733,474,1.733,475,1.536,476,1.733,477,1.536,478,1.733,479,1.573,480,1.733,481,1.536,482,1.733,483,1.573,484,1.651,485,1.733,486,1.733,487,4.979,488,7.765,489,7.097,490,6.276,491,6.263,492,7.097,493,6.276,494,5.641,495,6.263,496,5.641,497,4.979,498,5.641,499,7.097,500,5.641,501,5.641,502,5.641,503,4.216,504,4.979,505,5.641,506,5.641,507,5.641,508,5.641,509,5.304,510,7.097]],["title/components/AddtournamentroundComponent.html",[19,0.449,55,1.172]],["body/components/AddtournamentroundComponent.html",[0,0.964,1,5.546,3,0.112,4,0.112,5,0.102,6,3.493,7,0.315,8,0.659,9,2.065,10,3.493,11,1.006,12,0.669,13,0.009,14,0.665,15,0.225,16,4.37,17,2.809,18,1.628,19,0.722,20,1.931,21,2.582,22,0.112,23,4.284,24,2.809,25,6.219,26,2.809,27,2.809,28,2.484,29,3.513,30,2.312,31,3.98,32,1.973,33,1.973,34,2.908,35,1.812,36,1.079,37,2.065,38,2.065,39,1.969,40,1.969,41,1.763,42,2.033,43,2.033,44,0.151,45,4.972,46,2.206,47,1.971,48,2.206,49,2.522,50,2.406,51,5.056,52,1.71,53,5.056,54,0.123,55,2.016,56,1.593,57,1.931,58,5.709,59,2.306,60,3.469,61,5.709,62,1.835,63,5.709,64,1.23,65,2.206,66,4.693,67,2.123,68,4.204,69,5.709,70,4.972,71,3.774,72,2.983,73,3.493,74,3.493,75,3.097,76,3.493,77,2.065,78,3.763,79,5.666,80,5.709,81,5.709,82,3.763,83,4.403,84,5.056,85,3.763,86,3.763,87,1.185,88,5.056,89,2.289,90,6.104,91,2.096,92,1.917,93,3.763,94,1.335,95,5.056,96,1.335,97,5.056,98,5.056,99,3.763,100,1.335,101,3.763,102,1.335,103,3.763,104,1.335,105,3.763,106,2.809,107,1.52,108,3.493,109,3.763,110,1.158,111,0.96,112,2.582,113,3.097,114,1.973,115,1.587,116,3.493,117,5.056,118,3.774,119,5.056,120,0.005,121,0.006,122,0.005,128,1.03,129,0.915,136,1.028,170,0.78,191,1.484,197,0.566,215,0.614,228,0.665,254,0.665,335,1.303,336,1.883,338,1.436,339,1.436,343,1.436,344,1.401,351,1.556,360,1.923,361,1.835,363,2.018,365,2.371,381,1.243,417,4.363,419,3.231,421,1.079,422,1.929,423,1.929,424,1.436,425,2.329,426,1.436,427,1.303,428,1.436,429,1.436,430,1.436,431,1.273,432,1.436,433,1.303,434,1.436,435,1.303,436,1.436,437,1.303,438,1.436,439,1.273,440,1.436,441,1.303,442,1.436,443,1.303,444,1.436,445,1.303,446,1.436,447,1.303,448,1.436,449,1.273,450,1.436,451,1.303,452,1.436,453,1.303,454,1.436,455,1.303,456,1.436,457,1.303,458,1.436,459,1.303,460,1.436,461,1.273,462,1.436,463,1.243,464,1.436,465,1.273,466,1.436,467,1.303,468,1.436,469,1.303,470,1.401,471,1.436,472,1.303,473,1.436,474,1.436,475,1.273,476,1.436,477,1.273,478,1.436,479,1.303,480,1.436,481,1.273,482,1.436,483,1.303,484,1.368,485,1.436,486,1.436,511,6.279,512,6.279,513,6.279,514,4.673,515,6.279,516,4.673,517,4.673,518,4.673,519,4.673,520,4.673,521,4.673,522,4.673,523,2.944,524,4.673,525,4.673,526,4.673,527,4.673,528,4.673,529,4.673,530,4.673,531,6.279,532,6.279,533,6.279,534,6.279,535,6.279,536,5.666,537,6.279,538,6.279]],["title/components/AdminComponent.html",[19,0.449,431,1.201]],["body/components/AdminComponent.html",[3,0.148,4,0.148,5,0.135,7,0.416,13,0.009,15,0.197,19,0.823,20,2.201,22,0.148,23,3.051,24,3.707,44,0.148,49,2.561,50,2.442,52,2.042,54,0.162,55,1.64,56,1.902,64,1.583,77,2.289,120,0.006,121,0.007,122,0.006,136,0.859,147,2.091,170,0.718,197,0.747,215,0.811,228,0.877,254,0.877,335,1.72,336,2.248,337,1.942,338,1.895,339,1.895,343,1.895,344,1.849,345,2.194,351,1.858,363,1.528,365,1.849,381,1.64,421,1.424,422,2.304,423,2.304,424,1.895,425,2.583,426,1.895,427,1.72,428,1.895,429,1.895,430,1.895,431,2.289,432,1.895,433,1.72,434,1.895,435,1.72,436,1.895,437,1.72,438,1.895,439,1.679,440,1.895,441,1.72,442,1.895,443,1.72,444,1.895,445,1.72,446,1.895,447,1.72,448,1.895,449,1.679,450,1.895,451,1.72,452,1.895,453,1.72,454,1.895,455,1.72,456,1.895,457,1.72,458,1.895,459,1.72,460,1.895,461,1.679,462,1.895,463,1.64,464,1.895,465,1.679,466,1.895,467,1.72,468,1.895,469,1.72,470,1.849,471,1.895,472,1.72,473,1.895,474,1.895,475,1.679,476,1.895,477,1.679,478,1.895,479,1.72,480,1.895,481,1.679,482,1.895,483,1.72,484,1.805,485,1.895,486,1.895,539,5.442,540,8.081,541,7.499,542,6.167,543,6.167]],["title/guards/AdminGuard.html",[544,3.55,545,3.091]],["body/guards/AdminGuard.html",[3,0.165,4,0.165,5,0.15,7,0.463,12,0.518,13,0.009,15,0.222,22,0.165,44,0.165,54,0.18,56,1.739,64,1.564,65,1.912,120,0.007,121,0.008,122,0.007,123,0.56,136,0.968,170,0.656,272,1.51,273,1.475,351,1.979,357,4.412,358,3.675,360,1.739,361,1.659,363,1.979,380,3.512,545,5.6,546,5.519,547,6.049,548,7.225,549,7.225,550,4.317,551,6.854,552,6.854,553,6.854,554,3.074,555,2.782,556,7.986]],["title/modules/AdminModule.html",[557,1.23,558,3.295]],["body/modules/AdminModule.html",[3,0.147,4,0.147,5,0.134,13,0.009,15,0.241,22,0.147,44,0.147,54,0.161,55,2.377,120,0.006,121,0.007,122,0.006,147,1.71,335,2.44,341,4.937,421,1.416,427,2.44,431,2.383,453,2.44,455,2.44,457,2.44,463,2.327,469,2.493,483,2.44,503,4.582,504,5.411,557,1.71,558,7.018,559,2.136,560,2.932,561,3.855,562,3.033,563,3.033,564,2.932,565,5.411,566,5.411,567,5.411,568,6.135,569,6.135,570,4.483,571,3.829,572,3.142,573,3.142,574,6.132,575,6.017,576,2.897,577,2.819,578,5.411,579,3.529,580,3.862,581,6.132,582,6.132,583,6.132,584,6.132,585,6.132,586,6.132,587,4.299,588,6.132,589,6.132,590,6.132,591,6.132,592,4.937,593,6.132,594,6.132,595,4.937]],["title/modules/AdminRoutingModule.html",[557,1.23,568,3.091]],["body/modules/AdminRoutingModule.html",[3,0.168,4,0.168,5,0.153,13,0.009,15,0.23,19,0.715,22,0.168,44,0.168,54,0.184,120,0.007,121,0.008,122,0.007,258,1.077,431,2.204,545,4.92,554,3.147,559,2.445,568,5.676,576,2.72,577,3.053,578,6.192,596,7.016,597,4.038,598,4.372,599,4.038,600,7.016,601,4.038,602,4.217]],["title/injectables/AllSeasonsListGQL.html",[123,0.309,328,1.201]],["body/injectables/AllSeasonsListGQL.html",[0,0.608,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.466,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.877,37,0.68,38,1.079,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.191,87,0.634,94,1.6,96,1.6,100,1.6,102,0.714,104,0.714,107,2.151,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.714,125,0.634,126,0.697,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.605,140,1.6,141,1.217,142,0.731,143,1.188,144,1.188,145,1.188,146,0.68,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.217,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.902,160,1.188,161,1.68,162,0.767,163,2.067,164,1.6,165,0.767,166,0.767,167,1.132,168,0.767,169,1.188,170,0.811,171,1.188,172,1.188,173,1.512,174,1.68,175,1.188,176,1.769,177,0.767,178,1.68,179,2.159,180,2.159,181,1.902,182,1.159,183,1.68,184,1.188,185,1.217,186,1.217,187,1.68,188,1.49,189,1.902,190,1.68,191,1.72,192,1.188,193,0.767,194,1.68,195,1.949,196,1.159,197,0.882,198,1.005,199,0.649,200,2.04,201,0.749,202,1.105,203,1.44,204,1.053,205,2.019,206,0.749,207,1.406,208,2.019,209,0.749,210,1.159,211,1.902,212,0.749,213,1.983,214,0.749,215,0.929,216,1.476,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.846,223,1.688,224,1.624,225,1.188,226,1.188,227,1.188,228,1.101,229,1.159,230,1.68,231,1.188,232,0.731,233,1.159,234,1.159,235,1.406,236,1.188,237,1.188,238,1.44,239,1.44,240,0.767,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.563,255,1.105,256,0.714,257,0.767,258,1.189,259,1.44,260,1.813,261,1.44,262,1.406,263,1.44,264,1.159,265,1.44,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.714,275,2.482,276,2.497,277,1.512,278,0.714,279,0.767,280,0.767,281,0.714,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.714,291,0.767,292,0.767,293,0.714,294,0.767,295,0.767,296,0.714,297,0.767,298,0.714,299,0.767,300,0.767,301,0.714,302,0.767,303,0.767,304,0.714,305,0.697,306,0.767,307,0.767,308,0.714,309,0.767,310,0.767,311,0.714,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.649,323,0.767,324,1.217,325,0.714,326,0.649,327,0.767,328,1.079,329,0.714,330,0.767,331,0.767,332,0.664,333,0.714,334,0.731,603,2.498]],["title/injectables/AllTeamsGQL.html",[123,0.309,329,1.259]],["body/injectables/AllTeamsGQL.html",[0,0.608,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.466,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.894,37,0.68,38,1.079,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.855,62,1.191,87,0.634,94,1.6,96,1.6,100,1.6,102,0.714,104,0.714,107,2.151,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.714,125,0.634,126,0.697,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.605,140,1.6,141,1.217,142,0.731,143,1.188,144,1.188,145,1.188,146,0.68,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.217,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.902,160,1.188,161,1.68,162,0.767,163,2.067,164,1.6,165,0.767,166,0.767,167,1.132,168,0.767,169,1.188,170,0.811,171,1.188,172,1.188,173,1.512,174,1.68,175,1.188,176,1.769,177,0.767,178,1.68,179,2.159,180,2.159,181,1.902,182,1.159,183,1.68,184,1.188,185,1.217,186,1.217,187,1.68,188,1.49,189,1.902,190,1.68,191,1.72,192,1.188,193,0.767,194,1.68,195,1.949,196,1.159,197,0.882,198,1.005,199,0.649,200,2.04,201,0.749,202,1.105,203,1.44,204,1.053,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.159,211,1.902,212,0.749,213,1.983,214,0.749,215,0.929,216,1.476,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.846,223,1.688,224,1.624,225,1.188,226,1.188,227,1.188,228,1.101,229,1.159,230,1.68,231,1.188,232,0.731,233,1.159,234,1.159,235,1.406,236,1.188,237,1.188,238,1.44,239,1.44,240,0.767,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.563,255,1.105,256,0.714,257,0.767,258,1.189,259,1.44,260,1.9,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.714,275,2.482,276,2.497,277,1.512,278,0.714,279,0.767,280,0.767,281,0.714,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.714,291,0.767,292,0.767,293,0.714,294,0.767,295,0.767,296,0.714,297,0.767,298,0.714,299,0.767,300,0.767,301,0.714,302,0.767,303,0.767,304,0.714,305,0.697,306,0.767,307,0.767,308,0.714,309,0.767,310,0.767,311,0.714,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.649,323,0.767,324,1.217,325,0.714,326,0.649,327,0.767,328,0.68,329,1.132,330,0.767,331,0.767,332,0.664,333,0.714,334,0.731,604,2.498]],["title/injectables/AllTournamentListGQL.html",[39,1.145,123,0.309]],["body/injectables/AllTournamentListGQL.html",[0,0.608,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.466,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.877,37,0.68,38,1.079,39,1.029,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.191,87,0.634,94,1.6,96,1.6,100,1.6,102,0.714,104,0.714,107,2.151,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.714,125,0.634,126,0.697,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.605,140,1.6,141,1.217,142,0.731,143,1.188,144,1.188,145,1.188,146,0.68,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.217,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.902,160,1.188,161,1.68,162,0.767,163,2.067,164,1.6,165,0.767,166,0.767,167,1.132,168,0.767,169,1.188,170,0.811,171,1.188,172,1.188,173,1.512,174,1.68,175,1.188,176,1.769,177,0.767,178,1.68,179,2.159,180,2.159,181,1.902,182,1.159,183,1.68,184,1.188,185,1.217,186,1.217,187,1.68,188,1.49,189,1.902,190,1.68,191,1.72,192,1.188,193,0.767,194,1.68,195,1.949,196,1.159,197,0.882,198,1.005,199,0.649,200,2.04,201,0.749,202,1.105,203,1.44,204,1.053,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.44,211,2.068,212,0.749,213,1.983,214,0.749,215,0.929,216,1.476,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.846,223,1.688,224,1.624,225,1.188,226,1.188,227,1.188,228,1.101,229,1.159,230,1.68,231,1.188,232,0.731,233,1.159,234,1.159,235,1.406,236,1.188,237,1.188,238,1.44,239,1.44,240,0.767,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.563,255,1.105,256,0.714,257,0.767,258,1.189,259,1.44,260,1.813,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.44,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.714,275,2.482,276,2.497,277,1.512,278,0.714,279,0.767,280,0.767,281,0.714,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.714,291,0.767,292,0.767,293,0.714,294,0.767,295,0.767,296,0.714,297,0.767,298,0.714,299,0.767,300,0.767,301,0.714,302,0.767,303,0.767,304,0.714,305,0.697,306,0.767,307,0.767,308,0.714,309,0.767,310,0.767,311,0.714,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.649,323,0.767,324,1.217,325,0.714,326,0.649,327,0.767,328,0.68,329,0.714,330,0.767,331,0.767,332,0.664,333,0.714,334,0.731,605,2.498]],["title/injectables/AllUsersGQL.html",[123,0.309,333,1.259]],["body/injectables/AllUsersGQL.html",[0,0.608,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.466,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.877,37,0.68,38,1.079,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.191,87,0.634,94,1.6,96,1.6,100,1.6,102,0.714,104,0.714,107,2.151,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.714,125,0.634,126,0.697,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.605,140,1.6,141,1.217,142,0.731,143,1.188,144,1.188,145,1.188,146,0.68,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.217,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.902,160,1.188,161,1.68,162,0.767,163,2.067,164,1.6,165,0.767,166,0.767,167,1.132,168,0.767,169,1.188,170,0.811,171,1.188,172,1.188,173,1.512,174,1.68,175,1.188,176,1.769,177,0.767,178,1.68,179,2.159,180,2.159,181,1.902,182,1.159,183,1.68,184,1.188,185,1.217,186,1.217,187,1.68,188,1.49,189,1.902,190,1.68,191,1.72,192,1.188,193,0.767,194,1.68,195,1.949,196,1.159,197,0.882,198,1.005,199,0.649,200,2.04,201,0.749,202,1.105,203,1.44,204,1.053,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.159,211,1.902,212,0.749,213,1.983,214,0.749,215,0.957,216,1.476,217,1.188,218,1.993,219,2.33,220,1.188,221,1.188,222,1.846,223,1.688,224,1.624,225,1.188,226,1.188,227,1.188,228,1.101,229,1.159,230,1.68,231,1.188,232,0.731,233,1.159,234,1.159,235,1.406,236,1.188,237,1.188,238,1.44,239,1.44,240,0.767,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.563,255,1.105,256,0.714,257,0.767,258,1.189,259,1.44,260,1.813,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.639,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.714,275,2.482,276,2.497,277,1.512,278,0.714,279,0.767,280,0.767,281,0.714,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.714,291,0.767,292,0.767,293,0.714,294,0.767,295,0.767,296,0.714,297,0.767,298,0.714,299,0.767,300,0.767,301,0.714,302,0.767,303,0.767,304,0.714,305,0.697,306,0.767,307,0.767,308,0.714,309,0.767,310,0.767,311,0.714,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.649,323,0.767,324,1.217,325,0.714,326,0.649,327,0.767,328,0.68,329,0.714,330,0.767,331,0.767,332,0.664,333,1.132,334,0.731,606,2.498]],["title/components/AppComponent.html",[19,0.449,433,1.23]],["body/components/AppComponent.html",[3,0.119,4,0.119,5,0.108,7,0.335,8,0.686,12,0.61,13,0.009,14,1.04,15,0.225,18,1.731,19,0.744,20,1.991,22,0.119,29,3.697,30,2.457,44,0.119,49,2.532,50,2.414,52,1.781,54,0.13,55,1.321,56,1.659,64,1.281,65,1.824,67,2.149,75,3.292,77,2.115,89,2.36,120,0.005,121,0.006,122,0.005,136,0.993,170,0.744,197,0.602,215,0.653,228,0.707,254,0.707,256,1.419,258,1.004,273,1.407,335,1.385,336,1.96,337,1.564,338,1.526,339,1.526,343,1.526,344,1.489,345,1.913,351,1.62,355,4.29,356,4.645,357,4.292,358,3.408,360,1.659,361,1.583,363,2,365,2.329,380,2.545,381,1.321,419,3.043,421,1.147,422,2.009,423,2.009,424,1.526,425,2.387,426,1.526,427,1.385,428,1.526,429,1.526,430,1.526,431,1.353,432,1.526,433,2.166,434,1.526,435,1.824,436,1.526,437,1.385,438,1.526,439,1.353,440,1.526,441,1.385,442,1.526,443,1.385,444,1.526,445,1.385,446,1.526,447,1.385,448,1.526,449,1.353,450,1.526,451,1.824,452,1.526,453,1.385,454,1.526,455,1.385,456,1.526,457,1.385,458,1.526,459,1.385,460,1.526,461,1.353,462,1.526,463,1.321,464,1.526,465,1.353,466,1.526,467,1.385,468,1.526,469,1.385,470,1.489,471,1.526,472,1.385,473,1.526,474,1.526,475,1.353,476,1.526,477,1.353,478,1.526,479,1.385,480,1.526,481,1.353,482,1.526,483,1.385,484,1.454,485,1.526,486,1.526,490,5.463,493,5.805,550,3.129,607,4.384,608,7.31,609,6.539,610,7.768,611,6.539,612,7.768,613,7.768,614,7.31,615,4.893,616,4.967,617,4.967,618,4.967,619,6.539,620,4.967,621,4.967,622,4.967,623,4.967,624,4.967,625,4.967,626,4.384,627,4.384,628,3.712,629,4.967,630,3.483,631,4.384,632,4.967,633,4.384,634,4.384,635,4.967,636,4.967,637,4.967,638,6.539,639,4.967,640,4.967,641,4.967,642,4.967,643,4.967,644,4.967,645,4.967,646,4.967,647,4.967,648,4.967,649,4.967,650,4.967,651,6.539,652,6.539,653,6.539,654,6.539,655,6.539,656,6.539,657,5.771,658,6.539,659,6.539,660,5.771,661,6.539,662,6.539,663,6.539,664,6.539,665,6.539,666,7.31,667,7.31,668,6.451,669,4.967,670,6.451,671,4.967,672,7.31,673,4.967,674,4.978,675,4.967,676,4.967,677,4.967,678,5.771,679,7.768,680,6.539,681,6.539,682,4.967,683,6.539,684,6.539,685,6.539,686,6.539,687,6.539,688,6.539,689,8.287,690,6.539,691,6.539,692,4.967,693,6.539,694,4.967,695,6.539,696,6.539,697,4.967,698,4.967,699,4.967,700,4.967,701,4.967]],["title/modules/AppCoreModule.html",[557,1.23,702,2.922]],["body/modules/AppCoreModule.html",[3,0.169,4,0.169,5,0.153,13,0.009,15,0.23,22,0.169,26,4.221,27,4.221,28,3.733,32,2.965,33,2.965,44,0.169,54,0.184,120,0.007,121,0.008,122,0.007,559,2.447,563,3.474,576,2.722,577,3.055,702,5.368,703,5.654,704,7.022,705,7.148,706,6.053,707,7.022,708,5.654,709,7.022,710,5.654,711,6.197]],["title/modules/AppModule.html",[557,1.23,712,3.295]],["body/modules/AppModule.html",[3,0.142,4,0.142,5,0.129,13,0.009,15,0.243,18,2.061,22,0.142,29,3.35,30,2.927,32,2.498,33,2.498,44,0.176,50,1.537,54,0.155,120,0.006,121,0.007,122,0.006,358,3.662,379,3.032,380,3.032,381,2.11,421,1.366,433,2.537,435,2.477,451,2.477,555,2.061,557,1.65,559,2.061,560,2.83,561,3.795,562,3.925,563,3.925,564,2.83,571,3.746,572,3.032,573,3.032,575,5.887,576,2.834,577,2.758,579,3.405,626,5.222,627,5.222,708,4.764,710,6.388,711,5.222,712,6.945,713,5.222,714,5.222,715,5.222,716,5.222,717,5.222,718,6.082,719,6.082,720,5.749,721,6.082,722,4.764,723,7.311,724,6.452,725,4.764,726,7.311,727,7.311,728,5.917,729,5.917,730,7.311,731,5.222,732,5.222,733,5.222,734,7.311,735,7.311,736,3.921,737,5.917,738,6.452,739,6.452,740,5.917,741,3.556,742,5.917,743,5.917,744,7.311,745,5.222,746,5.917,747,5.917,748,5.222,749,5.222,750,5.917,751,5.917,752,5.222,753,4.764,754,5.222,755,7.311,756,3.886,757,5.917,758,4.764,759,5.917]],["title/modules/AppRoutingModule.html",[557,1.23,718,3.091]],["body/modules/AppRoutingModule.html",[3,0.16,4,0.16,5,0.146,13,0.009,15,0.226,22,0.16,44,0.189,54,0.175,120,0.007,121,0.008,122,0.007,147,1.864,199,2.044,213,1.777,258,1.026,545,5.865,548,6.734,549,6.734,554,2.998,559,2.329,564,3.197,576,2.591,577,2.968,597,3.847,598,4.032,599,4.529,601,5.224,703,5.382,718,5.518,760,6.684,761,6.581,762,6.684,763,6.684,764,6.684,765,6.684,766,5.899,767,4.995,768,9.011,769,6.684,770,6.684,771,6.684,772,4.21,773,6.684,774,5.899,775,6.684,776,6.684,777,5.382,778,6.684,779,6.684]],["title/interceptors/AuthInterceptor.html",[721,3.091,780,3.891]],["body/interceptors/AuthInterceptor.html",[3,0.161,4,0.161,5,0.147,7,0.453,12,0.597,13,0.009,15,0.227,22,0.161,34,3.437,35,2.603,44,0.161,54,0.176,56,1.703,64,1.315,67,2.076,120,0.007,121,0.008,122,0.007,123,0.554,136,0.904,170,0.756,351,1.955,357,4.36,358,3.651,360,2.002,361,1.91,363,1.664,380,3.441,550,4.23,555,2.92,633,6.964,721,5.533,736,4.451,781,6.715,782,5.926,783,7.891,784,6.715,785,7.891,786,8.648,787,6.747,788,8.648,789,6.715,790,6.715,791,7.891,792,6.715,793,5.019,794,6.715,795,7.891,796,6.715,797,4.709,798,6.715,799,5.926]],["title/injectables/AuthenticationService.html",[123,0.309,358,1.861]],["body/injectables/AuthenticationService.html",[0,1.032,3,0.124,4,0.124,5,0.113,7,0.35,8,0.705,12,0.645,13,0.009,14,1.292,15,0.215,22,0.124,44,0.179,54,0.136,59,3.078,64,1.316,65,2.202,67,2.185,89,2.706,115,2.533,120,0.007,121,0.007,122,0.005,123,0.472,125,1.314,129,1.014,136,1.029,139,1.911,146,1.41,163,1.937,164,1.48,167,1.48,170,0.803,188,1.377,215,1.038,258,0.795,272,1.141,273,1.115,284,2.099,287,2.15,332,2.099,351,1.665,358,3.15,360,2.126,361,2.029,363,2.114,365,2.015,415,3.871,416,3.871,554,2.323,555,3.046,736,3.433,772,4.699,797,4.712,800,3.871,801,5.931,802,6.72,803,6.356,804,6.72,805,6.356,806,6.72,807,6.72,808,4.233,809,6.006,810,6.006,811,6.006,812,6.006,813,5.18,814,6.749,815,5.575,816,6.006,817,6.006,818,5.18,819,5.411,820,6.114,821,5.18,822,3.871,823,5.628,824,5.411,825,5.18,826,4.454,827,5.18,828,5.411,829,5.536,830,5.18,831,4.699,832,5.18,833,5.411,834,5.18,835,5.411,836,5.736,837,5.18,838,5.411,839,5.18,840,5.18,841,5.18,842,5.18,843,5.18,844,5.18,845,5.18,846,5.18,847,5.18,848,5.022,849,5.022,850,3.871,851,2.562,852,3.632,853,3.632,854,3.632,855,4.17,856,4.17,857,5.411,858,4.17,859,4.17,860,2.398,861,6.749,862,4.17,863,5.556,864,5.422,865,4.17,866,3.632,867,3.632,868,4.17,869,5.411,870,4.17,871,4.17,872,4.699,873,4.17,874,5.411,875,4.17,876,5.411,877,4.944,878,4.17,879,4.17,880,4.17,881,4.17,882,5.411,883,4.233,884,4.17,885,4.17,886,3.871,887,4.17,888,4.17,889,4.17,890,3.871,891,4.17,892,4.17]],["title/components/ChangepasswordComponent.html",[19,0.449,435,1.23]],["body/components/ChangepasswordComponent.html",[3,0.133,4,0.133,5,0.121,7,0.375,8,0.738,12,0.632,13,0.009,15,0.213,16,4.619,18,1.936,19,0.785,20,2.1,22,0.133,44,0.133,49,2.548,50,2.43,52,1.915,54,0.146,55,1.478,56,1.783,59,2.582,64,1.377,65,1.55,67,1.911,68,4.444,77,2.207,89,2.49,91,2.493,92,2.279,114,2.346,115,1.887,120,0.006,121,0.007,122,0.006,136,0.993,170,0.738,197,0.673,215,0.731,228,0.79,254,0.79,335,1.55,336,2.108,337,1.75,338,1.707,339,1.707,343,1.707,344,1.666,345,2.057,351,1.742,357,3.884,358,3.422,360,1.41,361,1.345,363,1.742,365,1.666,370,5.462,378,3.683,379,2.848,380,2.848,381,1.478,386,4.66,391,4.905,405,2.658,414,7.152,419,3.222,421,1.283,422,2.16,423,2.16,424,1.707,425,2.49,426,1.707,427,1.55,428,1.707,429,1.707,430,1.707,431,1.513,432,1.707,433,1.55,434,1.707,435,2.26,436,1.707,437,1.55,438,1.707,439,1.513,440,1.707,441,1.55,442,1.707,443,1.55,444,1.707,445,1.55,446,1.707,447,1.55,448,1.707,449,1.513,450,1.707,451,1.55,452,1.707,453,1.55,454,1.707,455,1.55,456,1.707,457,1.55,458,1.707,459,1.55,460,1.707,461,1.513,462,1.707,463,1.478,464,1.707,465,1.513,466,1.707,467,1.55,468,1.707,469,1.55,470,1.666,471,1.707,472,1.55,473,1.707,474,1.707,475,1.513,476,1.707,477,1.513,478,1.707,479,1.55,480,1.707,481,1.513,482,1.707,483,1.55,484,1.626,485,1.707,486,1.707,550,3.5,756,2.954,772,4.857,801,7.536,820,5.763,860,3.254,883,3.5,893,4.905,894,7.712,895,7.031,896,7.712,897,7.031,898,5.558,899,5.558,900,5.558,901,5.558,902,5.558,903,5.558,904,5.558,905,5.558,906,5.558,907,7.031,908,4.905,909,4.475,910,7.152,911,6.205,912,5.661]],["title/components/ContactComponent.html",[19,0.449,437,1.23]],["body/components/ContactComponent.html",[3,0.141,4,0.141,5,0.128,7,0.395,8,0.762,12,0.597,13,0.009,15,0.207,16,4.691,17,3.52,18,2.04,19,0.804,20,2.151,21,3.235,22,0.141,36,1.352,41,2.209,44,0.141,47,1.999,49,2.554,50,2.436,52,1.978,54,0.154,55,1.557,56,1.843,64,1.423,67,2.144,68,4.39,71,4.367,77,2.249,120,0.006,121,0.007,122,0.006,136,0.946,170,0.756,176,2.205,197,0.709,215,0.77,228,1.208,254,0.833,335,1.633,336,2.178,337,1.844,338,1.799,339,1.799,343,1.799,344,1.756,345,2.126,351,1.8,360,1.485,361,1.417,363,1.451,365,1.756,381,1.557,417,4.181,419,3.032,421,1.352,422,2.232,423,2.232,424,1.799,425,2.537,426,1.799,427,1.633,428,1.799,429,1.799,430,1.799,431,1.595,432,1.799,433,1.633,434,1.799,435,1.633,436,1.799,437,2.303,438,1.799,439,1.595,440,1.799,441,1.633,442,1.799,443,1.633,444,1.799,445,1.633,446,1.799,447,1.633,448,1.799,449,1.595,450,1.799,451,1.633,452,1.799,453,1.633,454,1.799,455,1.633,456,1.799,457,1.633,458,1.799,459,1.633,460,1.799,461,1.595,462,1.799,463,1.557,464,1.799,465,1.595,466,1.799,467,1.633,468,1.799,469,1.633,470,1.756,471,1.799,472,1.633,473,1.799,474,1.799,475,1.595,476,1.799,477,1.595,478,1.799,479,1.633,480,1.799,481,1.595,482,1.799,483,1.633,484,1.714,485,1.799,486,1.799,523,3.689,913,5.168,914,7.898,915,7.265,916,5.168,917,5.856,918,5.856,919,5.856,920,5.856,921,6.411]],["title/components/ContactPersonComponent.html",[19,0.449,441,1.23]],["body/components/ContactPersonComponent.html",[3,0.143,4,0.143,5,0.13,7,0.402,12,0.451,13,0.009,15,0.193,19,0.811,20,2.168,22,0.143,41,2.249,44,0.143,49,2.557,50,2.438,52,2,54,0.156,55,1.585,56,1.863,64,1.559,77,2.263,120,0.006,121,0.007,122,0.006,136,0.912,170,0.703,197,0.722,215,0.784,228,1.295,229,2.149,254,0.848,335,1.663,336,2.202,337,1.877,338,1.832,339,1.832,343,1.832,344,1.787,345,2.149,351,1.82,363,1.477,365,1.787,381,1.585,419,2.697,421,1.377,422,2.257,423,2.257,424,1.832,425,2.553,426,1.832,427,1.663,428,1.832,429,1.832,430,1.832,431,1.623,432,1.832,433,1.663,434,1.832,435,1.663,436,1.832,437,1.663,438,1.832,439,1.623,440,1.832,441,2.318,442,1.832,443,1.663,444,1.832,445,1.663,446,1.832,447,1.663,448,1.832,449,1.623,450,1.832,451,1.663,452,1.832,453,1.663,454,1.832,455,1.663,456,1.832,457,1.663,458,1.832,459,1.663,460,1.832,461,1.623,462,1.832,463,1.585,464,1.832,465,1.623,466,1.832,467,1.663,468,1.832,469,1.663,470,1.787,471,1.832,472,1.663,473,1.832,474,1.832,475,1.623,476,1.832,477,1.623,478,1.832,479,1.663,480,1.832,481,1.623,482,1.832,483,1.663,484,1.745,485,1.832,486,1.832,660,7.334,922,7.334,923,6.691,924,5.261,925,7.962,926,7.346,927,5.49,928,7.346,929,5.962,930,4.868,931,7.346,932,7.346,933,7.346,934,7.346,935,7.346,936,7.346,937,5.914]],["title/components/ContactlistComponent.html",[19,0.449,439,1.201]],["body/components/ContactlistComponent.html",[3,0.149,4,0.149,5,0.135,7,0.418,13,0.009,15,0.162,19,0.824,20,2.205,22,0.149,44,0.149,49,2.561,50,2.443,52,2.047,54,0.162,55,1.647,56,1.907,64,1.586,77,2.293,120,0.006,121,0.007,122,0.006,136,0.861,170,0.72,197,0.75,215,0.814,228,0.881,254,0.881,335,1.727,336,2.254,337,1.95,338,1.903,339,1.903,343,1.903,344,1.857,345,2.2,351,1.863,363,1.534,365,1.857,381,1.647,421,1.43,422,2.31,423,2.31,424,1.903,425,2.587,426,1.903,427,1.727,428,1.903,429,1.903,430,1.903,431,1.687,432,1.903,433,1.727,434,1.903,435,1.727,436,1.903,437,1.727,438,1.903,439,2.293,440,1.903,441,1.727,442,1.903,443,1.727,444,1.903,445,1.727,446,1.903,447,1.727,448,1.903,449,1.687,450,1.903,451,1.727,452,1.903,453,1.727,454,1.903,455,1.727,456,1.903,457,1.727,458,1.903,459,1.727,460,1.903,461,1.687,462,1.903,463,1.647,464,1.903,465,1.687,466,1.903,467,1.727,468,1.903,469,1.727,470,1.857,471,1.903,472,1.727,473,1.903,474,1.903,475,1.687,476,1.903,477,1.687,478,1.903,479,1.727,480,1.903,481,1.687,482,1.903,483,1.727,484,1.812,485,1.903,486,1.903,938,5.466,939,6.636,940,8.096,941,7.519,942,6.193,943,6.193]],["title/modules/ContactlistModule.html",[557,1.23,944,3.295]],["body/modules/ContactlistModule.html",[3,0.161,4,0.161,5,0.146,13,0.009,15,0.234,22,0.161,44,0.161,54,0.176,120,0.007,121,0.008,122,0.007,202,1.87,421,1.548,439,2.432,467,2.491,479,2.491,557,1.87,559,2.336,560,3.207,561,4.005,562,3.317,563,3.317,564,3.207,570,4.576,571,4.039,572,3.435,573,3.435,576,3.056,577,2.974,579,3.859,580,4.223,939,5.917,944,6.937,945,5.917,946,5.917,947,5.917,948,6.262,949,6.705,950,5.917,951,6.705]],["title/modules/ContactlistRoutingModule.html",[557,1.23,948,3.091]],["body/modules/ContactlistRoutingModule.html",[3,0.169,4,0.169,5,0.154,13,0.009,15,0.224,19,0.717,22,0.169,44,0.169,54,0.185,120,0.007,121,0.008,122,0.007,258,1.082,439,2.21,554,3.16,559,2.455,576,2.731,577,3.061,597,4.054,598,4.379,599,4.054,601,4.054,602,4.235,948,5.69,950,6.217,952,7.045]],["title/injectables/CreateMatchesForSeasonGQL.html",[123,0.309,296,1.259]],["body/injectables/CreateMatchesForSeasonGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.415,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.679,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.19,87,0.633,94,1.599,96,1.599,100,1.599,102,0.713,104,0.713,107,2.146,110,2.152,111,1.845,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.272,134,0.767,135,2.181,136,0.286,138,2.662,139,0.604,140,1.744,141,1.216,142,0.73,143,1.187,144,1.187,145,1.187,146,0.679,147,1.104,148,0.748,149,0.748,150,0.73,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.901,160,1.187,161,1.679,162,0.767,163,2.066,164,1.599,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.72,174,2.041,175,1.187,176,1.768,177,0.767,178,1.679,179,2.158,180,2.158,181,1.901,182,1.158,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.901,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.158,197,0.881,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.439,204,1.052,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.158,211,1.901,212,0.748,213,1.982,214,0.748,215,0.928,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.845,223,1.687,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.158,230,1.679,231,1.187,232,0.73,233,1.158,234,1.158,235,1.405,236,1.187,237,1.187,238,1.439,239,1.439,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.73,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.439,260,1.812,261,1.439,262,1.405,263,1.439,264,1.158,265,1.158,266,1.158,267,1.158,268,1.439,269,1.439,270,1.158,271,0.73,272,1.914,273,1.87,274,0.713,275,2.481,276,2.497,277,1.511,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.663,285,0.767,286,0.767,287,0.679,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,1.131,297,1.216,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.73,313,2.377,314,0.767,315,0.767,316,0.679,317,0.767,318,0.767,319,0.679,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.679,329,0.713,330,0.767,331,0.767,332,0.663,333,0.713,334,0.73,953,2.495]],["title/injectables/CreateSeasonGQL.html",[123,0.309,290,1.259]],["body/injectables/CreateSeasonGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.823,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,1.131,291,1.216,292,1.216,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,954,2.496]],["title/injectables/CreateTournamentGQL.html",[123,0.309,308,1.259]],["body/injectables/CreateTournamentGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.823,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,1.131,309,1.216,310,1.216,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,955,2.496]],["title/injectables/CreateTournamentRoundGQL.html",[37,1.201,123,0.309]],["body/injectables/CreateTournamentRoundGQL.html",[0,0.606,3,0.06,4,0.06,5,0.054,7,0.168,8,0.414,9,1.852,11,1.464,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.875,37,1.075,38,1.337,39,0.646,40,0.646,44,0.226,46,0.694,47,1.646,48,0.694,54,0.228,57,1.66,62,1.188,87,0.631,94,1.943,96,1.943,100,1.943,102,0.711,104,0.711,107,2.145,110,2.151,111,1.845,120,0.002,121,0.004,122,0.002,123,0.611,124,0.711,125,0.631,126,0.694,127,2.557,128,0.548,129,0.487,130,2.559,131,2.711,132,0.764,133,2.271,134,0.764,135,2.039,136,0.285,138,2.662,139,0.602,140,1.742,141,1.213,142,0.728,143,1.184,144,1.184,145,1.184,146,0.677,147,1.101,148,0.746,149,0.746,150,0.728,151,2.613,152,1.213,153,2.116,154,1.854,155,1.854,156,2.443,157,1.184,158,1.184,159,1.899,160,1.184,161,1.676,162,0.764,163,2.065,164,1.597,165,0.764,166,0.764,167,1.128,168,0.764,169,1.184,170,0.811,171,1.184,172,1.184,173,1.508,174,1.676,175,1.184,176,1.766,177,0.764,178,1.676,179,2.156,180,2.156,181,1.899,182,1.155,183,1.676,184,1.184,185,1.508,186,1.508,187,1.676,188,1.486,189,1.899,190,1.676,191,1.718,192,1.184,193,0.764,194,1.676,195,1.945,196,1.155,197,0.881,198,1.002,199,0.646,200,2.038,201,0.746,202,1.101,203,1.437,204,1.05,205,2.016,206,0.746,207,1.128,208,1.854,209,0.746,210,1.155,211,1.899,212,0.746,213,1.98,214,0.746,215,0.928,216,1.472,217,1.184,218,1.784,219,2.329,220,1.184,221,1.184,222,1.844,223,1.685,224,1.621,225,1.184,226,1.184,227,1.184,228,1.1,229,1.155,230,1.676,231,1.184,232,0.728,233,1.155,234,1.155,235,1.402,236,1.184,237,1.184,238,1.437,239,1.437,240,0.764,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.676,248,0.746,249,1.184,250,0.746,251,0.728,252,1.66,253,1.337,254,0.562,255,1.101,256,0.711,257,0.764,258,1.187,259,1.437,260,1.81,261,1.437,262,1.402,263,1.437,264,1.155,265,1.155,266,1.155,267,1.155,268,1.437,269,1.437,270,1.155,271,0.728,272,1.913,273,1.869,274,0.711,275,2.48,276,2.495,277,1.717,278,0.711,279,0.764,280,0.764,281,0.711,282,0.764,283,0.764,284,0.662,285,0.764,286,0.764,287,0.677,288,0.764,289,0.764,290,0.711,291,0.764,292,0.764,293,0.711,294,0.764,295,0.764,296,0.711,297,0.764,298,0.711,299,0.764,300,0.764,301,0.711,302,0.764,303,0.764,304,0.711,305,0.694,306,0.764,307,0.764,308,0.711,309,0.764,310,0.764,311,0.711,312,0.728,313,2.376,314,0.764,315,0.764,316,0.677,317,0.764,318,0.764,319,0.677,320,0.764,321,0.764,322,0.646,323,0.764,324,1.213,325,0.711,326,0.646,327,0.764,328,0.677,329,0.711,330,0.764,331,0.764,332,0.662,333,0.711,334,0.728,956,2.488]],["title/injectables/CreateUserGQL.html",[123,0.309,311,1.259]],["body/injectables/CreateUserGQL.html",[0,0.605,3,0.06,4,0.06,5,0.054,7,0.167,8,0.413,9,1.519,11,1.462,12,0.704,13,0.009,14,1.316,15,0.128,22,0.06,36,1.874,37,0.675,38,1.072,39,0.644,40,0.644,44,0.226,46,0.691,47,1.644,48,0.691,54,0.228,57,1.657,62,1.185,87,0.629,94,1.594,96,1.594,100,1.594,102,0.708,104,0.708,107,2.145,110,2.15,111,1.852,120,0.002,121,0.004,122,0.002,123,0.611,124,0.708,125,0.629,126,0.691,127,2.556,128,0.546,129,0.486,130,2.558,131,2.71,132,0.762,133,2.269,134,0.762,135,2.036,136,0.284,138,2.661,139,0.6,140,1.594,141,1.21,142,0.725,143,1.181,144,1.181,145,1.181,146,0.675,147,1.098,148,0.743,149,0.743,150,0.725,151,2.612,152,1.21,153,2.113,154,1.851,155,1.851,156,2.443,157,1.181,158,1.181,159,1.896,160,1.181,161,1.673,162,0.762,163,2.127,164,1.594,165,0.762,166,0.762,167,1.125,168,0.762,169,1.181,170,0.811,171,1.181,172,1.181,173,1.505,174,1.673,175,1.181,176,1.764,177,0.762,178,1.673,179,2.241,180,2.241,181,1.896,182,1.152,183,1.673,184,1.181,185,1.21,186,1.21,187,1.942,188,1.806,189,2.124,190,2.036,191,1.716,192,1.181,193,0.762,194,1.673,195,1.942,196,1.152,197,0.88,198,0.999,199,0.644,200,2.037,201,0.743,202,1.098,203,1.433,204,1.047,205,2.013,206,0.743,207,1.125,208,1.851,209,0.743,210,1.152,211,1.896,212,0.743,213,1.978,214,0.743,215,0.926,216,1.469,217,1.181,218,1.781,219,2.328,220,1.181,221,1.181,222,1.842,223,1.683,224,1.619,225,1.181,226,1.181,227,1.181,228,1.099,229,1.152,230,1.673,231,1.181,232,0.725,233,1.152,234,1.152,235,1.399,236,1.181,237,1.181,238,1.433,239,1.433,240,0.762,241,1.181,242,1.181,243,1.181,244,1.181,245,1.181,246,1.181,247,1.673,248,0.743,249,1.181,250,0.743,251,0.725,252,1.657,253,1.334,254,0.56,255,1.098,256,0.708,257,0.762,258,1.186,259,1.433,260,1.807,261,1.433,262,1.399,263,1.433,264,1.152,265,1.152,266,1.152,267,1.152,268,1.433,269,1.433,270,1.152,271,0.725,272,1.913,273,1.868,274,0.708,275,2.479,276,2.493,277,1.505,278,0.708,279,0.762,280,0.762,281,0.708,282,0.762,283,0.762,284,0.659,285,0.762,286,0.762,287,0.675,288,0.762,289,0.762,290,0.708,291,0.762,292,0.762,293,0.708,294,0.762,295,0.762,296,0.708,297,0.762,298,0.708,299,0.762,300,0.762,301,0.708,302,0.762,303,0.762,304,0.708,305,0.691,306,0.762,307,0.762,308,0.708,309,0.762,310,0.762,311,1.125,312,0.725,313,2.374,314,0.762,315,0.762,316,0.675,317,0.762,318,0.762,319,0.675,320,0.762,321,0.762,322,0.644,323,0.762,324,1.21,325,0.708,326,0.644,327,0.762,328,0.675,329,0.708,330,0.762,331,0.762,332,0.659,333,0.708,334,0.725,957,2.479]],["title/interfaces/Credentials.html",[0,0.677,836,3.091]],["body/interfaces/Credentials.html",[0,1.099,2,2.828,3,0.137,4,0.137,5,0.125,7,0.386,8,0.751,12,0.432,13,0.009,14,1.275,15,0.221,22,0.137,44,0.188,54,0.15,59,3.158,64,1.12,65,2.283,67,2.131,89,2.31,115,2.653,120,0.008,121,0.007,122,0.006,123,0.502,139,1.981,146,1.557,163,1.859,164,1.633,167,1.633,188,1.52,215,0.941,258,0.878,272,1.26,273,1.23,284,1.903,287,1.949,332,1.903,358,3.021,415,4.272,416,4.272,554,2.564,555,3.101,736,3.789,772,4.507,797,5.018,800,4.272,803,4.602,805,4.602,809,4.602,810,4.602,811,4.602,812,4.602,814,6.29,815,4.272,816,4.602,817,4.602,819,4.602,820,5.838,823,5.557,824,4.602,826,3.789,828,4.602,829,5.018,831,4.507,833,4.602,835,4.602,836,5.741,838,4.602,848,5.348,849,5.348,850,4.272,851,2.828,852,4.008,853,5.741,854,4.008,855,4.602,856,4.602,857,5.762,858,4.602,859,4.602,860,2.646,861,6.925,862,4.602,863,5.7,864,5.587,865,4.602,866,4.008,867,4.008,868,4.602,869,5.762,870,4.602,871,4.602,872,4.921,873,4.602,874,5.762,875,4.602,876,5.762,877,5.178,878,4.602,879,4.602,880,4.602,881,4.602,882,5.762,883,4.507,884,4.602,885,4.602,886,4.272,887,4.602,888,4.602,889,4.602,890,4.272,891,4.602,892,4.602]],["title/injectables/CustomOwlDateTimeIntl.html",[123,0.309,706,3.295]],["body/injectables/CustomOwlDateTimeIntl.html",[3,0.166,4,0.166,5,0.151,12,0.522,13,0.009,15,0.222,22,0.166,26,4.153,27,4.153,28,3.673,31,4.174,32,2.917,33,2.917,44,0.166,54,0.181,64,1.353,120,0.007,121,0.008,122,0.007,123,0.563,125,1.753,136,0.791,170,0.662,275,2.292,360,1.753,361,1.672,705,7.483,706,5.996,793,5.164,958,6.098,959,6.909,960,6.909,961,8.023,962,6.909,963,6.909,964,6.46,965,6.909,966,6.909,967,7.081,968,6.909]],["title/interfaces/DatePeriod.html",[0,0.677,140,1.259]],["body/interfaces/DatePeriod.html",[0,0.609,2,1.239,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.528,11,1.468,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.878,37,0.682,38,1.081,39,0.65,40,0.65,44,0.226,46,0.698,47,1.65,48,0.698,54,0.228,57,1.665,62,1.193,87,0.635,94,1.602,96,1.602,100,1.602,102,0.715,104,0.715,107,2.147,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.612,124,0.715,126,0.698,127,2.543,130,2.557,131,2.709,132,0.769,133,2.274,134,0.769,135,2.044,138,2.665,139,0.606,140,1.747,141,1.219,142,0.733,143,1.19,144,1.19,145,1.19,146,0.682,147,1.107,148,0.751,149,0.751,150,0.733,151,2.615,152,1.219,153,2.12,154,1.859,155,1.859,156,2.445,157,1.19,158,1.19,159,1.904,160,1.19,161,1.682,162,0.769,163,2.068,164,1.602,165,0.769,166,0.769,167,1.134,168,0.769,169,1.19,170,0.812,171,1.19,172,1.19,173,1.515,174,1.682,175,1.19,176,1.771,177,0.769,178,1.682,179,2.16,180,2.16,181,1.904,182,1.161,183,1.682,184,1.19,185,1.219,186,1.219,187,1.682,188,1.492,189,1.904,190,1.682,191,1.722,192,1.19,193,0.769,194,1.682,195,1.951,196,1.161,197,0.882,198,1.007,199,0.65,200,2.041,201,0.751,202,1.107,203,1.443,204,1.055,205,2.02,206,0.751,207,1.134,208,1.859,209,0.751,210,1.161,211,1.904,212,0.751,213,1.984,214,0.751,215,0.93,216,1.478,217,1.19,218,1.79,219,2.331,220,1.19,221,1.19,222,1.847,223,1.69,224,1.626,225,1.19,226,1.19,227,1.19,228,1.102,229,1.161,230,1.682,231,1.19,232,0.733,233,1.161,234,1.161,235,1.408,236,1.19,237,1.19,238,1.443,239,1.443,240,0.769,241,1.19,242,1.19,243,1.19,244,1.19,245,1.19,246,1.19,247,1.682,248,0.751,249,1.19,250,0.751,251,0.733,252,1.665,253,1.343,254,0.564,255,1.107,256,0.715,257,0.769,258,1.189,259,1.443,260,1.815,261,1.443,262,1.408,263,1.443,264,1.161,265,1.161,266,1.161,267,1.161,268,1.443,269,1.443,270,1.161,271,0.733,272,1.915,273,1.87,274,0.715,275,2.482,276,2.498,277,1.515,278,0.715,279,0.769,280,0.769,281,0.715,282,0.769,283,0.769,284,0.666,285,0.769,286,0.769,287,0.682,288,0.769,289,0.769,290,0.715,291,0.769,292,0.769,293,0.715,294,0.769,295,0.769,296,0.715,297,0.769,298,0.715,299,0.769,300,0.769,301,0.715,302,0.769,303,0.769,304,0.715,305,0.698,306,0.769,307,0.769,308,0.715,309,0.769,310,0.769,311,0.715,312,0.733,313,2.38,314,0.769,315,0.769,316,0.682,317,0.769,318,0.769,319,0.682,320,0.769,321,0.769,322,0.65,323,0.769,324,1.219,325,0.715,326,0.65,327,0.769,328,0.682,329,0.715,330,0.769,331,0.769,332,0.666,333,0.715,334,0.733,361,1.358]],["title/components/EditmatchPitchComponent.html",[19,0.449,443,1.23]],["body/components/EditmatchPitchComponent.html",[3,0.105,4,0.105,5,0.095,7,0.295,8,0.629,12,0.663,13,0.009,14,1.049,15,0.218,16,4.073,17,2.625,18,1.522,19,0.697,20,1.865,21,2.413,22,0.105,34,2.809,35,1.693,41,1.647,42,1.9,43,1.9,44,0.105,49,2.512,50,2.395,52,1.633,54,0.115,55,1.161,56,1.521,59,2.837,64,1.175,65,2.155,67,1.697,68,3.64,71,3.605,77,2.008,89,2.38,91,1.959,92,1.791,113,2.895,114,1.844,115,1.483,120,0.004,121,0.006,122,0.004,128,0.962,129,1.341,136,1.028,170,0.74,197,0.967,198,1.87,204,2.214,215,0.574,222,2.074,228,0.621,254,0.621,258,1.052,335,1.218,336,1.798,337,1.375,338,1.342,339,1.342,343,1.342,344,2.053,345,1.755,351,1.486,360,1.737,361,1.657,363,2.026,365,2.316,370,5.245,378,2.895,379,2.238,381,1.161,386,3.975,405,2.089,419,3.332,421,1.009,422,1.842,423,1.842,424,1.342,425,2.265,426,1.342,427,1.218,428,1.342,429,1.342,430,1.342,431,1.189,432,1.342,433,1.218,434,1.342,435,1.218,436,1.342,437,1.218,438,1.342,439,1.189,440,1.342,441,1.218,442,1.342,443,2.056,444,1.342,445,1.218,446,1.342,447,1.218,448,1.342,449,1.189,450,1.342,451,1.218,452,1.342,453,1.218,454,1.342,455,1.218,456,1.342,457,1.218,458,1.342,459,1.218,460,1.342,461,1.189,462,1.342,463,1.161,464,1.342,465,1.189,466,1.342,467,1.218,468,1.342,469,1.218,470,1.309,471,1.342,472,1.218,473,1.342,474,1.342,475,1.189,476,1.342,477,1.189,478,1.342,479,1.218,480,1.342,481,1.189,482,1.342,483,1.218,484,1.278,485,1.342,486,1.342,523,3.777,555,2.089,756,2.322,822,3.264,860,3.413,969,3.854,970,5.997,971,6.849,972,5.997,973,6.849,974,5.118,975,5.118,976,6.849,977,6.849,978,6.849,979,6.849,980,6.849,981,6.849,982,7.372,983,7.372,984,5.292,985,5.997,986,5.936,987,7.372,988,3.516,989,4.914,990,4.517,991,6.849,992,7.372,993,6.583,994,5.997,995,4.367,996,4.367,997,4.482,998,4.367,999,5.118,1000,4.367,1001,5.997,1002,4.367,1003,4.367,1004,4.367,1005,5.997,1006,4.367,1007,4.367,1008,4.367,1009,4.367,1010,4.367,1011,4.367,1012,5.514,1013,4.367,1014,5.997,1015,4.367,1016,4.367,1017,4.367,1018,4.482,1019,3.264,1020,3.062,1021,3.264,1022,4.367,1023,4.367,1024,3.516,1025,4.367,1026,3.264,1027,3.264,1028,3.264,1029,3.975,1030,3.264,1031,3.264,1032,3.264,1033,5.118,1034,3.264,1035,3.264,1036,3.264,1037,4.802,1038,4.367,1039,4.367,1040,4.367,1041,4.367,1042,4.367,1043,4.367,1044,4.367,1045,4.367,1046,6.849,1047,4.367,1048,6.849,1049,4.367,1050,4.367,1051,5.997,1052,4.367,1053,5.997,1054,4.367,1055,4.367,1056,4.367,1057,4.367,1058,4.367,1059,4.367,1060,4.367,1061,4.367,1062,4.367,1063,4.367,1064,4.367,1065,4.367,1066,4.367,1067,4.367,1068,3.451,1069,3.451,1070,5.292,1071,5.292,1072,5.997,1073,5.292,1074,5.936,1075,5.997,1076,5.997,1077,7.372,1078,5.997,1079,5.997,1080,5.997,1081,5.997,1082,5.997,1083,5.997,1084,4.828,1085,4.482]],["title/components/EditmatchResultComponent.html",[19,0.449,445,1.23]],["body/components/EditmatchResultComponent.html",[3,0.129,4,0.129,5,0.117,7,0.363,8,0.723,11,1.724,12,0.64,13,0.009,15,0.222,16,4.424,17,3.234,18,1.875,19,0.774,20,2.069,21,2.973,22,0.129,31,4.245,32,2.272,33,2.272,41,2.029,44,0.129,49,2.543,50,2.425,52,1.875,54,0.141,55,1.431,56,1.747,64,1.349,65,1.921,67,2.181,68,4.038,71,4.14,72,2.029,77,2.181,113,3.566,114,2.272,115,1.827,120,0.005,121,0.007,122,0.005,136,0.998,154,2.17,155,2.17,170,0.727,197,1.026,198,2.031,215,0.707,228,0.765,254,0.765,335,1.501,336,2.065,337,1.694,338,1.653,339,1.653,343,1.653,344,1.613,345,2.015,351,1.706,355,4.4,356,4.764,360,1.365,361,1.302,363,1.706,365,2.065,381,1.831,399,3.234,400,2.757,402,3.234,403,4.14,407,3.389,419,3.109,421,1.242,422,2.116,423,2.116,424,1.653,425,2.46,426,1.653,427,1.501,428,1.653,429,1.653,430,1.653,431,1.465,432,1.653,433,1.501,434,1.653,435,1.501,436,1.653,437,1.501,438,1.653,439,1.465,440,1.653,441,1.501,442,1.653,443,1.501,444,1.653,445,2.233,446,1.653,447,1.501,448,1.653,449,1.465,450,1.653,451,1.501,452,1.653,453,1.501,454,1.653,455,1.501,456,1.653,457,1.501,458,1.653,459,1.501,460,1.653,461,1.465,462,1.653,463,1.431,464,1.653,465,1.465,466,1.653,467,1.501,468,1.653,469,1.501,470,1.613,471,1.653,472,1.501,473,1.653,474,1.653,475,1.465,476,1.653,477,1.465,478,1.653,479,1.501,480,1.653,481,1.465,482,1.653,483,1.501,484,1.574,485,1.653,486,1.653,523,3.389,670,4.748,986,6.448,988,4.332,990,4.756,1021,4.021,1068,3.963,1069,3.963,1084,5.545,1085,5.147,1086,4.748,1087,6.887,1088,7.596,1089,6.887,1090,6.887,1091,5.38,1092,5.38,1093,5.38,1094,5.38,1095,5.38,1096,5.38,1097,4.748,1098,6.887,1099,5.38,1100,6.887,1101,5.38,1102,5.38,1103,5.38,1104,5.38,1105,5.38,1106,6.887,1107,5.38,1108,5.38]],["title/components/EditmatchTimeComponent.html",[19,0.449,447,1.23]],["body/components/EditmatchTimeComponent.html",[3,0.126,4,0.126,5,0.115,7,0.355,8,0.712,12,0.622,13,0.009,15,0.225,16,4.388,17,3.163,18,1.833,19,0.765,20,2.047,21,2.907,22,0.126,25,6.401,26,3.163,27,3.163,28,2.797,29,3.733,30,2.603,31,4.096,32,2.222,33,2.222,41,1.985,44,0.126,49,2.54,50,2.422,52,1.849,54,0.138,55,1.399,56,1.722,62,1.643,64,1.33,65,2.096,67,2.086,68,3.995,71,4.081,73,3.932,74,3.932,75,3.487,76,3.932,77,2.163,113,3.487,114,2.222,115,1.787,118,3.163,120,0.005,121,0.007,122,0.005,136,0.981,170,0.76,191,1.244,197,1.02,198,2.015,215,0.692,228,0.748,254,0.748,335,1.467,336,2.035,337,1.657,338,1.617,339,1.617,343,1.617,344,1.578,345,1.987,351,1.682,360,1.722,361,1.643,363,1.862,365,2.254,381,1.399,405,2.516,419,3.247,421,1.215,422,2.086,423,2.086,424,1.617,425,2.44,426,1.617,427,1.467,428,1.617,429,1.617,430,1.617,431,1.433,432,1.617,433,1.467,434,1.617,435,1.467,436,1.617,437,1.467,438,1.617,439,1.433,440,1.617,441,1.467,442,1.617,443,1.467,444,1.617,445,1.467,446,1.617,447,2.215,448,1.617,449,1.433,450,1.617,451,1.467,452,1.617,453,1.467,454,1.617,455,1.467,456,1.617,457,1.467,458,1.617,459,1.467,460,1.617,461,1.433,462,1.617,463,1.399,464,1.617,465,1.433,466,1.617,467,1.467,468,1.617,469,1.467,470,1.578,471,1.617,472,1.467,473,1.617,474,1.617,475,1.433,476,1.617,477,1.433,478,1.617,479,1.467,480,1.617,481,1.433,482,1.617,483,1.467,484,1.54,485,1.617,486,1.617,523,3.314,536,5.074,986,6.394,988,4.237,990,4.732,1021,3.932,1068,3.907,1069,3.907,1084,5.466,1085,5.074,1109,4.644,1110,6.789,1111,7.517,1112,6.789,1113,7.255,1114,6.789,1115,6.789,1116,6.789,1117,5.262,1118,5.262,1119,5.262,1120,5.262,1121,5.262,1122,6.789,1123,5.262,1124,6.789,1125,4.761,1126,5.074,1127,6.789,1128,5.074]],["title/injectables/EventGQL.html",[123,0.309,312,1.29]],["body/injectables/EventGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.15,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.762,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.639,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,1.159,313,2.378,314,1.216,315,1.216,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1129,2.496]],["title/components/EventsComponent.html",[19,0.449,449,1.201]],["body/components/EventsComponent.html",[3,0.14,4,0.14,5,0.128,7,0.394,8,0.761,12,0.597,13,0.009,15,0.223,19,0.804,20,2.149,22,0.14,29,3.797,34,3.236,35,2.266,41,2.204,42,3.156,43,2.542,44,0.14,49,2.554,50,2.436,52,1.976,54,0.153,55,1.554,56,1.84,64,1.421,65,1.63,67,1.955,72,2.204,77,2.247,120,0.006,121,0.007,122,0.006,136,0.945,170,0.756,191,1.382,196,2.309,197,0.708,215,0.768,228,0.831,254,0.831,316,2.247,335,1.63,336,2.175,337,1.84,338,1.796,339,1.796,343,1.796,344,1.752,345,2.123,351,1.798,360,1.482,361,1.414,363,1.448,365,1.752,381,1.554,421,1.35,422,2.229,423,2.229,424,1.796,425,2.535,426,1.796,427,1.63,428,1.796,429,1.796,430,1.796,431,1.592,432,1.796,433,1.63,434,1.796,435,1.63,436,1.796,437,1.63,438,1.796,439,1.592,440,1.796,441,1.63,442,1.796,443,1.63,444,1.796,445,1.63,446,1.796,447,1.63,448,1.796,449,2.247,450,1.796,451,1.63,452,1.796,453,1.63,454,1.796,455,1.63,456,1.796,457,1.63,458,1.796,459,1.63,460,1.796,461,1.592,462,1.796,463,1.554,464,1.796,465,1.592,466,1.796,467,1.63,468,1.796,469,1.63,470,1.752,471,1.796,472,1.63,473,1.796,474,1.796,475,1.592,476,1.796,477,1.592,478,1.796,479,1.63,480,1.796,481,1.592,482,1.796,483,1.63,484,1.71,485,1.796,486,1.796,595,5.842,1126,4.368,1128,4.368,1130,5.158,1131,7.891,1132,7.256,1133,5.844,1134,7.256,1135,7.256,1136,5.844,1137,5.844,1138,5.158,1139,5.844,1140,5.844,1141,5.844,1142,3.873,1143,5.844,1144,7.256,1145,7.256]],["title/modules/EventsModule.html",[557,1.23,569,3.091]],["body/modules/EventsModule.html",[3,0.161,4,0.161,5,0.146,13,0.009,15,0.231,22,0.161,44,0.161,54,0.176,120,0.007,121,0.008,122,0.007,421,1.547,449,2.515,557,1.868,559,2.334,560,3.204,561,4.004,562,3.314,563,3.314,564,4.004,569,6.494,570,4.575,571,4.038,572,3.433,573,3.433,576,3.055,577,2.972,579,3.856,595,5.394,702,5.918,703,5.394,1146,5.913,1147,5.913,1148,5.913,1149,5.913,1150,6.261,1151,6.7,1152,6.7,1153,5.913,1154,5.913]],["title/modules/EventsRoutingModule.html",[557,1.23,1150,3.091]],["body/modules/EventsRoutingModule.html",[3,0.169,4,0.169,5,0.154,13,0.009,15,0.224,19,0.717,22,0.169,44,0.169,54,0.185,120,0.007,121,0.008,122,0.007,258,1.082,449,2.21,554,3.16,559,2.455,576,2.731,577,3.061,597,4.054,598,4.379,599,4.054,601,4.054,602,4.235,1150,5.69,1153,6.217,1155,7.045]],["title/modules/GraphQLModule.html",[557,1.23,719,3.091]],["body/modules/GraphQLModule.html",[3,0.137,4,0.137,5,0.125,12,0.432,13,0.009,15,0.239,22,0.137,44,0.137,54,0.15,59,3.005,87,1.448,107,1.73,120,0.006,121,0.007,122,0.006,139,1.382,156,1.555,200,1.483,208,1.631,252,2.402,253,1.947,255,1.592,258,1.366,358,3.019,380,2.925,421,1.318,555,3.039,557,1.592,559,1.989,560,2.73,561,2.73,562,2.824,563,3.862,564,3.42,571,3.664,572,2.925,573,2.925,577,2.697,615,5.495,628,4.266,630,4.003,631,5.038,710,4.596,719,6.029,736,3.784,752,5.038,754,5.038,756,4.15,797,6.029,799,5.038,831,3.596,848,5.344,853,6.185,890,5.344,1156,5.038,1157,5.038,1158,4.266,1159,7.15,1160,7.15,1161,7.15,1162,6.31,1163,7.699,1164,5.038,1165,5.709,1166,5.709,1167,5.709,1168,5.709,1169,5.344,1170,7.807,1171,5.709,1172,5.709,1173,5.757,1174,4.266,1175,4.266,1176,7.15,1177,7.699,1178,5.038,1179,7.15,1180,5.038,1181,4.596,1182,5.038,1183,5.709,1184,5.709,1185,5.709,1186,5.709,1187,5.709,1188,5.709,1189,5.709,1190,5.709,1191,5.709,1192,5.709,1193,5.709,1194,5.709,1195,5.709,1196,5.709,1197,5.709,1198,5.709,1199,5.709,1200,5.709,1201,4.266,1202,7.15,1203,5.709,1204,5.709,1205,7.807,1206,5.344,1207,5.709,1208,5.709,1209,4.266,1210,5.709,1211,5.709,1212,5.709,1213,5.038,1214,7.15,1215,5.709,1216,5.709,1217,5.709,1218,5.709,1219,7.15,1220,5.709,1221,4.596]],["title/injectables/GraphqlSubscriptionService.html",[123,0.309,615,2.777]],["body/injectables/GraphqlSubscriptionService.html",[0,0.923,3,0.144,4,0.144,5,0.131,7,0.406,8,0.775,11,1.589,12,0.558,13,0.009,14,1.137,15,0.224,22,0.144,44,0.177,54,0.158,64,1.446,65,2.503,67,1.829,89,1.941,92,3.277,111,1.234,112,4.079,115,2.713,120,0.006,121,0.007,122,0.006,123,0.518,125,1.525,129,1.565,136,0.98,170,0.707,197,0.728,258,1.134,272,1.325,273,1.294,316,2.269,319,2.269,322,2.291,326,2.164,351,1.829,360,1.873,361,1.787,363,1.829,365,2.214,400,3.08,405,2.875,555,2.095,615,5.033,630,6.106,808,4.65,851,2.974,854,4.215,866,4.215,867,4.215,1169,4.493,1173,7.172,1174,4.493,1175,4.493,1222,4.84,1223,7.052,1224,7.355,1225,6.012,1226,5.524,1227,5.972,1228,7.052,1229,7.052,1230,4.873,1231,6.012,1232,6.516,1233,6.012,1234,6.012,1235,6.012,1236,6.012,1237,6.012,1238,6.012,1239,5.305,1240,4.84,1241,5.518,1242,4.215,1243,4.84,1244,4.84,1245,5.305,1246,6.516,1247,3.984,1248,5.305,1249,5.305,1250,5.305,1251,5.305,1252,5.305,1253,5.305,1254,5.305,1255,5.305,1256,5.305,1257,5.305,1258,5.305,1259,5.305,1260,5.305,1261,4.493,1262,5.305,1263,5.305,1264,5.305,1265,5.305,1266,5.305,1267,5.305]],["title/injectables/I18Service.html",[29,1.861,123,0.309]],["body/injectables/I18Service.html",[3,0.157,4,0.157,5,0.142,7,0.44,8,0.814,12,0.626,13,0.009,14,1.262,15,0.225,22,0.157,29,3.275,31,4.245,32,2.754,33,2.754,44,0.157,54,0.171,64,1.277,67,2.122,75,5.14,120,0.006,121,0.008,122,0.006,123,0.544,125,1.654,128,1.437,129,1.277,136,1.002,170,0.743,272,1.437,273,1.404,351,1.922,360,1.967,361,1.877,363,1.922,365,2.325,555,2.272,793,4.874,808,4.885,1268,5.756,1269,8.278,1270,7.756,1271,8.566,1272,8.278,1273,6.522,1274,6.522,1275,7.756,1276,6.522,1277,6.522,1278,8.749,1279,8.566,1280,6.522,1281,6.522,1282,6.522,1283,6.522,1284,6.522,1285,6.522,1286,6.522,1287,6.522,1288,8.749,1289,6.522,1290,6.522,1291,6.522,1292,6.522,1293,6.522]],["title/interfaces/IPossibleKickoffs.html",[0,0.677,1294,3.091]],["body/interfaces/IPossibleKickoffs.html",[0,1.058,2,2.663,3,0.129,4,0.129,5,0.117,7,0.581,8,0.723,11,1.895,12,0.626,13,0.009,14,1.081,15,0.231,19,0.702,20,1.876,22,0.129,29,3.208,30,2.663,34,2.826,35,2.087,36,1.755,41,2.031,42,2.342,43,2.342,44,0.129,47,1.303,49,1.466,50,1.398,52,1.466,54,0.141,56,1.366,59,2.53,60,2.974,62,1.939,64,1.054,65,1.501,67,1.707,77,1.466,89,1.738,91,2.415,92,2.826,114,2.273,115,1.828,118,3.236,120,0.005,121,0.007,122,0.005,129,1.349,191,1.273,197,1.003,199,1.398,204,2.13,222,2.184,223,1.398,224,1.432,258,1.23,345,1.575,370,4.786,379,2.758,405,2.575,463,1.432,484,2.016,555,2.791,587,3.775,674,3.806,756,2.862,860,2.492,930,4.566,974,4.023,975,4.023,989,4.567,990,4.198,997,4.023,999,5.149,1018,5.149,1019,4.023,1020,3.775,1026,4.023,1027,4.023,1028,4.023,1029,4.566,1030,4.023,1031,4.023,1032,4.023,1033,5.986,1034,4.023,1035,4.023,1036,5.679,1037,3.775,1068,3.098,1069,3.098,1125,5.328,1294,5.806,1295,4.023,1296,4.023,1297,6.666,1298,6.666,1299,6.666,1300,5.617,1301,5.547,1302,4.335,1303,4.023,1304,4.335,1305,5.547,1306,4.335,1307,4.335,1308,4.335,1309,4.023,1310,4.023,1311,6.666,1312,4.335,1313,4.335,1314,4.335,1315,4.335,1316,4.335,1317,4.335,1318,4.335,1319,4.335,1320,4.335,1321,4.335,1322,4.335,1323,4.335,1324,4.335,1325,5.547,1326,4.335,1327,4.335,1328,4.335,1329,4.335,1330,4.335,1331,4.335,1332,4.335,1333,4.335,1334,5.547,1335,5.547,1336,5.547,1337,4.335,1338,4.335,1339,4.335,1340,4.335,1341,6.118,1342,4.335,1343,4.335,1344,4.335,1345,4.335,1346,4.335,1347,4.335,1348,4.335,1349,4.335,1350,4.335,1351,4.335,1352,4.023,1353,4.335,1354,4.335,1355,5.547,1356,4.335,1357,4.335,1358,4.335,1359,4.335,1360,4.335,1361,4.335,1362,4.335,1363,3.775,1364,4.335,1365,4.335,1366,4.335,1367,4.335,1368,4.335,1369,4.335,1370,4.335,1371,3.806,1372,4.335,1373,4.335,1374,5.547,1375,5.547]],["title/interfaces/ISnackBarData.html",[0,0.677,1376,3.295]],["body/interfaces/ISnackBarData.html",[0,1.068,2,3.44,3,0.167,4,0.167,5,0.152,7,0.469,8,0.845,12,0.526,13,0.009,14,1.209,15,0.211,18,2.423,19,0.82,20,2.193,21,3.842,22,0.167,44,0.193,49,1.894,50,1.806,52,1.894,54,0.182,56,1.764,64,1.362,67,1.723,72,2.623,77,1.894,120,0.007,121,0.008,122,0.007,345,2.035,355,3.696,381,1.849,400,4.481,1376,6.354,1377,5.599,1378,6.137,1379,6.137,1380,6.137,1381,6.137]],["title/interfaces/ITeamCanPlayAtDate.html",[0,0.677,1300,3.091]],["body/interfaces/ITeamCanPlayAtDate.html",[0,1.067,2,2.699,3,0.131,4,0.131,5,0.119,7,0.543,8,0.729,11,1.789,12,0.525,13,0.009,14,1.087,15,0.231,19,0.708,20,1.892,22,0.131,29,3.228,30,2.699,34,2.849,35,2.115,36,1.963,41,2.058,42,2.373,43,2.373,44,0.131,47,1.85,49,1.486,50,1.417,52,1.486,54,0.143,56,1.384,59,2.551,60,3.014,62,1.682,64,1.068,65,1.521,67,1.721,77,1.486,89,1.761,91,2.447,92,2.849,114,2.303,115,1.852,118,3.279,120,0.005,121,0.007,122,0.005,129,1.361,191,1.29,197,1.007,199,1.417,204,1.848,222,2.042,223,1.417,224,1.451,258,1.236,345,1.596,370,4.816,379,2.795,405,2.609,463,1.451,484,2.033,555,2.805,587,3.825,674,3.839,756,2.9,860,3.539,930,4.605,974,4.077,975,4.077,989,4.596,990,4.224,997,4.077,999,5.193,1018,5.193,1019,4.077,1020,3.825,1026,4.077,1027,4.077,1028,4.077,1029,4.605,1030,4.077,1031,4.077,1032,4.077,1033,6.016,1034,4.077,1035,4.077,1036,5.714,1037,3.825,1068,3.14,1069,3.14,1125,5.361,1294,5.644,1295,4.077,1296,4.077,1297,5.594,1298,5.594,1299,5.594,1300,5.361,1301,5.594,1302,4.392,1303,4.077,1304,4.392,1305,6.693,1306,4.392,1307,4.392,1308,4.392,1309,4.077,1310,4.077,1311,6.693,1312,4.392,1313,4.392,1314,4.392,1315,4.392,1316,4.392,1317,4.392,1318,4.392,1319,4.392,1320,4.392,1321,4.392,1322,4.392,1323,4.392,1324,4.392,1325,5.594,1326,4.392,1327,4.392,1328,4.392,1329,4.392,1330,4.392,1331,4.392,1332,4.392,1333,4.392,1334,5.594,1335,5.594,1336,5.594,1337,4.392,1338,4.392,1339,4.392,1340,4.392,1341,6.156,1342,4.392,1343,4.392,1344,4.392,1345,4.392,1346,4.392,1347,4.392,1348,4.392,1349,4.392,1350,4.392,1351,4.392,1352,4.077,1353,4.392,1354,4.392,1355,5.594,1356,4.392,1357,4.392,1358,4.392,1359,4.392,1360,4.392,1361,4.392,1362,4.392,1363,3.825,1364,4.392,1365,4.392,1366,4.392,1367,4.392,1368,4.392,1369,4.392,1370,4.392,1371,3.839,1372,4.392,1373,4.392,1374,5.594,1375,5.594]],["title/interfaces/IntrospectionResultData.html",[0,0.677,1382,2.777]],["body/interfaces/IntrospectionResultData.html",[0,0.982,2,3.164,3,0.154,4,0.154,5,0.14,7,0.432,8,0.805,12,0.689,13,0.009,14,1.211,15,0.215,22,0.154,28,4.075,44,0.218,54,0.168,87,1.622,110,1.585,111,1.574,120,0.008,121,0.008,122,0.006,123,0.538,127,1.872,128,1.409,130,2.19,138,2.431,139,1.548,150,1.872,151,1.872,156,2.088,170,0.734,251,1.872,252,2.37,253,2.236,254,1.09,255,1.784,256,1.827,258,0.982,271,1.872,272,1.409,273,1.377,275,1.827,334,1.872,1206,4.78,1209,6.135,1226,4.239,1261,5.729,1382,5.171,1383,4.485,1384,6.504,1385,6.172,1386,7.114,1387,6.766,1388,5.645,1389,5.729,1390,5.15]],["title/interfaces/IntrospectionResultData-1.html",[0,0.564,1371,2.029,1382,2.313]],["body/interfaces/IntrospectionResultData-1.html",[0,1.076,2,3.465,3,0.168,4,0.168,5,0.153,7,0.473,8,0.849,12,0.645,13,0.009,14,1.213,44,0.194,120,0.008,121,0.008,122,0.007,128,1.544,170,0.774,258,1.076,1206,5.235,1382,5.371,1384,6.662,1385,6.512,1389,6.044,1390,5.64,1391,5.64,1392,5.64]],["title/injectables/LatestEventGQL.html",[123,0.309,316,1.201]],["body/injectables/LatestEventGQL.html",[0,0.607,3,0.06,4,0.06,5,0.054,7,0.168,8,0.415,9,1.523,11,1.465,12,0.705,13,0.009,14,1.313,15,0.129,22,0.06,36,1.876,37,0.678,38,1.076,39,0.647,40,0.647,44,0.226,46,0.695,47,1.647,48,0.695,54,0.228,57,1.661,62,1.476,87,0.632,94,1.598,96,1.598,100,1.598,102,0.711,104,0.711,107,2.15,110,2.152,111,1.845,120,0.002,121,0.004,122,0.002,123,0.611,124,0.711,125,0.632,126,0.695,127,2.557,128,0.549,129,0.488,130,2.559,131,2.708,132,0.765,133,2.272,134,0.765,135,2.04,136,0.285,138,2.662,139,0.603,140,1.598,141,1.214,142,0.729,143,1.185,144,1.185,145,1.185,146,0.678,147,1.102,148,0.747,149,0.747,150,0.729,151,2.614,152,1.214,153,2.116,154,1.854,155,1.854,156,2.444,157,1.185,158,1.185,159,1.9,160,1.185,161,1.677,162,0.765,163,2.065,164,1.598,165,0.765,166,0.765,167,1.129,168,0.765,169,1.185,170,0.811,171,1.185,172,1.185,173,1.51,174,1.677,175,1.185,176,1.767,177,0.765,178,1.677,179,2.157,180,2.157,181,1.9,182,1.157,183,1.677,184,1.185,185,1.214,186,1.214,187,1.677,188,1.487,189,1.9,190,1.677,191,1.761,192,1.185,193,0.765,194,1.829,195,2.18,196,1.157,197,0.881,198,1.003,199,0.647,200,2.039,201,0.747,202,1.102,203,1.438,204,1.051,205,2.016,206,0.747,207,1.129,208,1.854,209,0.747,210,1.157,211,1.9,212,0.747,213,1.981,214,0.747,215,0.928,216,1.473,217,1.185,218,1.785,219,2.329,220,1.185,221,1.185,222,1.844,223,1.686,224,1.622,225,1.185,226,1.185,227,1.185,228,1.1,229,1.157,230,1.677,231,1.185,232,0.729,233,1.157,234,1.157,235,1.404,236,1.185,237,1.185,238,1.438,239,1.438,240,0.765,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.677,248,0.747,249,1.185,250,0.747,251,0.729,252,1.661,253,1.338,254,0.562,255,1.102,256,0.711,257,0.765,258,1.188,259,1.438,260,1.811,261,1.438,262,1.404,263,1.438,264,1.157,265,1.157,266,1.157,267,1.157,268,1.438,269,1.637,270,1.157,271,0.729,272,1.914,273,1.869,274,0.711,275,2.481,276,2.496,277,1.51,278,0.711,279,0.765,280,0.765,281,0.711,282,0.765,283,0.765,284,0.662,285,0.765,286,0.765,287,0.678,288,0.765,289,0.765,290,0.711,291,0.765,292,0.765,293,0.711,294,0.765,295,0.765,296,0.711,297,0.765,298,0.711,299,0.765,300,0.765,301,0.711,302,0.765,303,0.765,304,0.711,305,0.695,306,0.765,307,0.765,308,0.711,309,0.765,310,0.765,311,0.711,312,0.729,313,2.376,314,0.765,315,0.765,316,1.076,317,1.214,318,1.214,319,0.678,320,0.765,321,0.765,322,0.647,323,0.765,324,1.214,325,0.711,326,0.647,327,0.765,328,0.678,329,0.711,330,0.765,331,0.765,332,0.662,333,0.711,334,0.729,1393,2.491]],["title/injectables/LocateMatchGQL.html",[123,0.309,281,1.259]],["body/injectables/LocateMatchGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.182,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,2.042,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,1.131,282,1.216,283,1.216,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1394,2.496]],["title/components/LoginComponent.html",[19,0.449,451,1.23]],["body/components/LoginComponent.html",[3,0.126,4,0.126,5,0.114,7,0.354,8,0.711,12,0.636,13,0.009,14,1.067,15,0.224,16,4.536,18,1.825,19,0.764,20,2.043,22,0.126,31,4.092,32,2.212,33,2.212,44,0.126,49,2.539,50,2.422,52,1.844,54,0.137,55,1.393,56,1.717,64,1.326,65,2.386,67,1.859,68,4.364,72,2.554,77,2.159,89,2.715,91,2.35,92,2.777,114,2.212,115,2.692,120,0.005,121,0.007,122,0.005,136,1.003,163,1.758,170,0.759,188,1.393,197,0.635,215,0.689,228,0.745,254,0.745,284,1.393,335,1.461,336,2.03,337,1.65,338,1.61,339,1.61,343,1.61,344,1.571,345,1.981,351,1.677,355,3.987,356,4.563,358,3.613,360,1.717,361,1.639,363,1.965,365,2.03,378,3.473,379,2.685,380,2.685,381,1.8,382,3.674,386,4.487,399,4.07,400,3.469,402,4.07,403,4.766,404,3.473,405,2.506,407,3.3,409,4.624,410,4.624,419,2.486,421,1.21,422,2.08,423,2.08,424,1.61,425,2.436,426,1.61,427,1.461,428,1.61,429,1.61,430,1.61,431,1.427,432,1.61,433,1.461,434,1.61,435,1.461,436,1.61,437,1.461,438,1.61,439,1.427,440,1.61,441,1.461,442,1.61,443,1.461,444,1.61,445,1.461,446,1.61,447,1.461,448,1.61,449,1.427,450,1.61,451,2.211,452,1.61,453,1.461,454,1.61,455,1.461,456,1.61,457,1.461,458,1.61,459,1.461,460,1.61,461,1.427,462,1.61,463,1.393,464,1.61,465,1.427,466,1.61,467,1.461,468,1.61,469,1.461,470,1.571,471,1.61,472,1.461,473,1.61,474,1.61,475,1.427,476,1.61,477,1.427,478,1.61,479,1.461,480,1.61,481,1.427,482,1.61,483,1.461,484,1.533,485,1.61,486,1.61,657,5.975,756,3.987,851,2.592,852,3.674,860,3.67,883,4.265,909,4.219,910,5.975,911,5.975,993,6.77,1012,6.04,1024,4.219,1395,4.624,1396,8.409,1397,7.501,1398,6.771,1399,7.501,1400,6.62,1401,7.929,1402,6.771,1403,5.24,1404,6.771,1405,5.24,1406,5.24,1407,5.24,1408,6.771,1409,5.24,1410,5.24,1411,5.24,1412,5.24,1413,5.24,1414,4.624,1415,7.501,1416,5.24,1417,5.24,1418,4.624,1419,5.24,1420,5.24,1421,5.24,1422,6.771,1423,5.975,1424,6.771]],["title/interfaces/LoginContext.html",[0,0.677,829,3.091]],["body/interfaces/LoginContext.html",[0,1.096,2,2.815,3,0.137,4,0.137,5,0.124,7,0.384,8,0.749,12,0.539,13,0.009,14,1.287,15,0.221,22,0.137,44,0.187,54,0.149,59,3.154,64,1.114,65,2.28,67,2.128,89,2.304,115,2.647,120,0.008,121,0.007,122,0.006,123,0.501,139,1.978,146,1.549,163,1.853,164,1.625,167,1.625,188,2.174,215,0.938,258,0.874,272,1.254,273,1.225,284,1.898,287,1.943,332,1.898,358,3.013,415,4.252,416,4.252,554,2.552,555,3.098,736,3.771,772,4.494,797,5.003,800,4.252,803,4.581,805,4.581,809,4.581,810,4.581,811,4.581,812,4.581,814,6.277,815,4.252,816,4.581,817,4.581,819,4.581,820,5.826,823,5.552,824,4.581,826,3.771,828,4.581,829,5.466,831,4.494,833,4.581,835,4.581,836,5.466,838,4.581,848,5.333,849,5.333,850,4.252,851,2.815,852,5.731,853,3.99,854,3.99,855,4.581,856,4.581,857,5.745,858,4.581,859,4.581,860,2.634,861,6.917,862,4.581,863,5.694,864,5.58,865,4.581,866,3.99,867,3.99,868,4.581,869,5.745,870,4.581,871,4.581,872,4.91,873,4.581,874,5.745,875,4.581,876,5.745,877,5.167,878,4.581,879,4.581,880,4.581,881,4.581,882,5.745,883,4.494,884,4.581,885,4.581,886,4.252,887,4.581,888,4.581,889,4.581,890,4.252,891,4.581,892,4.581]],["title/components/ManageseasonComponent.html",[19,0.449,453,1.23]],["body/components/ManageseasonComponent.html",[3,0.09,4,0.09,5,0.082,7,0.426,8,0.566,11,1.805,12,0.669,13,0.009,14,1.178,15,0.217,18,1.309,19,0.643,20,1.719,22,0.09,23,4.098,29,3.498,31,3.747,32,1.586,33,1.586,34,2.996,35,1.456,42,2.346,43,1.634,44,0.09,49,2.485,50,2.37,52,1.469,54,0.098,55,0.999,56,1.368,59,2.317,60,2.075,62,2.005,64,1.056,65,2.235,67,2.022,72,2.756,77,1.719,83,2.633,89,2.707,91,2.831,92,2.588,106,4.146,107,1.669,110,1.709,111,1.5,112,3.487,114,2.665,115,2.342,116,4.031,120,0.004,121,0.005,122,0.004,124,1.97,128,1.189,129,1.056,133,1.541,135,1.892,136,1.024,140,1.803,170,0.803,171,1.617,172,1.617,174,1.126,175,2.068,191,1.275,197,0.653,198,1.368,199,0.975,200,1.639,207,1.073,215,0.494,223,1.791,228,0.534,254,0.534,258,0.828,293,1.97,296,1.97,298,2.238,322,2.035,328,2.133,335,1.047,336,1.617,337,1.183,338,1.154,339,1.154,343,1.154,344,1.126,345,1.578,351,1.336,355,3.355,356,3.97,360,2.071,361,1.975,363,2.078,365,2.349,367,5.081,381,1.434,382,2.633,399,4.146,400,3.534,402,4.146,403,4.818,404,3.575,407,3.397,417,3.97,419,3.203,421,0.867,422,1.657,423,1.657,424,1.154,425,2.119,426,1.154,427,1.047,428,1.154,429,1.154,430,1.154,431,1.023,432,1.154,433,1.047,434,1.154,435,1.047,436,1.154,437,1.047,438,1.154,439,1.023,440,1.154,441,1.047,442,1.154,443,1.047,444,1.154,445,1.047,446,1.154,447,1.047,448,1.154,449,1.023,450,1.154,451,1.047,452,1.154,453,1.924,454,1.154,455,1.047,456,1.154,457,1.047,458,1.154,459,1.047,460,1.154,461,1.023,462,1.154,463,0.999,464,1.154,465,1.023,466,1.154,467,1.047,468,1.154,469,1.047,470,1.126,471,1.154,472,1.047,473,1.154,474,1.154,475,1.023,476,1.154,477,1.023,478,1.154,479,1.047,480,1.154,481,1.023,482,1.154,483,1.047,484,1.099,485,1.154,486,1.154,536,5.155,555,2.403,674,2.98,826,4.572,851,1.858,872,2.366,912,4.343,1068,3.104,1069,3.104,1126,4.031,1128,4.031,1138,3.314,1142,3.575,1201,4.717,1230,4.51,1309,5.46,1310,4.717,1352,4.031,1371,4.429,1425,3.314,1426,6.311,1427,5.394,1428,6.311,1429,6.311,1430,6.311,1431,6.311,1432,6.311,1433,5.57,1434,5.394,1435,5.394,1436,5.394,1437,5.394,1438,6.898,1439,5.394,1440,5.394,1441,2.807,1442,6.311,1443,6.311,1444,6.311,1445,5.394,1446,3.756,1447,3.756,1448,3.314,1449,5.394,1450,3.756,1451,5.394,1452,6.447,1453,6.311,1454,3.756,1455,3.756,1456,3.756,1457,3.756,1458,3.756,1459,5.394,1460,3.756,1461,5.394,1462,6.898,1463,3.756,1464,3.756,1465,5.394,1466,3.756,1467,5.394,1468,3.756,1469,3.756,1470,5.394,1471,3.756,1472,3.756,1473,3.756,1474,3.756,1475,3.756,1476,3.756,1477,3.756,1478,3.756,1479,3.756,1480,2.807,1481,3.314,1482,3.314,1483,3.314,1484,3.756,1485,6.311,1486,3.756,1487,5.394,1488,3.756,1489,3.756,1490,3.756,1491,4.76,1492,3.314,1493,2.807,1494,2.807,1495,3.314,1496,6.898,1497,5.394,1498,3.756,1499,8.016,1500,6.898,1501,3.756,1502,3.756,1503,3.756,1504,3.756,1505,3.756,1506,3.756,1507,5.081,1508,5.081,1509,3.314,1510,3.756,1511,3.756,1512,3.756,1513,3.756,1514,3.756,1515,3.756,1516,3.756,1517,3.756,1518,3.756,1519,3.756,1520,3.756,1521,3.756,1522,3.756,1523,3.756,1524,3.756,1525,3.756,1526,6.898,1527,3.756,1528,5.394,1529,3.756,1530,4.76,1531,5.394,1532,5.394,1533,5.394,1534,4.76,1535,5.394,1536,5.394,1537,5.394,1538,5.394,1539,4.343,1540,5.394]],["title/components/ManagetournamentComponent.html",[19,0.449,455,1.23]],["body/components/ManagetournamentComponent.html",[3,0.116,4,0.116,5,0.106,7,0.487,8,0.674,9,1.749,11,1.807,12,0.659,13,0.009,14,1.138,15,0.22,18,1.685,19,0.735,20,1.965,22,0.116,34,3.281,35,1.875,39,1.996,40,1.996,42,3.138,43,2.104,44,0.116,49,2.528,50,2.411,52,1.749,54,0.127,55,1.708,56,1.63,59,1.776,60,2.672,64,1.258,65,2.294,66,5.391,67,1.787,70,5.058,72,1.824,77,2.093,89,2.655,92,1.983,106,2.907,107,1.17,108,3.614,111,1.319,112,2.672,120,0.007,121,0.006,122,0.005,128,1.066,129,0.947,136,1.028,170,0.804,184,2.163,197,0.874,210,1.415,215,0.636,223,1.256,228,0.688,235,2.061,254,0.688,258,0.743,308,2.196,335,1.349,336,1.926,337,1.523,338,1.486,339,1.486,343,1.486,344,1.45,345,1.88,351,1.592,360,1.63,361,1.555,363,2.038,365,2.304,381,1.286,384,3.614,419,3.13,421,1.117,422,1.974,423,1.974,424,1.486,425,2.362,426,1.486,427,1.349,428,1.486,429,1.486,430,1.486,431,1.317,432,1.486,433,1.349,434,1.486,435,1.349,436,1.486,437,1.349,438,1.486,439,1.317,440,1.486,441,1.349,442,1.486,443,1.349,444,1.486,445,1.349,446,1.486,447,1.349,448,1.486,449,1.317,450,1.486,451,1.349,452,1.486,453,1.349,454,1.486,455,2.144,456,1.486,457,1.349,458,1.486,459,1.349,460,1.486,461,1.317,462,1.486,463,1.286,464,1.486,465,1.317,466,1.486,467,1.349,468,1.486,469,1.349,470,1.45,471,1.486,472,1.349,473,1.486,474,1.486,475,1.317,476,1.486,477,1.317,478,1.486,479,1.349,480,1.486,481,1.317,482,1.486,483,1.349,484,1.415,485,1.486,486,1.486,490,5.744,493,5.979,555,1.685,674,3.549,851,2.392,1068,3.697,1069,3.697,1201,5.391,1363,3.391,1371,3.986,1509,4.268,1541,4.268,1542,6.424,1543,7.214,1544,6.424,1545,7.214,1546,7.214,1547,7.214,1548,7.214,1549,7.214,1550,6.367,1551,6.424,1552,7.687,1553,7.687,1554,7.687,1555,7.687,1556,4.268,1557,6.424,1558,6.424,1559,4.836,1560,4.836,1561,4.836,1562,4.836,1563,4.836,1564,4.836,1565,4.836,1566,4.836,1567,4.836,1568,4.836,1569,4.836,1570,6.424,1571,4.836,1572,4.836,1573,4.836,1574,6.424,1575,4.836,1576,4.268,1577,4.836,1578,4.268,1579,4.836,1580,4.836,1581,4.268,1582,4.836,1583,3.614,1584,6.424,1585,7.214,1586,4.836,1587,6.424,1588,6.424,1589,4.836,1590,4.836,1591,8.225,1592,4.836,1593,4.836,1594,4.836,1595,5.67,1596,6.424,1597,6.424,1598,6.424,1599,6.424]],["title/components/ManageusersComponent.html",[19,0.449,457,1.23]],["body/components/ManageusersComponent.html",[3,0.148,4,0.148,5,0.135,7,0.417,13,0.009,15,0.162,19,0.824,20,2.203,22,0.148,44,0.148,49,2.561,50,2.443,52,2.045,54,0.162,55,1.643,56,1.905,64,1.584,77,2.291,89,2.611,120,0.006,121,0.007,122,0.006,136,0.86,170,0.719,197,0.749,215,0.812,228,0.879,254,0.879,335,1.724,336,2.251,337,1.946,338,1.899,339,1.899,343,1.899,344,1.853,345,2.197,351,1.86,363,1.531,381,1.643,421,1.427,422,2.307,423,2.307,424,1.899,425,2.585,426,1.899,427,1.724,428,1.899,429,1.899,430,1.899,431,1.683,432,1.899,433,1.724,434,1.899,435,1.724,436,1.899,437,1.724,438,1.899,439,1.683,440,1.899,441,1.724,442,1.899,443,1.724,444,1.899,445,1.724,446,1.899,447,1.724,448,1.899,449,1.683,450,1.899,451,1.724,452,1.899,453,1.724,454,1.899,455,1.724,456,1.899,457,2.346,458,1.899,459,1.724,460,1.899,461,1.683,462,1.899,463,1.643,464,1.899,465,1.683,466,1.899,467,1.724,468,1.899,469,1.724,470,1.853,471,1.899,472,1.724,473,1.899,474,1.899,475,1.683,476,1.899,477,1.683,478,1.899,479,1.724,480,1.899,481,1.683,482,1.899,483,1.724,484,1.808,485,1.899,486,1.899,1600,5.454,1601,7.509,1602,8.089,1603,7.509,1604,6.18,1605,6.18]],["title/components/MatchComponent.html",[19,0.449,459,1.23]],["body/components/MatchComponent.html",[3,0.109,4,0.109,5,0.099,7,0.306,8,0.646,11,0.976,12,0.657,13,0.009,15,0.23,18,1.58,19,0.711,20,1.902,22,0.109,29,3.636,30,2.244,31,4.118,32,1.915,33,1.915,41,1.711,44,0.109,49,2.518,50,2.401,52,1.676,54,0.119,55,1.206,56,1.561,59,1.665,64,1.205,67,2.232,68,3.712,72,3.115,77,2.039,89,1.986,120,0.008,121,0.006,122,0.005,136,1.028,170,0.717,197,1,198,1.561,213,1.857,215,0.596,228,0.645,254,0.645,258,1.072,335,1.265,336,1.845,337,1.428,338,1.393,339,1.393,343,1.393,344,1.36,345,1.801,351,1.525,355,4.162,356,4.506,357,4.325,358,3.306,360,1.561,361,1.489,363,2,365,2.347,380,2.324,381,1.636,399,4.198,400,3.578,402,4.963,403,4.853,404,4.629,419,3.162,421,1.047,422,1.891,423,1.891,424,1.393,425,2.301,426,1.393,427,1.265,428,1.393,429,1.393,430,1.393,431,1.235,432,1.393,433,1.265,434,1.393,435,1.265,436,1.393,437,1.716,438,1.393,439,1.235,440,1.393,441,1.265,442,1.393,443,1.716,444,1.393,445,1.716,446,1.393,447,1.716,448,1.393,449,1.235,450,1.393,451,1.265,452,1.393,453,1.265,454,1.393,455,1.265,456,1.393,457,1.265,458,1.393,459,2.089,460,1.393,461,1.235,462,1.393,463,1.206,464,1.393,465,1.235,466,1.393,467,1.265,468,1.393,469,1.265,470,1.36,471,1.393,472,1.265,473,1.393,474,1.393,475,1.235,476,1.393,477,1.235,478,1.393,479,1.265,480,1.393,481,1.235,482,1.393,483,1.265,484,1.327,485,1.393,486,1.393,490,6.278,493,5.851,509,4.599,555,1.58,668,4.003,766,6.609,860,3.624,927,4.599,930,4.964,990,4.757,1021,3.39,1029,3.006,1068,3.541,1069,3.541,1070,5.431,1071,5.431,1073,5.431,1074,4.954,1097,4.003,1125,5.251,1363,4.315,1556,4.003,1606,4.003,1607,6.984,1608,6.153,1609,6.153,1610,7.489,1611,7.489,1612,7.489,1613,7.489,1614,6.984,1615,5.431,1616,5.623,1617,6.153,1618,4.535,1619,4.535,1620,4.535,1621,6.163,1622,6.153,1623,4.535,1624,4.535,1625,4.535,1626,4.535,1627,4.535,1628,4.535,1629,4.535,1630,4.535,1631,4.535,1632,4.535,1633,4.535,1634,4.535,1635,5.431,1636,4.535,1637,4.535,1638,4.535,1639,4.535,1640,4.535,1641,6.984,1642,7.489,1643,6.984,1644,4.535,1645,6.984,1646,4.535,1647,4.535,1648,4.535,1649,4.535,1650,4.535,1651,4.535,1652,4.535,1653,6.609,1654,5.431,1655,6.153,1656,6.153,1657,4.535,1658,4.003,1659,6.153,1660,6.153,1661,6.153,1662,6.153,1663,6.153,1664,4.535,1665,4.535,1666,4.535,1667,4.535,1668,4.003]],["title/interfaces/MatchEventPayload.html",[0,0.677,1241,3.295]],["body/interfaces/MatchEventPayload.html",[0,0.954,2,3.073,3,0.149,4,0.149,5,0.136,7,0.419,8,0.79,11,1.889,12,0.637,13,0.009,14,1.263,15,0.226,22,0.149,44,0.181,54,0.163,64,1.217,65,2.477,67,1.866,89,2.005,92,3.325,111,1.275,112,4.161,115,2.753,120,0.006,121,0.007,122,0.006,123,0.528,129,1.475,197,0.752,258,1.156,272,1.369,273,1.337,316,2.051,319,2.051,322,2.105,326,1.956,400,3.183,405,2.971,555,2.164,615,4.744,630,4.355,851,3.073,854,4.355,866,4.355,867,4.355,1169,4.642,1173,6.951,1174,4.642,1175,4.642,1222,5.001,1223,5.482,1224,5.482,1226,4.992,1227,4.642,1228,5.482,1229,5.482,1230,4.479,1232,5.482,1239,5.482,1240,5.001,1241,6.058,1242,5.91,1243,6.786,1244,6.786,1245,7.438,1246,6.647,1247,4.117,1248,5.482,1249,5.482,1250,5.482,1251,5.482,1252,5.482,1253,5.482,1254,5.482,1255,5.482,1256,5.482,1257,5.482,1258,5.482,1259,5.482,1260,5.482,1261,4.642,1262,5.482,1263,5.482,1264,5.482,1265,5.482,1266,5.482,1267,5.482]],["title/injectables/MatchGQL.html",[123,0.309,319,1.201]],["body/injectables/MatchGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.15,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.903,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.6,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,1.078,320,1.216,321,1.216,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1669,2.496]],["title/injectables/MatchPlanGQL.html",[123,0.309,322,1.145]],["body/injectables/MatchPlanGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.15,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.066,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.44,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,1.028,323,1.216,324,1.512,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1670,2.496]],["title/components/MatchSchedulingComponent.html",[19,0.449,463,1.172]],["body/components/MatchSchedulingComponent.html",[0,0.886,3,0.099,4,0.099,5,0.09,7,0.511,8,0.606,11,1.82,12,0.646,13,0.009,14,1.024,15,0.219,19,0.677,20,1.811,22,0.099,29,3.569,30,2.043,34,2.727,35,1.601,36,1.535,41,1.558,42,1.797,43,1.797,44,0.099,47,1,49,2.502,50,2.386,52,1.571,54,0.108,55,1.098,56,1.464,59,2.643,60,3.188,62,1.396,64,1.13,65,1.152,67,1.944,77,1.96,89,1.333,91,1.853,92,2.366,114,1.744,115,1.403,118,2.483,120,0.004,121,0.006,122,0.004,128,1.465,129,1.483,136,1.017,170,0.771,191,1.572,197,1.024,199,1.073,202,1.609,204,1.914,215,0.543,222,1.921,223,1.967,224,1.098,228,0.587,254,0.587,258,1.105,335,1.152,336,1.73,337,1.301,338,1.269,339,1.269,343,1.269,344,1.238,345,1.688,351,1.43,360,1.921,361,1.833,363,2.035,365,2.352,370,4.77,379,2.116,381,1.098,405,1.975,419,2.643,421,0.954,422,1.773,423,1.773,424,1.269,425,2.211,426,1.269,427,1.152,428,1.269,429,1.269,430,1.269,431,1.125,432,1.269,433,1.152,434,1.269,435,1.152,436,1.269,437,1.152,438,1.269,439,1.125,440,1.269,441,1.152,442,1.269,443,1.152,444,1.269,445,1.152,446,1.269,447,1.152,448,1.269,449,1.125,450,1.269,451,1.152,452,1.269,453,1.152,454,1.269,455,1.152,456,1.269,457,1.152,458,1.269,459,1.152,460,1.269,461,1.125,462,1.269,463,1.914,464,1.269,465,1.125,466,1.269,467,1.152,468,1.269,469,1.152,470,1.238,471,1.269,472,1.152,473,1.269,474,1.269,475,1.125,476,1.269,477,1.125,478,1.269,479,1.152,480,1.269,481,1.125,482,1.269,483,1.152,484,1.946,485,1.269,486,1.269,536,4.312,555,2.508,587,6.251,674,3.674,756,2.196,808,3.634,822,3.087,860,1.912,927,4.312,930,3.824,964,4.645,974,4.969,975,4.969,984,5.092,989,5.016,990,4.449,997,4.312,999,4.969,1018,4.312,1019,3.087,1020,2.896,1026,3.087,1027,3.087,1028,3.087,1029,3.824,1030,3.087,1031,3.087,1032,3.087,1033,5.379,1034,3.087,1035,3.087,1036,4.969,1037,4.662,1068,3.827,1069,3.827,1125,5.31,1126,4.312,1128,4.312,1294,5.31,1295,6.662,1296,3.087,1297,4.645,1298,4.645,1299,4.645,1300,4.046,1301,5.354,1302,3.326,1303,3.087,1304,3.326,1305,4.645,1306,4.645,1307,4.645,1308,5.354,1309,4.969,1310,4.312,1311,6.483,1312,5.354,1313,5.354,1314,3.326,1315,5.795,1316,4.645,1317,3.326,1318,3.326,1319,6.317,1320,3.326,1321,3.326,1322,4.645,1323,3.326,1324,3.326,1325,4.645,1326,6.317,1327,3.326,1328,3.326,1329,3.326,1330,3.326,1331,3.326,1332,3.326,1333,3.326,1334,4.645,1335,4.645,1336,4.645,1337,3.326,1338,3.326,1339,3.326,1340,3.326,1341,5.354,1342,3.326,1343,3.326,1344,3.326,1345,3.326,1346,3.326,1347,3.326,1348,3.326,1349,3.326,1350,3.326,1351,3.326,1352,4.969,1353,3.326,1354,3.326,1355,4.645,1356,3.326,1357,3.326,1358,3.326,1359,3.326,1360,5.795,1361,3.326,1362,3.326,1363,2.896,1364,3.326,1365,3.326,1366,3.326,1367,3.326,1368,3.326,1369,4.645,1370,3.326,1371,3.188,1372,3.326,1373,3.326,1374,4.645,1375,4.645,1507,4.645,1508,4.645,1539,5.795,1658,3.645,1668,3.645,1671,5.77,1672,5.77,1673,5.77,1674,3.645,1675,4.131,1676,4.131,1677,4.131,1678,4.131,1679,4.131,1680,4.131,1681,4.131,1682,4.131,1683,4.131,1684,4.131,1685,4.131,1686,4.131,1687,4.131,1688,4.131,1689,4.131,1690,4.131,1691,4.131,1692,4.131,1693,5.77,1694,5.77,1695,5.77,1696,5.77,1697,5.77,1698,5.77,1699,4.131,1700,5.77,1701,4.131]],["title/injectables/MatchService.html",[123,0.309,990,2.436]],["body/injectables/MatchService.html",[3,0.125,4,0.125,5,0.113,7,0.351,11,1.899,12,0.634,13,0.009,14,1.278,15,0.207,22,0.125,44,0.125,54,0.136,59,2.744,62,1.809,64,1.319,65,2.34,67,2.079,72,3.165,111,1.682,115,2.538,120,0.008,121,0.007,122,0.005,123,0.473,125,1.319,136,0.961,153,2.24,154,1.485,155,1.485,156,2.035,157,2.02,158,2.02,159,2.313,160,2.02,161,1.559,170,0.803,197,1.101,198,1.896,204,1.987,219,2.357,222,2.128,252,1.834,253,1.416,258,1.288,262,2.397,272,1.145,273,1.119,274,2.397,278,2.44,281,2.258,322,2.218,326,2.053,351,1.669,360,2.128,361,2.031,363,2.029,555,2.853,674,2.872,823,5.511,851,2.572,860,3.659,863,5.561,864,4.953,872,4.707,877,4.953,990,3.722,1029,4.465,1113,7.405,1227,5.585,1230,4.719,1240,4.185,1242,5.884,1243,6.365,1244,6.365,1702,4.588,1703,6.736,1704,6.736,1705,5.198,1706,7.473,1707,5.198,1708,6.736,1709,5.198,1710,6.736,1711,5.198,1712,7.473,1713,6.736,1714,5.198,1715,6.736,1716,5.198,1717,6.736,1718,5.198,1719,5.198,1720,5.198,1721,5.198,1722,6.017,1723,6.595,1724,7.228,1725,8.19,1726,6.595,1727,6.595,1728,5.198,1729,5.198,1730,5.198,1731,5.198]],["title/components/MatchplanComponent.html",[19,0.449,461,1.201]],["body/components/MatchplanComponent.html",[3,0.11,4,0.11,5,0.1,7,0.309,8,0.65,12,0.658,13,0.009,14,1.238,15,0.212,19,0.715,20,1.912,22,0.11,29,3.643,30,2.267,34,2.88,35,1.777,42,2.696,43,1.994,44,0.11,49,2.519,50,2.403,52,1.688,54,0.12,55,1.219,56,1.572,64,1.214,65,1.728,67,2.242,72,1.729,77,2.048,111,1.442,120,0.005,121,0.006,122,0.005,129,1.539,136,1.03,170,0.817,197,0.751,198,1.993,199,1.824,215,0.603,223,1.824,224,1.648,228,0.652,232,1.814,233,2.299,254,0.652,319,2.255,322,2.241,326,2.15,335,1.278,336,1.858,337,1.443,338,1.408,339,1.408,343,1.408,344,1.374,345,1.814,351,1.536,360,2.1,361,2.004,363,2.087,365,2.428,381,1.219,417,3.567,419,2.974,421,1.059,422,1.904,423,1.904,424,1.408,425,2.311,426,1.408,427,1.278,428,1.408,429,1.408,430,1.408,431,1.248,432,1.408,433,1.278,434,1.408,435,1.278,436,1.408,437,1.278,438,1.408,439,1.248,440,1.408,441,1.278,442,1.408,443,1.278,444,1.408,445,1.278,446,1.408,447,1.278,448,1.408,449,1.248,450,1.408,451,1.278,452,1.408,453,1.278,454,1.408,455,1.278,456,1.408,457,1.278,458,1.408,459,1.278,460,1.408,461,2.048,462,1.408,463,1.219,464,1.408,465,1.248,466,1.408,467,1.278,468,1.408,469,1.278,470,1.374,471,1.408,472,1.278,473,1.408,474,1.408,475,1.248,476,1.408,477,1.248,478,1.408,479,1.278,480,1.408,481,1.248,482,1.408,483,1.278,484,1.341,485,1.408,486,1.408,555,2.885,674,4.474,678,4.045,808,3.904,851,2.267,860,3.637,1142,3.038,1230,4.715,1242,3.214,1247,4.654,1371,4.156,1441,3.426,1480,3.426,1491,4.045,1492,4.045,1493,3.426,1494,3.426,1495,4.045,1507,4.99,1508,4.99,1534,5.47,1539,6.521,1583,3.426,1616,4.99,1732,4.045,1733,7.022,1734,6.198,1735,7.022,1736,6.198,1737,6.198,1738,7.522,1739,7.022,1740,7.022,1741,7.022,1742,7.022,1743,4.584,1744,6.198,1745,4.584,1746,6.198,1747,4.584,1748,4.584,1749,5.47,1750,4.584,1751,4.584,1752,4.584,1753,4.584,1754,4.584,1755,4.584,1756,4.584,1757,4.584,1758,4.584,1759,4.584,1760,4.584,1761,4.584,1762,4.584,1763,4.584,1764,4.584,1765,4.584,1766,4.584,1767,4.584,1768,4.584,1769,4.584,1770,4.584,1771,4.584,1772,4.584,1773,4.584,1774,4.584,1775,4.584,1776,4.584,1777,4.584,1778,4.584,1779,4.584,1780,4.584,1781,4.045,1782,4.584,1783,7.858,1784,4.584,1785,7.022,1786,8.099,1787,4.584,1788,4.584,1789,4.584,1790,4.584,1791,6.198,1792,6.197,1793,4.584,1794,4.584,1795,4.99,1796,4.584,1797,6.198,1798,5.47,1799,5.47,1800,7.522,1801,6.198,1802,6.198,1803,4.584,1804,4.584,1805,5.47]],["title/modules/MatchplanModule.html",[557,1.23,1806,3.295]],["body/modules/MatchplanModule.html",[3,0.163,4,0.163,5,0.148,13,0.009,15,0.232,22,0.163,44,0.163,50,1.758,54,0.177,120,0.007,121,0.008,122,0.007,199,1.758,421,1.563,461,2.437,557,1.888,559,2.358,560,3.237,561,4.021,562,3.348,563,3.348,564,3.237,570,4.585,571,4.062,572,3.468,573,3.468,576,3.073,577,2.99,579,3.895,580,4.263,702,5.931,1154,5.973,1806,6.911,1807,5.973,1808,5.973,1809,5.973,1810,6.275,1811,6.768,1812,5.973]],["title/modules/MatchplanRoutingModule.html",[557,1.23,1810,3.091]],["body/modules/MatchplanRoutingModule.html",[3,0.169,4,0.169,5,0.154,13,0.009,15,0.224,19,0.717,22,0.169,44,0.169,54,0.185,120,0.007,121,0.008,122,0.007,258,1.082,461,2.21,554,3.16,559,2.455,576,2.731,577,3.061,597,4.054,598,4.379,599,4.054,601,4.054,602,4.235,1810,5.69,1812,6.217,1813,7.045]],["title/modules/MaterialModule.html",[557,1.23,720,2.922]],["body/modules/MaterialModule.html",[3,0.159,4,0.159,5,0.145,13,0.009,15,0.238,18,2.313,22,0.159,44,0.159,54,0.174,120,0.007,121,0.008,122,0.007,559,2.313,564,3.174,576,2.573,577,2.956,720,5.194,787,5.344,1452,5.858,1814,6.638,1815,8.34,1816,6.638,1817,8.34,1818,6.638,1819,8.34,1820,6.638,1821,8.34,1822,6.638,1823,8.34,1824,6.638,1825,8.34,1826,6.638,1827,6.638,1828,6.638,1829,5.858,1830,8.34,1831,8.34,1832,8.34,1833,8.79,1834,8.34,1835,8.34,1836,8.34,1837,8.34,1838,8.34,1839,8.34,1840,8.34,1841,8.34,1842,6.638,1843,8.34,1844,8.34]],["title/components/NewpasswordComponent.html",[19,0.449,465,1.201]],["body/components/NewpasswordComponent.html",[3,0.129,4,0.129,5,0.117,7,0.362,8,0.721,12,0.604,13,0.009,14,0.977,15,0.226,18,1.866,19,0.772,20,2.064,22,0.129,31,4.113,32,2.262,33,2.262,44,0.129,49,2.543,50,2.425,52,1.87,54,0.14,55,1.425,56,1.742,64,1.345,65,2.23,67,1.878,72,2.59,77,2.177,89,2.581,91,2.403,92,2.817,114,2.262,115,1.819,120,0.005,121,0.007,122,0.005,136,0.969,139,1.296,170,0.726,188,1.425,197,0.649,215,0.996,228,0.762,254,0.762,258,0.823,335,1.494,336,2.059,337,1.687,338,1.646,339,1.646,343,1.646,344,1.606,345,2.01,351,1.702,355,4.029,356,4.601,357,4.417,358,3.49,360,1.359,361,1.296,363,1.702,365,1.606,378,3.55,379,2.745,380,2.745,381,1.826,382,3.756,386,3.55,399,4.128,400,3.519,402,4.128,403,4.806,404,3.55,407,3.374,419,2.522,421,1.237,422,2.11,423,2.11,424,1.646,425,2.456,426,1.646,427,1.494,428,1.646,429,1.646,430,1.646,431,1.459,432,1.646,433,1.494,434,1.646,435,1.494,436,1.646,437,1.494,438,1.646,439,1.459,440,1.646,441,1.494,442,1.646,443,1.494,444,1.646,445,1.494,446,1.646,447,1.494,448,1.646,449,1.459,450,1.646,451,1.494,452,1.646,453,1.494,454,1.646,455,1.494,456,1.646,457,1.494,458,1.646,459,1.494,460,1.646,461,1.459,462,1.646,463,1.425,464,1.646,465,2.177,466,1.646,467,1.494,468,1.646,469,1.494,470,1.606,471,1.646,472,1.494,473,1.646,474,1.646,475,1.459,476,1.646,477,1.459,478,1.646,479,1.494,480,1.646,481,1.459,482,1.646,483,1.494,484,1.568,485,1.646,486,1.646,550,3.374,554,2.403,634,4.728,758,5.53,772,4.326,853,5.797,908,4.728,912,5.53,993,6.925,1012,6.103,1024,4.313,1400,6.69,1414,4.728,1423,6.061,1845,4.728,1846,7.581,1847,6.868,1848,7.995,1849,8.601,1850,6.868,1851,5.357,1852,5.357,1853,5.357,1854,5.357,1855,5.357,1856,5.357,1857,7.581,1858,6.868,1859,5.357,1860,5.357,1861,5.357,1862,6.868,1863,5.357,1864,6.868,1865,6.868,1866,6.868,1867,6.868]],["title/modules/NewpasswordModule.html",[557,1.23,1868,3.295]],["body/modules/NewpasswordModule.html",[3,0.164,4,0.164,5,0.149,13,0.009,15,0.232,22,0.164,44,0.164,54,0.179,120,0.007,121,0.008,122,0.007,421,1.573,465,2.44,557,1.899,559,2.373,560,3.257,561,4.031,562,3.369,563,3.369,564,3.257,570,4.592,571,4.077,572,3.49,573,3.49,576,3.084,577,3.001,579,3.92,580,4.29,741,4.094,772,4.29,1868,6.871,1869,6.011,1870,6.011,1871,6.011,1872,6.284,1873,6.811,1874,5.273,1875,6.011]],["title/modules/NewpasswordRoutingModule.html",[557,1.23,1872,3.091]],["body/modules/NewpasswordRoutingModule.html",[3,0.169,4,0.169,5,0.154,13,0.009,15,0.224,19,0.717,22,0.169,44,0.169,54,0.185,120,0.007,121,0.008,122,0.007,258,1.082,465,2.21,554,3.16,559,2.455,576,2.731,577,3.061,597,4.054,598,4.379,599,4.054,601,4.054,602,4.235,1872,5.69,1875,6.217,1876,7.045]],["title/injectables/PasswordChangeGQL.html",[123,0.309,287,1.201]],["body/injectables/PasswordChangeGQL.html",[0,0.609,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.467,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.681,38,1.079,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.192,87,0.634,94,1.601,96,1.601,100,1.601,102,0.714,104,0.714,107,2.146,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.612,124,0.714,125,0.634,126,0.697,127,2.558,128,0.551,129,0.49,130,2.56,131,2.711,132,0.768,133,2.273,134,0.768,135,2.043,136,0.286,138,2.662,139,0.605,140,1.601,141,1.218,142,0.731,143,1.188,144,1.188,145,1.188,146,0.681,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.218,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.903,160,1.188,161,1.68,162,0.768,163,2.067,164,1.601,165,0.768,166,0.768,167,1.407,168,0.768,169,1.188,170,0.812,171,1.188,172,1.188,173,1.513,174,1.68,175,1.188,176,1.77,177,0.768,178,1.68,179,2.159,180,2.159,181,1.903,182,1.16,183,1.68,184,1.188,185,1.218,186,1.218,187,1.68,188,1.49,189,1.903,190,1.68,191,1.721,192,1.188,193,0.768,194,1.68,195,1.949,196,1.16,197,0.882,198,1.005,199,0.649,200,2.041,201,0.749,202,1.105,203,1.441,204,1.054,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.16,211,1.903,212,0.749,213,1.983,214,0.749,215,0.929,216,1.476,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.846,223,1.689,224,1.625,225,1.188,226,1.188,227,1.188,228,1.101,229,1.16,230,1.68,231,1.188,232,0.731,233,1.16,234,1.16,235,1.407,236,1.188,237,1.188,238,1.441,239,1.441,240,0.768,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.564,255,1.105,256,0.714,257,0.768,258,1.189,259,1.441,260,1.813,261,1.441,262,1.407,263,1.441,264,1.16,265,1.16,266,1.16,267,1.16,268,1.441,269,1.441,270,1.16,271,0.731,272,1.915,273,1.87,274,0.714,275,2.482,276,2.498,277,1.513,278,0.714,279,0.768,280,0.768,281,0.714,282,0.768,283,0.768,284,0.665,285,0.768,286,0.768,287,1.079,288,1.218,289,1.218,290,0.714,291,0.768,292,0.768,293,0.714,294,0.768,295,0.768,296,0.714,297,0.768,298,0.714,299,0.768,300,0.768,301,0.714,302,0.768,303,0.768,304,0.714,305,0.697,306,0.768,307,0.768,308,0.714,309,0.768,310,0.768,311,0.714,312,0.731,313,2.378,314,0.768,315,0.768,316,0.681,317,0.768,318,0.768,319,0.681,320,0.768,321,0.768,322,0.649,323,0.768,324,1.218,325,0.714,326,0.649,327,0.768,328,0.681,329,0.714,330,0.768,331,0.768,332,0.665,333,0.714,334,0.731,1877,2.499]],["title/injectables/PasswordResetGQL.html",[123,0.309,284,1.172]],["body/injectables/PasswordResetGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.09,164,1.945,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,1.053,285,1.216,286,1.216,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1878,2.496]],["title/injectables/PitchService.html",[123,0.309,989,2.65]],["body/injectables/PitchService.html",[3,0.164,4,0.164,5,0.149,7,0.462,8,0.838,12,0.604,13,0.009,15,0.228,22,0.164,34,3.465,35,2.655,41,2.583,42,2.979,43,2.979,44,0.164,54,0.18,64,1.563,65,1.91,120,0.007,121,0.008,122,0.007,123,0.56,125,1.737,128,1.509,129,1.341,136,0.914,170,0.656,203,2.472,222,1.737,272,1.509,273,1.474,325,2.486,360,1.737,361,1.658,989,4.798,1879,6.044,1880,6.849,1881,6.849,1882,7.983,1883,7.983,1884,7.045,1885,7.983,1886,6.849]],["title/components/PitchesComponent.html",[19,0.449,467,1.23]],["body/components/PitchesComponent.html",[3,0.142,4,0.142,5,0.129,7,0.398,8,0.766,12,0.552,13,0.009,15,0.191,19,0.807,20,2.157,22,0.142,44,0.142,49,2.555,50,2.437,52,1.987,54,0.155,55,1.568,56,1.851,64,1.429,67,1.963,77,2.254,89,2.558,120,0.006,121,0.007,122,0.006,136,0.907,170,0.759,197,0.714,202,2.035,215,0.775,228,0.839,254,0.839,335,1.644,336,2.187,337,1.857,338,1.812,339,1.812,343,1.812,344,1.768,345,2.135,351,1.808,360,1.496,361,1.427,363,1.461,381,1.568,419,3.182,421,1.362,422,2.241,423,2.241,424,1.812,425,2.543,426,1.812,427,1.644,428,1.812,429,1.812,430,1.812,431,1.606,432,1.812,433,1.644,434,1.812,435,1.644,436,1.812,437,1.644,438,1.812,439,1.606,440,1.812,441,1.644,442,1.812,443,1.644,444,1.812,445,1.644,446,1.812,447,1.644,448,1.812,449,1.606,450,1.812,451,1.644,452,1.812,453,1.644,454,1.812,455,1.644,456,1.812,457,1.644,458,1.812,459,1.644,460,1.812,461,1.606,462,1.812,463,1.568,464,1.812,465,1.606,466,1.812,467,2.309,468,1.812,469,1.644,470,1.768,471,1.812,472,1.644,473,1.812,474,1.812,475,1.606,476,1.812,477,1.606,478,1.812,479,1.644,480,1.812,481,1.606,482,1.812,483,1.644,484,1.725,485,1.812,486,1.812,937,5.874,989,5.378,1020,4.135,1037,5.804,1074,5.874,1674,5.204,1887,5.204,1888,7.922,1889,7.296,1890,5.896,1891,5.896,1892,5.896,1893,7.296,1894,7.296]],["title/injectables/PitchesGQL.html",[123,0.309,325,1.259]],["body/injectables/PitchesGQL.html",[0,0.608,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.466,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.877,37,0.68,38,1.079,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.191,87,0.634,94,1.6,96,1.6,100,1.6,102,0.714,104,0.714,107,2.151,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.714,125,0.634,126,0.697,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.605,140,1.6,141,1.217,142,0.731,143,1.188,144,1.188,145,1.188,146,0.68,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.217,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.902,160,1.188,161,1.68,162,0.767,163,2.067,164,1.6,165,0.767,166,0.767,167,1.132,168,0.767,169,1.188,170,0.811,171,1.188,172,1.188,173,1.512,174,1.68,175,1.188,176,1.769,177,0.767,178,1.68,179,2.159,180,2.159,181,1.902,182,1.159,183,1.68,184,1.188,185,1.217,186,1.217,187,1.68,188,1.49,189,1.902,190,1.68,191,1.72,192,1.188,193,0.767,194,1.68,195,1.949,196,1.159,197,0.882,198,1.005,199,0.649,200,2.04,201,0.749,202,1.373,203,1.639,204,1.053,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.159,211,1.902,212,0.749,213,1.983,214,0.749,215,0.929,216,1.476,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.891,223,1.688,224,1.624,225,1.188,226,1.188,227,1.188,228,1.101,229,1.159,230,1.68,231,1.188,232,0.731,233,1.159,234,1.159,235,1.406,236,1.188,237,1.188,238,1.44,239,1.44,240,0.767,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.563,255,1.105,256,0.714,257,0.767,258,1.189,259,1.44,260,1.813,261,1.639,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.714,275,2.482,276,2.497,277,1.512,278,0.714,279,0.767,280,0.767,281,0.714,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.714,291,0.767,292,0.767,293,0.714,294,0.767,295,0.767,296,0.714,297,0.767,298,0.714,299,0.767,300,0.767,301,0.714,302,0.767,303,0.767,304,0.714,305,0.697,306,0.767,307,0.767,308,0.714,309,0.767,310,0.767,311,0.714,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.649,323,0.767,324,1.217,325,1.132,326,0.649,327,0.767,328,0.68,329,0.714,330,0.767,331,0.767,332,0.664,333,0.714,334,0.731,1895,2.498]],["title/injectables/RankingGQL.html",[123,0.309,326,1.145]],["body/injectables/RankingGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.15,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.079,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.44,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.512,325,0.713,326,1.028,327,1.216,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1896,2.496]],["title/injectables/RedisEventGQL.html",[123,0.309,1226,2.922]],["body/injectables/RedisEventGQL.html",[0,0.973,3,0.152,4,0.152,5,0.138,7,0.428,8,0.8,12,0.684,13,0.009,14,1.207,15,0.214,22,0.152,28,4.051,44,0.217,54,0.166,87,1.607,110,1.569,111,1.679,120,0.008,121,0.008,122,0.006,123,0.535,125,1.607,127,2.392,128,1.68,129,1.241,130,2.335,136,0.726,138,2.423,139,1.533,150,1.854,151,1.854,156,2.076,170,0.73,251,1.854,252,2.364,253,2.226,254,1.084,255,1.767,256,1.81,258,0.973,271,1.854,272,1.396,273,1.363,275,1.81,334,1.854,1206,4.734,1209,6.34,1226,5.052,1261,6.11,1382,4.801,1383,4.442,1384,5.696,1386,7.24,1387,7.215,1388,5.591,1389,5.696,1390,5.1,1897,6.335]],["title/injectables/RemoveTeamFromSeasonGQL.html",[123,0.309,293,1.259]],["body/injectables/RemoveTeamFromSeasonGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.342,134,0.767,135,2.118,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,1.131,294,1.216,295,1.216,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1898,2.496]],["title/components/RenameTeamComponent.html",[19,0.449,469,1.23]],["body/components/RenameTeamComponent.html",[3,0.135,4,0.135,5,0.123,7,0.379,8,0.743,12,0.615,13,0.009,14,1.102,15,0.213,16,4.633,17,3.375,18,1.957,19,0.789,20,2.11,21,3.102,22,0.135,23,4.3,24,3.375,36,2.064,41,2.118,44,0.135,47,1.969,49,2.549,50,2.431,52,1.927,54,0.147,55,1.493,56,1.795,64,1.386,65,1.566,67,2.121,68,4.324,71,4.254,77,2.215,89,2.502,91,2.519,92,2.303,114,2.371,115,1.907,120,0.006,121,0.007,122,0.006,136,0.96,170,0.779,182,2.071,197,0.68,215,0.738,228,0.799,254,0.799,260,1.566,305,1.566,335,1.566,336,2.122,337,1.768,338,1.725,339,1.725,343,1.725,344,1.684,345,2.071,351,1.753,360,1.795,361,1.713,363,1.753,365,1.684,381,1.493,405,2.686,417,4.073,419,2.987,421,1.297,422,2.174,423,2.174,424,1.725,425,2.499,426,1.725,427,1.566,428,1.725,429,1.725,430,1.725,431,1.529,432,1.725,433,1.566,434,1.725,435,1.566,436,1.725,437,1.566,438,1.725,439,1.529,440,1.725,441,1.566,442,1.725,443,1.566,444,1.725,445,1.566,446,1.725,447,1.566,448,1.725,449,1.529,450,1.725,451,1.566,452,1.725,453,1.566,454,1.725,455,1.566,456,1.725,457,1.566,458,1.725,459,1.566,460,1.725,461,1.529,462,1.725,463,1.493,464,1.725,465,1.529,466,1.725,467,1.566,468,1.725,469,2.269,470,2.636,471,1.725,472,1.566,473,1.725,474,1.725,475,1.529,476,1.725,477,1.529,478,1.725,479,1.566,480,1.725,481,1.529,482,1.725,483,1.566,484,1.643,485,1.725,486,1.725,503,6.399,523,3.537,909,4.521,916,4.956,921,6.245,964,5.698,1899,7.556,1900,4.956,1901,7.749,1902,7.077,1903,5.616,1904,5.616,1905,7.077,1906,5.616,1907,6.245,1908,5.616,1909,5.616,1910,5.616]],["title/injectables/RenameTeamGQL.html",[123,0.309,305,1.23]],["body/injectables/RenameTeamGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.299,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,2.042,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,1.104,306,1.216,307,1.216,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1911,2.496]],["title/interfaces/RoundTeam.html",[0,0.677,45,3.091]],["body/interfaces/RoundTeam.html",[0,1.134,1,5.179,2,2.976,3,0.144,4,0.144,5,0.131,6,4.496,7,0.406,8,0.775,9,2.011,10,4.496,11,1.295,12,0.558,13,0.009,14,0.856,15,0.235,16,4.081,17,3.616,18,2.096,19,0.752,20,2.011,21,3.324,22,0.144,23,3.954,24,3.616,25,5.974,26,3.616,27,3.616,28,3.198,29,3.375,30,2.976,31,3.823,32,2.54,33,2.54,34,3.029,35,2.332,36,1.389,37,2.011,38,2.011,39,1.918,40,1.918,41,2.269,42,2.617,43,2.617,44,0.177,45,5.605,46,2.429,47,2.156,48,2.429,49,1.638,50,1.562,51,4.844,52,1.638,53,4.844,54,0.158,55,1.6,56,1.526,57,1.638,58,4.844,59,2.209,60,3.324,61,4.844,62,1.788,63,4.844,64,1.178,65,2.386,66,4.496,67,1.98,68,3.198,69,4.844,70,4.218,71,3.616,72,2.269,73,4.496,74,4.496,75,3.987,76,4.496,77,1.638,78,4.844,79,4.496,80,6.436,81,6.436,82,4.844,83,5.179,84,4.844,85,4.844,86,4.844,87,1.526,88,4.844,89,1.942,90,4.844,91,2.698,92,2.467,93,4.844,94,1.718,95,5.947,96,1.718,97,5.947,98,5.947,99,4.844,100,1.718,101,4.844,102,1.718,103,4.844,104,1.718,105,4.844,106,3.616,107,1.788,108,4.496,109,4.844,110,1.491,111,1.235,112,3.324,113,3.987,114,2.54,115,2.043,116,4.496,117,4.844,118,4.44,119,4.844,120,0.006,121,0.007,122,0.006]],["title/injectables/ScheduleMatchGQL.html",[123,0.309,278,1.259]],["body/injectables/ScheduleMatchGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.182,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,2.129,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,1.131,279,1.216,280,1.216,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,1912,2.496]],["title/injectables/SeasonService.html",[123,0.309,1230,2.436]],["body/injectables/SeasonService.html",[3,0.148,4,0.148,5,0.134,7,0.415,8,0.786,12,0.635,13,0.009,14,1.148,15,0.22,22,0.148,35,2.384,44,0.148,54,0.161,59,2.964,64,1.466,65,2.342,67,2,89,2.606,106,3.696,107,1.488,111,1.263,115,2.088,120,0.006,121,0.007,122,0.006,123,0.525,125,1.56,128,1.355,129,1.204,136,1.003,169,2.244,170,0.824,200,2.236,207,1.757,272,1.355,273,1.324,290,2.532,328,2.384,351,1.855,360,2.131,361,2.033,363,2,365,1.844,383,5.595,384,4.596,555,2.812,808,4.715,823,5.084,851,3.042,860,2.846,863,4.962,864,4.075,872,3.873,877,4.075,1230,4.136,1247,4.075,1448,6.607,1913,5.427,1914,8.071,1915,7.486,1916,8.071,1917,6.149,1918,7.486,1919,7.486,1920,6.149,1921,7.486,1922,8.399,1923,6.149,1924,7.486,1925,8.071,1926,7.486,1927,6.149,1928,6.149,1929,6.149,1930,6.149,1931,6.607,1932,6.149,1933,6.149,1934,6.149,1935,6.149,1936,6.149,1937,6.149,1938,6.149,1939,6.149,1940,6.149,1941,6.149]],["title/components/SeasonchooserComponent.html",[19,0.449,472,1.23]],["body/components/SeasonchooserComponent.html",[3,0.133,4,0.133,5,0.121,7,0.375,8,0.738,12,0.646,13,0.009,15,0.224,18,1.936,19,0.785,20,2.1,22,0.133,34,3.163,35,2.154,41,2.096,42,3.058,43,2.417,44,0.133,49,2.548,50,2.43,52,1.915,54,0.146,55,1.478,56,1.783,59,2.041,64,1.377,65,1.55,67,1.911,72,2.096,77,2.207,120,0.006,121,0.007,122,0.006,128,1.225,129,1.089,136,1.005,142,1.626,170,0.776,191,1.314,197,0.673,200,2.171,207,1.588,215,0.731,228,0.79,254,0.79,328,2.362,335,1.55,336,2.108,337,1.75,338,1.707,339,1.707,343,1.707,344,1.666,345,2.057,351,1.742,360,1.783,361,1.701,363,1.742,365,2.108,367,6.525,381,1.478,421,1.283,422,2.16,423,2.16,424,1.707,425,2.49,426,1.707,427,1.55,428,1.707,429,1.707,430,1.707,431,1.513,432,1.707,433,1.55,434,1.707,435,1.55,436,1.707,437,1.55,438,1.707,439,1.513,440,1.707,441,1.55,442,1.707,443,1.55,444,1.707,445,1.55,446,1.707,447,1.55,448,1.707,449,1.513,450,1.707,451,1.55,452,1.707,453,1.55,454,1.707,455,1.55,456,1.707,457,1.55,458,1.707,459,1.55,460,1.707,461,1.513,462,1.707,463,1.478,464,1.707,465,1.513,466,1.707,467,1.55,468,1.707,469,1.55,470,1.666,471,1.707,472,2.26,473,1.707,474,1.707,475,1.513,476,1.707,477,1.513,478,1.707,479,1.55,480,1.707,481,1.513,482,1.707,483,1.55,484,1.626,485,1.707,486,1.707,927,5.254,930,4.66,1230,4.893,1433,6.806,1441,4.153,1480,4.153,1482,4.905,1483,4.905,1530,6.205,1615,6.205,1621,7.152,1635,6.205,1931,6.205,1942,4.905,1943,7.031,1944,7.712,1945,7.031,1946,7.031,1947,7.712,1948,7.712,1949,7.031,1950,7.031,1951,5.558,1952,7.031,1953,5.558,1954,5.558,1955,5.558,1956,5.558,1957,5.558,1958,5.558,1959,5.558,1960,5.558,1961,5.558,1962,5.558,1963,5.558,1964,5.558]],["title/modules/SharedModule.html",[557,1.23,570,2.259]],["body/modules/SharedModule.html",[3,0.145,4,0.145,5,0.132,13,0.009,15,0.241,22,0.145,26,3.629,27,3.629,28,3.209,32,2.549,33,2.549,44,0.145,54,0.158,120,0.006,121,0.007,122,0.006,123,0.424,379,3.093,381,2.371,421,1.394,437,2.486,441,2.544,443,2.486,445,2.486,447,2.486,459,2.544,472,2.544,557,1.684,559,2.103,560,2.887,561,3.829,562,2.986,563,2.986,564,3.829,570,4.794,571,3.793,572,3.093,573,3.093,575,5.96,576,2.87,577,2.792,708,6.446,720,6.045,733,5.328,738,7.065,739,7.065,741,3.629,745,5.328,923,4.861,1874,5.306,1965,5.328,1966,5.328,1967,6.037,1968,5.328,1969,6.037,1970,6.037,1971,6.037,1972,6.037,1973,6.037,1974,6.037,1975,6.037,1976,8.006,1977,8.006,1978,6.037,1979,6.037]],["title/components/SnackbarComponent.html",[19,0.449,381,1.172]],["body/components/SnackbarComponent.html",[0,0.921,3,0.144,4,0.144,5,0.131,7,0.405,8,0.774,12,0.558,13,0.009,14,0.853,15,0.193,18,2.09,19,0.813,20,2.174,21,3.314,22,0.144,44,0.177,49,2.557,50,2.439,52,2.008,54,0.157,55,1.595,56,1.87,64,1.444,67,1.978,72,3.141,77,2.268,120,0.006,121,0.007,122,0.006,136,0.914,170,0.764,197,0.727,215,0.789,228,0.853,254,0.853,335,1.673,336,2.211,337,1.889,338,1.843,339,1.843,343,1.843,344,1.799,345,2.158,351,1.827,355,3.92,360,1.522,361,1.452,363,1.486,365,1.799,381,2.215,400,3.074,421,1.385,422,2.265,423,2.265,424,1.843,425,2.559,426,1.843,427,1.673,428,1.843,429,1.843,430,1.843,431,1.634,432,1.843,433,1.673,434,1.843,435,1.673,436,1.843,437,1.673,438,1.843,439,1.634,440,1.843,441,1.673,442,1.843,443,1.673,444,1.843,445,1.673,446,1.843,447,1.673,448,1.843,449,1.634,450,1.843,451,1.673,452,1.843,453,1.673,454,1.843,455,1.673,456,1.843,457,1.673,458,1.843,459,1.673,460,1.843,461,1.634,462,1.843,463,1.595,464,1.843,465,1.634,466,1.843,467,1.673,468,1.843,469,1.673,470,1.799,471,1.843,472,1.673,473,1.843,474,1.843,475,1.634,476,1.843,477,1.634,478,1.843,479,1.673,480,1.843,481,1.634,482,1.843,483,1.673,484,1.755,485,1.843,486,1.843,523,3.779,1376,6.389,1377,4.83,1378,5.294,1379,6.508,1380,7.046,1381,6.508,1980,5.999,1981,5.999,1982,5.999,1983,5.999,1984,7.374]],["title/injectables/StartSeasonGQL.html",[123,0.309,298,1.259]],["body/injectables/StartSeasonGQL.html",[0,0.609,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.467,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.681,38,1.079,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.192,87,0.634,94,1.601,96,1.601,100,1.601,102,0.714,104,0.714,107,2.146,110,2.153,111,1.848,120,0.002,121,0.004,122,0.002,123,0.612,124,0.714,125,0.634,126,0.697,127,2.558,128,0.551,129,0.49,130,2.56,131,2.711,132,0.768,133,2.273,134,0.768,135,2.043,136,0.286,138,2.662,139,0.605,140,1.601,141,1.218,142,0.731,143,1.188,144,1.188,145,1.188,146,0.681,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.218,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.903,160,1.188,161,1.68,162,0.768,163,2.067,164,1.601,165,0.768,166,0.768,167,1.132,168,0.768,169,1.188,170,0.812,171,1.188,172,1.188,173,1.513,174,1.68,175,1.188,176,1.77,177,0.768,178,1.68,179,2.159,180,2.159,181,1.903,182,1.16,183,1.68,184,1.188,185,1.218,186,1.218,187,1.68,188,1.49,189,1.903,190,1.68,191,1.721,192,1.188,193,0.768,194,1.68,195,1.949,196,1.16,197,0.882,198,1.005,199,0.649,200,2.041,201,0.749,202,1.105,203,1.441,204,1.054,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.16,211,1.903,212,0.749,213,1.983,214,0.749,215,0.929,216,1.476,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.846,223,1.689,224,1.625,225,1.188,226,1.188,227,1.188,228,1.101,229,1.16,230,1.68,231,1.188,232,0.731,233,1.16,234,1.16,235,1.407,236,1.188,237,1.188,238,1.441,239,1.441,240,0.768,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.564,255,1.105,256,0.714,257,0.768,258,1.189,259,1.441,260,1.813,261,1.441,262,1.407,263,1.441,264,1.16,265,1.16,266,1.16,267,1.16,268,1.441,269,1.441,270,1.16,271,0.731,272,1.915,273,1.87,274,0.714,275,2.482,276,2.498,277,1.513,278,0.714,279,0.768,280,0.768,281,0.714,282,0.768,283,0.768,284,0.665,285,0.768,286,0.768,287,0.681,288,0.768,289,0.768,290,0.714,291,0.768,292,0.768,293,0.714,294,0.768,295,0.768,296,0.714,297,0.768,298,1.132,299,1.218,300,1.218,301,0.714,302,0.768,303,0.768,304,0.714,305,0.697,306,0.768,307,0.768,308,0.714,309,0.768,310,0.768,311,0.714,312,0.731,313,2.378,314,0.768,315,0.768,316,0.681,317,0.768,318,0.768,319,0.681,320,0.768,321,0.768,322,0.649,323,0.768,324,1.218,325,0.714,326,0.649,327,0.768,328,0.681,329,0.714,330,0.768,331,0.768,332,0.665,333,0.714,334,0.731,1985,2.499]],["title/injectables/SubmitResultGQL.html",[123,0.309,274,1.259]],["body/injectables/SubmitResultGQL.html",[0,0.607,3,0.06,4,0.06,5,0.054,7,0.168,8,0.415,9,1.523,11,1.465,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.876,37,0.678,38,1.076,39,0.647,40,0.647,44,0.226,46,0.695,47,1.647,48,0.695,54,0.228,57,1.661,62,1.189,87,0.632,94,1.598,96,1.598,100,1.598,102,0.711,104,0.711,107,2.146,110,2.152,111,1.845,120,0.002,121,0.004,122,0.002,123,0.611,124,0.711,125,0.632,126,0.695,127,2.557,128,0.549,129,0.488,130,2.559,131,2.711,132,0.765,133,2.272,134,0.765,135,2.04,136,0.285,138,2.662,139,0.603,140,1.598,141,1.214,142,0.729,143,1.185,144,1.185,145,1.185,146,0.678,147,1.102,148,0.747,149,0.747,150,0.729,151,2.614,152,1.51,153,2.279,154,2.077,155,2.077,156,2.444,157,1.473,158,1.185,159,1.9,160,1.185,161,1.677,162,0.765,163,2.065,164,1.598,165,0.765,166,0.765,167,1.129,168,0.765,169,1.185,170,0.811,171,1.185,172,1.185,173,1.51,174,1.677,175,1.185,176,1.767,177,0.765,178,1.677,179,2.157,180,2.157,181,1.9,182,1.157,183,1.677,184,1.185,185,1.214,186,1.214,187,1.677,188,1.487,189,1.9,190,1.677,191,1.719,192,1.185,193,0.765,194,1.677,195,1.946,196,1.157,197,0.881,198,1.003,199,0.647,200,2.039,201,0.747,202,1.102,203,1.438,204,1.051,205,2.016,206,0.747,207,1.129,208,1.854,209,0.747,210,1.157,211,1.9,212,0.747,213,1.981,214,0.747,215,0.928,216,1.473,217,1.185,218,1.785,219,2.329,220,1.185,221,1.185,222,1.844,223,1.686,224,1.622,225,1.185,226,1.185,227,1.185,228,1.1,229,1.157,230,1.677,231,1.185,232,0.729,233,1.157,234,1.157,235,1.404,236,1.185,237,1.185,238,1.438,239,1.438,240,0.765,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.677,248,0.747,249,1.185,250,0.747,251,0.729,252,1.661,253,1.338,254,0.562,255,1.102,256,0.711,257,0.765,258,1.188,259,1.438,260,1.811,261,1.438,262,1.404,263,1.438,264,1.157,265,1.157,266,1.157,267,1.157,268,1.438,269,1.438,270,1.157,271,0.729,272,1.914,273,1.869,274,1.129,275,2.481,276,2.496,277,1.874,278,0.711,279,0.765,280,0.765,281,0.711,282,0.765,283,0.765,284,0.662,285,0.765,286,0.765,287,0.678,288,0.765,289,0.765,290,0.711,291,0.765,292,0.765,293,0.711,294,0.765,295,0.765,296,0.711,297,0.765,298,0.711,299,0.765,300,0.765,301,0.711,302,0.765,303,0.765,304,0.711,305,0.695,306,0.765,307,0.765,308,0.711,309,0.765,310,0.765,311,0.711,312,0.729,313,2.376,314,0.765,315,0.765,316,0.678,317,0.765,318,0.765,319,0.678,320,0.765,321,0.765,322,0.647,323,0.765,324,1.214,325,0.711,326,0.647,327,0.765,328,0.678,329,0.711,330,0.765,331,0.765,332,0.662,333,0.711,334,0.729,1986,2.491]],["title/components/TableComponent.html",[19,0.449,475,1.201]],["body/components/TableComponent.html",[3,0.121,4,0.121,5,0.11,7,0.341,8,0.693,11,1.586,12,0.641,13,0.009,15,0.228,18,1.758,19,0.75,20,2.006,22,0.121,29,3.707,30,2.496,31,4.056,32,2.13,33,2.13,34,3.021,35,1.956,41,1.903,42,2.874,43,2.195,44,0.121,49,2.534,50,2.417,52,1.799,54,0.132,55,1.342,56,1.676,64,1.294,65,1.843,67,2.156,72,1.903,77,2.128,111,1.357,115,2.501,120,0.007,121,0.007,122,0.005,136,1.005,139,1.221,170,0.748,197,0.611,205,2.233,215,0.663,228,0.718,254,0.718,326,2.03,335,1.407,336,1.981,337,1.589,338,1.55,339,1.55,343,1.55,344,1.513,345,1.933,351,1.637,355,4.312,356,4.669,360,1.676,361,1.599,363,1.936,365,2.343,381,1.757,399,3.033,400,2.585,402,3.033,403,3.971,407,3.178,419,2.426,421,1.165,422,2.03,423,2.03,424,1.55,425,2.401,426,1.55,427,1.407,428,1.55,429,1.55,430,1.55,431,1.374,432,1.55,433,1.407,434,1.55,435,1.407,436,1.55,437,1.407,438,1.55,439,1.374,440,1.55,441,1.407,442,1.55,443,1.407,444,1.55,445,1.407,446,1.55,447,1.407,448,1.55,449,1.374,450,1.55,451,1.407,452,1.55,453,1.407,454,1.55,455,1.407,456,1.55,457,1.407,458,1.55,459,1.407,460,1.55,461,1.374,462,1.55,463,1.342,464,1.55,465,1.374,466,1.55,467,1.407,468,1.55,469,1.407,470,1.513,471,1.55,472,1.407,473,1.55,474,1.55,475,2.128,476,1.55,477,1.374,478,1.55,479,1.407,480,1.55,481,1.374,482,1.55,483,1.407,484,1.477,485,1.55,486,1.55,555,2.302,756,2.682,758,4.063,767,4.938,822,3.771,860,3.058,883,3.178,1227,5.505,1230,4.807,1418,5.831,1441,3.771,1480,3.771,1583,3.771,1781,4.453,1792,5.831,1795,4.063,1987,4.453,1988,7.366,1989,6.607,1990,7.816,1991,8.323,1992,6.607,1993,6.607,1994,5.046,1995,5.046,1996,5.046,1997,6.607,1998,5.046,1999,5.046,2000,5.046,2001,5.046,2002,5.046,2003,5.046,2004,5.046,2005,5.046,2006,5.046,2007,6.607,2008,5.046,2009,5.046,2010,6.607,2011,5.046,2012,5.046,2013,5.046,2014,5.046,2015,6.607,2016,6.607,2017,6.607,2018,6.607,2019,6.607,2020,6.607,2021,6.607,2022,6.607,2023,6.607,2024,6.607,2025,6.607,2026,6.607,2027,7.816,2028,7.816,2029,6.607,2030,6.607,2031,6.607,2032,5.046,2033,5.046]],["title/modules/TableModule.html",[557,1.23,2034,3.295]],["body/modules/TableModule.html",[3,0.164,4,0.164,5,0.149,13,0.009,15,0.232,22,0.164,44,0.164,54,0.179,120,0.007,121,0.008,122,0.007,421,1.573,475,2.44,557,1.899,559,2.373,560,3.257,561,4.031,562,3.369,563,3.369,564,3.257,570,4.592,571,4.077,572,3.49,573,3.49,576,3.084,577,3.001,579,3.92,580,4.29,741,4.094,767,5.09,1874,5.273,2034,6.871,2035,6.011,2036,6.011,2037,6.011,2038,6.284,2039,6.811,2040,6.011]],["title/modules/TableRoutingModule.html",[557,1.23,2038,3.091]],["body/modules/TableRoutingModule.html",[3,0.169,4,0.169,5,0.154,13,0.009,15,0.224,19,0.717,22,0.169,44,0.169,54,0.185,120,0.007,121,0.008,122,0.007,258,1.082,475,2.21,554,3.16,559,2.455,576,2.731,577,3.061,597,4.054,598,4.379,599,4.054,601,4.054,602,4.235,2038,5.69,2040,6.217,2041,7.045]],["title/interfaces/TeamIdPair.html",[0,0.677,38,1.201]],["body/interfaces/TeamIdPair.html",[0,0.609,2,1.236,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.467,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.877,37,0.681,38,1.341,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.192,87,0.634,94,1.601,96,1.601,100,1.601,102,1.601,104,1.601,107,2.146,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.612,124,0.714,126,0.697,127,2.542,130,2.556,131,2.708,132,0.768,133,2.273,134,0.768,135,2.043,138,2.665,139,0.605,140,1.601,141,1.218,142,0.731,143,1.188,144,1.188,145,1.188,146,0.681,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.218,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.903,160,1.188,161,1.68,162,0.768,163,2.067,164,1.601,165,0.768,166,0.768,167,1.132,168,0.768,169,1.188,170,0.812,171,1.188,172,1.188,173,1.513,174,1.68,175,1.188,176,1.77,177,0.768,178,1.68,179,2.159,180,2.159,181,1.903,182,1.16,183,1.68,184,1.188,185,1.218,186,1.218,187,1.68,188,1.49,189,1.903,190,1.68,191,1.721,192,1.188,193,0.768,194,1.68,195,1.949,196,1.16,197,0.882,198,1.005,199,0.649,200,2.041,201,0.749,202,1.105,203,1.441,204,1.054,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.16,211,1.903,212,0.749,213,1.983,214,0.749,215,0.929,216,1.476,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.846,223,1.689,224,1.625,225,1.188,226,1.188,227,1.188,228,1.101,229,1.16,230,1.68,231,1.188,232,0.731,233,1.16,234,1.16,235,1.407,236,1.188,237,1.188,238,1.441,239,1.441,240,0.768,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.564,255,1.105,256,0.714,257,0.768,258,1.189,259,1.441,260,1.813,261,1.441,262,1.407,263,1.441,264,1.16,265,1.16,266,1.16,267,1.16,268,1.441,269,1.441,270,1.16,271,0.731,272,1.915,273,1.87,274,0.714,275,2.482,276,2.498,277,1.513,278,0.714,279,0.768,280,0.768,281,0.714,282,0.768,283,0.768,284,0.665,285,0.768,286,0.768,287,0.681,288,0.768,289,0.768,290,0.714,291,0.768,292,0.768,293,0.714,294,0.768,295,0.768,296,0.714,297,0.768,298,0.714,299,0.768,300,0.768,301,0.714,302,0.768,303,0.768,304,0.714,305,0.697,306,0.768,307,0.768,308,0.714,309,0.768,310,0.768,311,0.714,312,0.731,313,2.378,314,0.768,315,0.768,316,0.681,317,0.768,318,0.768,319,0.681,320,0.768,321,0.768,322,0.649,323,0.768,324,1.218,325,0.714,326,0.649,327,0.768,328,0.681,329,0.714,330,0.768,331,0.768,332,0.665,333,0.714,334,0.731,361,1.356]],["title/injectables/TeamService.html",[23,2.181,123,0.309]],["body/injectables/TeamService.html",[3,0.138,4,0.138,5,0.126,7,0.389,8,0.755,12,0.621,13,0.009,14,1.276,15,0.222,22,0.138,23,4.063,34,3.216,35,2.235,36,2.041,42,2.508,43,2.508,44,0.173,54,0.189,57,2.136,59,2.88,64,1.409,65,2.187,72,2.714,89,2.822,91,2.586,92,2.365,106,3.466,107,1.395,111,1.611,112,3.186,114,2.434,115,2.443,120,0.007,121,0.007,122,0.006,123,0.505,125,1.463,128,1.271,129,1.129,133,1.647,136,0.941,156,1.57,170,0.809,176,1.869,182,2.105,183,1.729,219,1.959,258,0.885,260,2.187,272,1.271,273,1.241,301,2.346,305,2.438,329,2.497,351,1.783,360,1.989,361,1.898,363,1.943,383,5.377,384,4.309,405,2.758,491,6.35,495,6.35,497,7.459,555,2.009,823,5.173,826,4.769,851,2.852,863,4.769,864,3.822,872,3.632,877,3.822,1142,4.769,1371,4.537,1493,5.377,1494,5.377,1722,4.642,1723,5.089,1724,6.35,1726,5.089,1727,5.089,1884,6.35,1907,7.459,2042,5.089,2043,5.766,2044,7.195,2045,7.195,2046,7.195,2047,7.195,2048,5.766,2049,5.766,2050,5.766,2051,7.195,2052,5.766,2053,7.195,2054,6.35,2055,7.195,2056,7.195,2057,5.766,2058,7.195,2059,7.195,2060,5.766,2061,5.766,2062,5.766,2063,5.766,2064,5.766,2065,5.766,2066,5.766,2067,5.766,2068,7.195]],["title/components/TeamadminComponent.html",[19,0.449,477,1.201]],["body/components/TeamadminComponent.html",[3,0.123,4,0.123,5,0.112,7,0.347,8,0.702,12,0.644,13,0.009,14,1.298,15,0.226,18,1.791,19,0.757,20,2.024,22,0.123,23,4.357,24,3.089,31,4.212,32,2.17,33,2.17,41,1.939,44,0.123,49,2.537,50,2.419,52,1.821,54,0.135,55,1.367,56,1.696,59,2.455,64,1.31,65,2.073,67,2.163,72,2.522,77,2.143,89,2.399,91,2.305,92,2.108,106,3.089,107,1.244,112,2.839,114,2.17,115,1.745,120,0.005,121,0.007,122,0.005,128,1.473,129,1.31,133,1.468,136,1,163,2.119,170,0.781,178,2.228,179,1.433,180,1.433,181,2.388,197,0.623,215,1.035,228,0.731,254,0.731,304,2.248,332,2.093,335,1.433,336,2.005,337,1.618,338,1.579,339,1.579,343,1.579,344,1.541,345,1.957,348,6.946,349,6.946,351,1.657,355,4.338,356,4.696,357,3.694,358,3.323,360,1.885,361,1.799,363,1.841,365,1.541,370,5.14,378,3.406,379,2.633,380,2.633,381,1.778,382,3.604,386,4.432,387,5.901,399,4.019,400,3.426,402,4.019,403,4.731,404,3.406,405,2.458,407,3.237,419,2.455,421,1.187,422,2.054,423,2.054,424,1.579,425,2.418,426,1.579,427,1.433,428,1.579,429,1.579,430,1.579,431,1.4,432,1.579,433,1.433,434,1.579,435,1.433,436,1.579,437,1.433,438,1.579,439,1.4,440,1.579,441,1.433,442,1.579,443,1.433,444,1.579,445,1.433,446,1.579,447,1.433,448,1.579,449,1.4,450,1.579,451,1.433,452,1.579,453,1.433,454,1.579,455,1.433,456,1.579,457,1.433,458,1.579,459,1.433,460,1.579,461,1.4,462,1.579,463,1.367,464,1.579,465,1.4,466,1.579,467,1.433,468,1.579,469,1.433,470,1.541,471,1.579,472,1.433,473,1.579,474,1.579,475,1.4,476,1.579,477,2.143,478,1.579,479,1.433,480,1.579,481,1.4,482,1.579,483,1.433,484,1.504,485,1.579,486,1.579,550,3.237,555,1.791,756,2.732,777,5.384,815,5.554,826,4.432,1085,4.997,2069,4.536,2070,7.432,2071,6.686,2072,7.432,2073,6.686,2074,6.686,2075,6.686,2076,6.686,2077,5.139,2078,6.686,2079,5.139,2080,6.686,2081,5.139,2082,5.139,2083,5.139,2084,5.139,2085,5.139,2086,6.686,2087,5.139,2088,5.139,2089,5.139,2090,5.139,2091,5.139,2092,6.686]],["title/guards/TeamadminGuard.html",[544,3.55,761,3.295]],["body/guards/TeamadminGuard.html",[3,0.161,4,0.161,5,0.146,7,0.451,12,0.595,13,0.009,15,0.226,22,0.161,34,3.431,35,2.593,44,0.161,54,0.175,56,1.697,64,1.31,120,0.007,121,0.008,122,0.007,123,0.552,136,0.958,170,0.754,234,2.448,272,1.474,273,1.44,351,1.951,357,4.35,358,3.647,360,1.997,361,1.905,363,1.951,380,3.427,546,5.386,548,7.092,549,7.187,550,4.213,554,3,555,2.743,761,5.884,787,6.339,793,4.999,823,4.959,860,3.644,2093,5.903,2094,6.689,2095,6.689,2096,8.637,2097,8.637,2098,6.689,2099,6.689,2100,7.873]],["title/modules/TeamadminModule.html",[557,1.23,2101,3.295]],["body/modules/TeamadminModule.html",[3,0.164,4,0.164,5,0.149,13,0.009,15,0.232,22,0.164,44,0.164,54,0.179,120,0.007,121,0.008,122,0.007,421,1.575,477,2.441,557,1.903,559,2.377,560,3.262,561,4.034,562,3.375,563,3.375,564,3.262,570,4.593,571,4.081,572,3.495,573,3.495,576,3.087,577,3.004,579,3.926,580,4.297,741,4.1,777,5.492,1874,5.278,2101,6.872,2102,6.02,2103,6.02,2104,6.02,2105,6.286,2106,6.822,2107,6.02]],["title/modules/TeamadminRoutingModule.html",[557,1.23,2105,3.091]],["body/modules/TeamadminRoutingModule.html",[3,0.168,4,0.168,5,0.153,13,0.009,15,0.23,19,0.713,22,0.168,44,0.168,54,0.184,120,0.007,121,0.008,122,0.007,258,1.076,477,2.202,554,3.142,559,2.441,561,3.35,576,2.715,577,3.051,597,4.031,598,4.369,599,4.031,601,4.031,602,4.211,741,4.211,1874,4.643,2105,5.671,2107,6.182,2108,7.005]],["title/components/TeamsComponent.html",[19,0.449,479,1.23]],["body/components/TeamsComponent.html",[3,0.143,4,0.143,5,0.13,7,0.403,8,0.772,12,0.556,13,0.009,15,0.193,19,0.811,20,2.169,22,0.143,23,4.435,44,0.143,49,2.557,50,2.438,52,2.002,54,0.157,55,1.588,56,1.865,64,1.44,67,1.974,77,2.264,89,2.572,120,0.006,121,0.007,122,0.006,136,0.912,170,0.763,176,1.909,197,0.723,215,0.785,228,0.849,254,0.849,335,1.665,336,2.204,337,1.88,338,1.834,339,1.834,343,1.834,344,1.79,345,2.151,351,1.821,354,4.807,360,1.514,361,1.445,363,1.479,381,1.588,417,4.231,419,3.053,421,1.379,422,2.259,423,2.259,424,1.834,425,2.554,426,1.834,427,1.665,428,1.834,429,1.834,430,1.834,431,1.626,432,1.834,433,1.665,434,1.834,435,1.665,436,1.834,437,1.665,438,1.834,439,1.626,440,1.834,441,1.665,442,1.834,443,1.665,444,1.834,445,1.665,446,1.834,447,1.665,448,1.834,449,1.626,450,1.834,451,1.665,452,1.834,453,1.665,454,1.834,455,1.665,456,1.834,457,1.665,458,1.834,459,1.665,460,1.834,461,1.626,462,1.834,463,1.588,464,1.834,465,1.626,466,1.834,467,1.665,468,1.834,469,1.665,470,1.79,471,1.834,472,1.665,473,1.834,474,1.834,475,1.626,476,1.834,477,1.626,478,1.834,479,2.319,480,1.834,481,1.626,482,1.834,483,1.665,484,1.747,485,1.834,486,1.834,937,5.919,1481,5.269,2109,5.269,2110,7.966,2111,7.352,2112,5.97,2113,5.97,2114,5.97,2115,7.352]],["title/injectables/TeamsGQL.html",[123,0.309,301,1.259]],["body/injectables/TeamsGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,0.648,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.146,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.711,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.823,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,1.982,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,1.131,302,1.216,303,1.216,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,0.767,331,0.767,332,0.664,333,0.713,334,0.731,2116,2.496]],["title/components/TournamentComponent.html",[19,0.449,481,1.201]],["body/components/TournamentComponent.html",[3,0.107,4,0.107,5,0.097,7,0.3,8,0.637,9,2.393,10,5.163,12,0.607,13,0.009,14,1.168,15,0.204,19,0.704,20,1.881,22,0.107,29,3.58,30,2.197,34,3.188,35,1.722,39,1.928,40,1.928,41,1.675,42,3.005,43,1.932,44,0.107,49,2.514,50,2.398,52,1.652,54,0.116,55,1.181,56,1.539,59,1.631,60,2.454,64,1.188,65,1.692,67,1.712,70,4.845,72,2.288,77,2.022,87,1.539,111,1.246,120,0.004,121,0.006,122,0.004,136,0.982,139,1.797,170,0.744,197,0.735,210,1.3,213,2.134,215,0.584,228,0.632,254,0.632,335,1.239,336,1.819,337,1.399,338,1.365,339,1.365,343,1.365,344,1.332,345,1.775,351,1.503,360,1.753,361,1.672,363,1.926,365,2.33,381,1.181,419,3.363,421,1.026,422,1.864,423,1.864,424,1.365,425,2.281,426,1.365,427,1.239,428,1.365,429,1.365,430,1.365,431,1.21,432,1.365,433,1.239,434,1.365,435,1.239,436,1.365,437,1.239,438,1.365,439,1.21,440,1.365,441,1.239,442,1.365,443,1.239,444,1.365,445,1.239,446,1.365,447,1.239,448,1.365,449,1.21,450,1.365,451,1.239,452,1.365,453,1.239,454,1.365,455,1.239,456,1.365,457,1.239,458,1.365,459,1.239,460,1.365,461,1.21,462,1.365,463,1.181,464,1.365,465,1.21,466,1.365,467,1.239,468,1.365,469,1.239,470,1.332,471,1.365,472,1.239,473,1.365,474,1.365,475,1.21,476,1.365,477,1.21,478,1.365,479,1.239,480,1.365,481,2.022,482,1.365,483,1.239,484,1.3,485,1.365,486,1.365,555,1.548,674,4.294,808,3.821,886,4.534,1142,4.579,1242,3.115,1247,2.944,1371,4.854,1493,4.534,1494,4.534,1550,6.097,1576,3.92,1578,3.92,1581,5.354,1583,3.32,1595,5.354,1616,4.885,1653,7.081,1654,6.859,1749,5.354,1795,3.576,1798,5.354,1799,5.354,1805,5.354,2117,3.92,2118,6.909,2119,6.067,2120,7.425,2121,7.425,2122,4.442,2123,6.909,2124,4.442,2125,4.442,2126,4.442,2127,4.442,2128,4.442,2129,4.442,2130,4.442,2131,4.442,2132,4.442,2133,4.442,2134,4.442,2135,4.442,2136,4.442,2137,4.442,2138,4.442,2139,4.442,2140,6.909,2141,4.442,2142,4.442,2143,6.067,2144,4.442,2145,4.442,2146,4.442,2147,4.442,2148,4.442,2149,4.442,2150,7.773,2151,4.442,2152,4.442,2153,4.442,2154,4.442,2155,4.442,2156,6.067,2157,4.442,2158,4.442,2159,6.067,2160,4.442,2161,4.442,2162,4.442,2163,4.442,2164,6.067,2165,6.067,2166,6.067,2167,7.425,2168,8.36,2169,7.425,2170,7.425,2171,6.067,2172,6.067,2173,6.067]],["title/injectables/TournamentGQL.html",[40,1.145,123,0.309]],["body/injectables/TournamentGQL.html",[0,0.608,3,0.06,4,0.06,5,0.054,7,0.168,8,0.416,9,1.525,11,1.466,12,0.704,13,0.009,14,1.313,15,0.129,22,0.06,36,1.877,37,0.68,38,1.078,39,0.648,40,1.028,44,0.226,46,0.696,47,1.648,48,0.696,54,0.228,57,1.663,62,1.191,87,0.633,94,1.6,96,1.6,100,1.6,102,0.713,104,0.713,107,2.15,110,2.152,111,1.848,120,0.002,121,0.004,122,0.002,123,0.611,124,0.713,125,0.633,126,0.696,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.604,140,1.6,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.68,147,1.104,148,0.748,149,0.748,150,0.731,151,2.614,152,1.216,153,2.118,154,1.856,155,1.856,156,2.444,157,1.187,158,1.187,159,1.902,160,1.187,161,1.679,162,0.767,163,2.066,164,1.6,165,0.767,166,0.767,167,1.131,168,0.767,169,1.187,170,0.811,171,1.187,172,1.187,173,1.512,174,1.679,175,1.187,176,1.769,177,0.767,178,1.679,179,2.158,180,2.158,181,1.902,182,1.159,183,1.679,184,1.187,185,1.216,186,1.216,187,1.679,188,1.489,189,1.902,190,1.679,191,1.72,192,1.187,193,0.767,194,1.679,195,1.948,196,1.159,197,0.882,198,1.004,199,0.648,200,2.04,201,0.748,202,1.104,203,1.44,204,1.053,205,2.018,206,0.748,207,1.131,208,1.856,209,0.748,210,1.159,211,1.902,212,0.748,213,2.023,214,0.748,215,0.929,216,1.475,217,1.187,218,1.787,219,2.33,220,1.187,221,1.187,222,1.846,223,1.688,224,1.624,225,1.187,226,1.187,227,1.187,228,1.101,229,1.159,230,1.679,231,1.187,232,0.731,233,1.159,234,1.159,235,1.406,236,1.187,237,1.187,238,1.44,239,1.44,240,0.767,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.679,248,0.748,249,1.187,250,0.748,251,0.731,252,1.663,253,1.34,254,0.563,255,1.104,256,0.713,257,0.767,258,1.188,259,1.44,260,1.812,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.44,268,1.44,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.713,275,2.482,276,2.497,277,1.512,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.648,323,0.767,324,1.216,325,0.713,326,0.648,327,0.767,328,0.68,329,0.713,330,1.216,331,1.216,332,0.664,333,0.713,334,0.731,2174,2.496]],["title/modules/TournamentModule.html",[557,1.23,2175,3.295]],["body/modules/TournamentModule.html",[3,0.164,4,0.164,5,0.149,13,0.009,15,0.232,22,0.164,44,0.164,54,0.179,120,0.007,121,0.008,122,0.007,213,1.814,421,1.575,481,2.441,557,1.903,559,2.377,560,3.262,561,4.034,562,3.375,563,3.375,564,3.262,570,4.593,571,4.081,572,3.495,573,3.495,576,3.087,577,3.004,579,3.926,580,4.297,741,4.1,1874,5.278,2175,6.872,2176,6.02,2177,6.02,2178,6.02,2179,6.286,2180,6.822,2181,6.02]],["title/modules/TournamentRoutingModule.html",[557,1.23,2179,3.091]],["body/modules/TournamentRoutingModule.html",[3,0.169,4,0.169,5,0.153,13,0.009,15,0.224,19,0.716,22,0.169,44,0.169,54,0.184,120,0.007,121,0.008,122,0.007,258,1.08,481,2.208,554,3.155,559,2.451,561,3.364,576,2.727,577,3.058,597,4.048,598,4.376,599,4.048,601,4.048,602,4.228,2179,5.684,2181,6.207,2182,7.034]],["title/injectables/UpdateTeamContactGQL.html",[123,0.309,304,1.259]],["body/injectables/UpdateTeamContactGQL.html",[0,0.606,3,0.06,4,0.06,5,0.054,7,0.168,8,0.414,9,1.521,11,1.463,12,0.704,13,0.009,14,1.315,15,0.129,22,0.06,36,1.875,37,0.677,38,1.074,39,0.645,40,0.645,44,0.226,46,0.693,47,1.645,48,0.693,54,0.228,57,1.659,62,1.187,87,0.63,94,1.596,96,1.596,100,1.596,102,0.71,104,0.71,107,2.145,110,2.151,111,1.845,120,0.002,121,0.004,122,0.002,123,0.611,124,0.71,125,0.63,126,0.693,127,2.556,128,0.548,129,0.487,130,2.559,131,2.71,132,0.763,133,2.34,134,0.763,135,2.038,136,0.285,138,2.662,139,0.601,140,1.596,141,1.212,142,0.727,143,1.183,144,1.183,145,1.183,146,0.677,147,1.1,148,0.745,149,0.745,150,0.727,151,2.613,152,1.212,153,2.115,154,1.853,155,1.853,156,2.443,157,1.183,158,1.183,159,1.898,160,1.183,161,1.675,162,0.763,163,2.128,164,1.596,165,0.763,166,0.763,167,1.127,168,0.763,169,1.183,170,0.811,171,1.183,172,1.183,173,1.507,174,1.675,175,1.183,176,1.766,177,0.763,178,1.944,179,2.242,180,2.242,181,2.126,182,1.154,183,1.675,184,1.183,185,1.212,186,1.212,187,1.675,188,1.486,189,1.898,190,1.675,191,1.718,192,1.183,193,0.763,194,1.675,195,1.944,196,1.154,197,0.88,198,1.001,199,0.645,200,2.038,201,0.745,202,1.1,203,1.436,204,1.049,205,2.015,206,0.745,207,1.127,208,1.853,209,0.745,210,1.154,211,1.898,212,0.745,213,1.98,214,0.745,215,0.927,216,1.471,217,1.183,218,1.783,219,2.328,220,1.183,221,1.183,222,1.843,223,1.684,224,1.62,225,1.183,226,1.183,227,1.183,228,1.099,229,1.154,230,1.675,231,1.183,232,0.727,233,1.154,234,1.154,235,1.401,236,1.183,237,1.183,238,1.436,239,1.436,240,0.763,241,1.183,242,1.183,243,1.183,244,1.183,245,1.183,246,1.183,247,1.675,248,0.745,249,1.183,250,0.745,251,0.727,252,1.659,253,1.336,254,0.561,255,1.1,256,0.71,257,0.763,258,1.187,259,1.436,260,1.809,261,1.436,262,1.401,263,1.436,264,1.154,265,1.154,266,1.154,267,1.154,268,1.436,269,1.436,270,1.154,271,0.727,272,1.913,273,1.869,274,0.71,275,2.48,276,2.495,277,1.507,278,0.71,279,0.763,280,0.763,281,0.71,282,0.763,283,0.763,284,0.661,285,0.763,286,0.763,287,0.677,288,0.763,289,0.763,290,0.71,291,0.763,292,0.763,293,0.71,294,0.763,295,0.763,296,0.71,297,0.763,298,0.71,299,0.763,300,0.763,301,0.71,302,0.763,303,0.763,304,1.127,305,0.693,306,0.763,307,0.763,308,0.71,309,0.763,310,0.763,311,0.71,312,0.727,313,2.375,314,0.763,315,0.763,316,0.677,317,0.763,318,0.763,319,0.677,320,0.763,321,0.763,322,0.645,323,0.763,324,1.212,325,0.71,326,0.645,327,0.763,328,0.677,329,0.71,330,0.763,331,0.763,332,0.661,333,0.71,334,0.727,2183,2.485]],["title/injectables/UserGQL.html",[123,0.309,332,1.172]],["body/injectables/UserGQL.html",[0,0.608,3,0.06,4,0.06,5,0.055,7,0.169,8,0.416,9,1.526,11,1.466,12,0.704,13,0.009,14,1.312,15,0.129,22,0.06,36,1.877,37,0.68,38,1.079,39,0.649,40,0.649,44,0.226,46,0.697,47,1.649,48,0.697,54,0.228,57,1.664,62,1.191,87,0.634,94,1.6,96,1.6,100,1.6,102,0.714,104,0.714,107,2.151,110,2.153,111,1.846,120,0.002,121,0.004,122,0.002,123,0.611,124,0.714,125,0.634,126,0.697,127,2.558,128,0.55,129,0.489,130,2.56,131,2.708,132,0.767,133,2.273,134,0.767,135,2.042,136,0.286,138,2.662,139,0.605,140,1.6,141,1.217,142,0.731,143,1.188,144,1.188,145,1.188,146,0.68,147,1.105,148,0.749,149,0.749,150,0.731,151,2.614,152,1.217,153,2.119,154,1.857,155,1.857,156,2.444,157,1.188,158,1.188,159,1.902,160,1.188,161,1.68,162,0.767,163,2.067,164,1.6,165,0.767,166,0.767,167,1.132,168,0.767,169,1.188,170,0.811,171,1.188,172,1.188,173,1.512,174,1.68,175,1.188,176,1.769,177,0.767,178,1.68,179,2.159,180,2.159,181,1.902,182,1.159,183,1.68,184,1.188,185,1.217,186,1.217,187,1.68,188,1.49,189,1.902,190,1.68,191,1.72,192,1.188,193,0.767,194,1.68,195,1.949,196,1.159,197,0.882,198,1.005,199,0.649,200,2.04,201,0.749,202,1.105,203,1.44,204,1.053,205,2.019,206,0.749,207,1.132,208,1.857,209,0.749,210,1.159,211,1.902,212,0.749,213,1.983,214,0.749,215,0.98,216,1.68,217,1.188,218,1.788,219,2.33,220,1.188,221,1.188,222,1.846,223,1.688,224,1.624,225,1.188,226,1.188,227,1.188,228,1.101,229,1.159,230,1.68,231,1.188,232,0.731,233,1.159,234,1.159,235,1.406,236,1.188,237,1.188,238,1.44,239,1.44,240,0.767,241,1.188,242,1.188,243,1.188,244,1.188,245,1.188,246,1.188,247,1.68,248,0.749,249,1.188,250,0.749,251,0.731,252,1.664,253,1.341,254,0.563,255,1.105,256,0.714,257,0.767,258,1.189,259,1.44,260,1.813,261,1.44,262,1.406,263,1.44,264,1.159,265,1.159,266,1.159,267,1.159,268,1.639,269,1.44,270,1.159,271,0.731,272,1.914,273,1.87,274,0.714,275,2.482,276,2.497,277,1.512,278,0.714,279,0.767,280,0.767,281,0.714,282,0.767,283,0.767,284,0.664,285,0.767,286,0.767,287,0.68,288,0.767,289,0.767,290,0.714,291,0.767,292,0.767,293,0.714,294,0.767,295,0.767,296,0.714,297,0.767,298,0.714,299,0.767,300,0.767,301,0.714,302,0.767,303,0.767,304,0.714,305,0.697,306,0.767,307,0.767,308,0.714,309,0.767,310,0.767,311,0.714,312,0.731,313,2.378,314,0.767,315,0.767,316,0.68,317,0.767,318,0.767,319,0.68,320,0.767,321,0.767,322,0.649,323,0.767,324,1.217,325,0.714,326,0.649,327,0.767,328,0.68,329,0.714,330,0.767,331,0.767,332,1.053,333,0.714,334,0.731,2184,2.498]],["title/components/UserListComponent.html",[19,0.449,483,1.23]],["body/components/UserListComponent.html",[3,0.137,4,0.137,5,0.125,7,0.386,8,0.752,12,0.542,13,0.009,15,0.215,19,0.796,20,2.129,22,0.137,34,3.206,35,2.219,41,2.159,42,3.115,43,2.49,44,0.137,49,2.551,50,2.433,52,1.95,54,0.15,55,1.522,56,1.817,64,1.403,65,1.596,72,2.159,77,2.231,120,0.006,121,0.007,122,0.006,136,0.895,170,0.748,176,1.86,179,1.997,180,1.997,197,0.693,215,1.17,218,2.287,228,0.814,254,0.814,333,2.458,335,1.596,336,2.147,337,1.802,338,1.759,339,1.759,343,1.759,344,1.716,345,2.096,351,1.775,360,1.452,361,1.385,363,1.418,365,1.716,381,1.522,417,4.122,421,1.322,422,2.2,423,2.2,424,1.759,425,2.517,426,1.759,427,1.596,428,1.759,429,1.759,430,1.759,431,1.559,432,1.759,433,1.596,434,1.759,435,1.596,436,1.759,437,1.596,438,1.759,439,1.559,440,1.759,441,1.596,442,1.759,443,1.596,444,1.759,445,1.596,446,1.759,447,1.596,448,1.759,449,1.559,450,1.759,451,1.596,452,1.759,453,1.596,454,1.759,455,1.596,456,1.759,457,1.596,458,1.759,459,1.596,460,1.759,461,1.559,462,1.759,463,1.522,464,1.759,465,1.559,466,1.759,467,1.596,468,1.759,469,1.596,470,1.716,471,1.759,472,1.596,473,1.759,474,1.759,475,1.559,476,1.759,477,1.559,478,1.759,479,1.596,480,1.759,481,1.559,482,1.759,483,2.284,484,2.287,485,1.759,486,1.759,509,5.353,592,6.595,852,5.022,1142,3.794,1371,3.957,2185,7.229,2186,5.051,2187,7.817,2188,7.162,2189,5.724,2190,7.162,2191,5.724,2192,5.724,2193,5.724,2194,5.724,2195,5.724,2196,5.724,2197,7.162,2198,7.162,2199,7.162,2200,7.162,2201,7.162]],["title/coverage.html",[2202,4.86]],["body/coverage.html",[0,1.352,1,3.293,5,0.102,6,5.313,12,0.355,13,0.009,19,0.942,23,2.323,29,1.983,37,1.279,38,1.279,39,1.22,40,1.22,45,3.293,55,1.249,59,1.724,120,0.007,121,0.006,122,0.005,123,0.653,124,1.342,126,2.604,140,1.342,259,1.374,260,1.31,261,1.374,262,1.342,263,1.374,264,1.374,265,1.374,266,1.374,267,1.374,268,1.374,269,1.374,270,1.374,274,1.342,278,1.342,281,1.342,284,1.249,287,1.279,290,1.342,293,1.342,296,1.342,298,1.342,301,1.342,304,1.342,305,1.31,308,1.342,311,1.342,312,1.374,316,1.279,319,1.279,322,1.22,325,1.342,326,1.22,328,1.279,329,1.342,332,1.249,333,1.342,335,1.31,340,4.145,341,3.781,342,4.145,358,1.983,381,1.249,427,1.31,431,1.279,433,1.31,435,1.31,437,1.31,439,1.279,441,1.31,443,1.31,445,1.31,447,1.31,449,1.279,451,1.31,453,1.31,455,1.31,457,1.31,459,1.31,461,1.279,463,1.249,465,1.279,467,1.31,469,1.31,472,1.31,475,1.279,477,1.279,479,1.31,481,1.279,483,1.31,487,4.145,503,3.51,539,4.145,544,5.072,545,3.293,547,4.145,587,4.985,592,3.781,607,4.145,615,2.958,628,5.677,630,4.417,674,5.233,706,3.51,721,3.293,722,3.781,748,5.56,753,3.781,761,3.51,767,3.51,780,4.145,782,4.145,800,5.313,829,3.293,831,2.958,836,3.293,893,4.145,913,4.145,922,4.145,923,3.781,924,4.145,938,4.145,958,4.145,969,4.145,989,2.823,990,2.595,1086,4.145,1109,4.145,1130,4.145,1158,4.708,1181,3.781,1221,3.781,1222,5.072,1226,3.113,1230,2.595,1241,3.51,1268,4.145,1294,3.293,1295,5.313,1296,5.313,1300,3.293,1376,3.51,1377,5.072,1382,3.968,1383,4.985,1391,5.072,1392,5.072,1395,4.145,1425,4.145,1541,4.145,1600,4.145,1606,4.145,1702,4.145,1732,4.145,1845,4.145,1879,4.145,1887,4.145,1899,4.145,1900,4.145,1913,4.145,1942,4.145,1987,4.145,2042,4.145,2069,4.145,2093,4.145,2109,4.145,2117,4.145,2185,4.145,2186,4.145,2202,3.781,2203,4.145,2204,4.696,2205,4.696,2206,9.283,2207,8.742,2208,9.116,2209,9.153,2210,7.597,2211,7.109,2212,6.3,2213,8.468,2214,7.923,2215,4.696,2216,6.3,2217,4.696,2218,4.696,2219,6.3,2220,6.3,2221,4.696,2222,7.109,2223,4.696,2224,4.696,2225,4.696,2226,4.145,2227,4.145,2228,4.145,2229,4.145,2230,5.56,2231,4.145,2232,4.696]],["title/dependencies.html",[560,2.538,2233,3.673]],["body/dependencies.html",[13,0.009,18,2.13,22,0.147,26,3.675,27,3.675,28,3.25,32,3.15,33,2.581,35,2.892,120,0.006,121,0.007,122,0.006,219,1.665,252,2.451,253,2.192,255,2.51,344,1.833,379,3.133,383,4.569,554,2.742,560,2.924,562,3.025,724,6.584,725,6.006,731,5.396,732,5.396,741,3.675,831,3.851,849,4.569,850,5.575,1163,7.105,1164,5.396,1169,5.575,1174,4.569,1175,4.569,1177,7.105,1178,5.396,1180,5.396,1213,5.396,1247,4.052,1303,4.569,1829,5.396,2202,4.923,2234,6.114,2235,9.001,2236,6.114,2237,7.46,2238,6.114,2239,7.46,2240,6.114,2241,6.114,2242,6.114,2243,6.114,2244,6.114,2245,6.114,2246,6.114,2247,6.114,2248,6.114,2249,6.114,2250,6.114,2251,6.114,2252,7.46,2253,6.114,2254,6.114,2255,6.114,2256,6.114,2257,7.46,2258,7.46,2259,7.46,2260,6.114,2261,6.114,2262,6.114,2263,6.114,2264,6.114,2265,6.114,2266,6.114,2267,6.114,2268,6.114,2269,6.114,2270,6.114,2271,6.114,2272,6.114,2273,6.114,2274,6.114,2275,8.935,2276,8.852,2277,6.114,2278,6.114,2279,8.383,2280,6.114,2281,6.114,2282,6.114,2283,6.114,2284,6.114,2285,6.114,2286,6.114,2287,6.114,2288,6.114,2289,6.114,2290,6.114,2291,6.114,2292,6.114,2293,6.114,2294,6.114,2295,6.114,2296,6.114,2297,6.114,2298,6.114,2299,6.114,2300,6.114,2301,6.114,2302,6.114,2303,6.114,2304,6.114,2305,6.114,2306,6.114,2307,6.114,2308,6.114,2309,6.114,2310,6.114,2311,6.114,2312,6.114]],["title/miscellaneous/enumerations.html",[2313,2.208,2314,4.684]],["body/miscellaneous/enumerations.html",[7,0.482,13,0.009,120,0.007,121,0.008,122,0.007,126,1.991,129,1.754,142,2.392,143,2.451,144,2.451,145,2.451,146,2.226,147,2.28,148,2.14,149,2.14,2313,4.291,2314,6.3,2315,6.583]],["title/miscellaneous/functions.html",[2313,2.208,2316,4.684]],["body/miscellaneous/functions.html",[7,0.483,13,0.009,120,0.007,121,0.008,122,0.007,170,0.784,357,4.523,360,2.077,361,1.981,722,5.762,749,6.316,753,6.592,1158,5.348,1162,6.316,1221,6.592,2313,4.302,2316,6.316,2317,6.316,2318,7.156,2319,7.156,2320,8.188,2321,7.156]],["title/index.html",[7,0.248,2322,3.241,2323,3.241]],["body/index.html",[13,0.008,120,0.007,121,0.008,122,0.007,2203,6.423,2324,7.277,2325,8.266,2326,8.266,2327,7.277]],["title/modules.html",[559,2.103]],["body/modules.html",[13,0.008,120,0.007,121,0.008,122,0.007,558,5.042,559,2.351,568,4.731,569,4.731,570,3.457,702,4.472,712,5.042,718,4.731,719,4.731,720,4.472,725,7.42,944,5.042,948,4.731,1150,4.731,1806,5.042,1810,4.731,1868,5.042,1872,4.731,2034,5.042,2038,4.731,2101,5.042,2105,4.731,2175,5.042,2179,4.731,2328,9.216,2329,9.216,2330,9.388,2331,9.216,2332,9.216]],["title/overview.html",[2333,4.86]],["body/overview.html",[2,2.653,13,0.009,55,2.017,120,0.005,121,0.007,122,0.005,125,1.361,335,2.115,336,1.608,358,3.202,381,2.017,421,1.239,427,2.115,431,2.066,433,2.399,435,2.115,437,2.115,439,2.066,441,2.399,443,2.115,445,2.115,447,2.115,449,2.343,451,2.115,453,2.115,455,2.115,457,2.115,459,2.399,461,2.066,463,2.017,465,2.066,467,2.115,469,2.115,472,2.399,475,2.066,477,2.066,479,2.115,481,2.066,483,2.115,546,4.318,557,1.496,558,6.954,559,1.869,560,2.565,561,2.565,562,2.653,563,2.653,564,2.565,565,4.734,566,4.734,567,4.734,568,5.318,569,6.296,570,4.784,571,3.522,572,2.748,573,2.748,598,2.748,615,4.777,702,5.302,712,6.866,713,4.734,714,4.734,715,4.734,716,4.734,717,4.734,718,5.318,719,5.799,720,5.774,721,5.318,944,6.711,945,4.734,946,4.734,947,4.734,948,5.318,1146,4.734,1147,4.734,1148,4.734,1149,4.734,1150,5.318,1156,4.734,1157,4.734,1201,4.008,1806,6.63,1807,4.734,1808,4.734,1809,4.734,1810,5.318,1868,6.511,1869,4.734,1870,4.734,1871,4.734,1872,5.318,1965,4.734,1966,4.734,1968,4.734,2034,6.511,2035,4.734,2036,4.734,2037,4.734,2038,5.318,2101,6.511,2102,4.734,2103,4.734,2104,4.734,2105,5.318,2175,6.511,2176,4.734,2177,4.734,2178,4.734,2179,5.318,2333,4.318,2334,6.873,2335,5.364,2336,5.364,2337,5.364]],["title/routes.html",[598,3.093]],["body/routes.html",[13,0.008,120,0.007,121,0.008,122,0.007,598,3.748]],["title/todo.html",[2322,3.241,2323,3.241,2338,3.673]],["body/todo.html",[13,0.009,83,4.981,120,0.007,121,0.008,122,0.007,176,1.845,197,0.861,200,1.845,202,1.981,215,0.934,248,2.13,470,2.13,509,6.093,774,6.269,967,6.269,1722,5.719,2333,5.719,2339,9.211,2340,7.103,2341,7.103,2342,7.103,2343,7.103,2344,7.103,2345,7.103,2346,7.103,2347,7.103,2348,7.103,2349,7.103,2350,7.103]],["title/miscellaneous/typealiases.html",[2313,2.208,2351,5.308]],["body/miscellaneous/typealiases.html",[7,0.349,12,0.715,13,0.008,28,3.567,36,1.549,46,1.871,47,2.064,48,1.871,57,1.827,62,1.624,87,1.702,107,2.236,110,2.336,120,0.005,121,0.007,122,0.005,126,1.441,131,2.794,138,2.253,139,1.624,176,2.048,191,1.586,192,2.012,196,1.963,197,0.813,198,1.702,200,2.048,201,1.549,203,1.963,204,1.784,205,1.917,206,1.549,208,1.917,209,1.549,211,1.963,212,1.549,213,1.784,214,1.549,216,2.012,217,2.012,218,1.963,219,2.516,222,1.702,224,1.784,228,1.122,229,1.963,232,1.963,233,1.963,235,1.917,238,1.963,239,1.963,250,2.012,1209,5.015,1383,3.623,1385,7.614,1386,5.402,2313,3.106,2315,7.635,2352,5.167,2353,7.214]],["title/miscellaneous/variables.html",[110,1.315,2313,2.208]],["body/miscellaneous/variables.html",[7,0.363,11,1.482,12,0.659,13,0.009,36,2.05,110,1.333,111,1.835,120,0.008,121,0.007,122,0.005,126,1.501,128,2.029,129,1.803,130,2.566,154,1.537,155,1.537,159,1.574,163,1.789,170,0.793,176,1.789,179,1.921,180,1.921,181,1.574,189,1.574,191,1.628,194,1.613,195,1.613,197,0.92,200,2.08,205,1.967,208,1.537,211,1.574,213,2.02,215,0.905,219,2.446,220,1.613,221,1.613,222,2.031,223,2.08,224,1.831,225,1.613,226,1.613,227,1.613,228,1.204,230,2.065,231,1.613,234,1.574,235,1.537,236,1.613,237,1.613,238,1.574,239,1.574,241,1.613,242,1.613,243,1.613,244,1.613,245,1.613,246,1.613,247,2.065,249,1.613,259,2.343,260,2.362,261,2.223,262,2.17,263,2.343,264,2.015,265,2.015,266,2.015,267,2.015,268,2.015,269,2.015,270,2.015,628,6.515,756,4.257,831,4.338,851,3.407,883,3.389,1158,4.021,1181,5.545,1182,4.748,1382,4.338,1383,3.773,1384,5.147,1389,5.147,1391,4.332,1392,5.545,2054,6.078,2226,4.748,2227,4.748,2228,4.748,2229,4.748,2230,4.748,2231,6.078,2313,3.234,2315,7.233,2317,4.748,2353,4.748,2354,6.887,2355,5.38,2356,5.38,2357,5.38,2358,5.38,2359,5.38,2360,5.38,2361,5.38,2362,8.008,2363,8.008,2364,8.008,2365,8.008,2366,8.008,2367,5.38,2368,8.008,2369,5.38,2370,8.008,2371,5.38,2372,5.38,2373,5.38,2374,5.38,2375,5.38,2376,5.38]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":674,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["0.1.1",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":2287,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":2275,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.1",{"_index":2271,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["0.4.13",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":701,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2220,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2218,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2217,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2216,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2221,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2215,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2213,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2219,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2222,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1371,"title":{"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["1.0.17",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":673,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.1",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2337,"title":{},"body":{"overview.html":{}}}],["12px",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["14.1.1",{"_index":2272,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":679,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":689,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":1201,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":2283,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2269,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2334,"title":{},"body":{"overview.html":{}}}],["25",{"_index":671,"title":{},"body":{"components/AppComponent.html":{}}}],["2500",{"_index":759,"title":{},"body":{"modules/AppModule.html":{}}}],["25px",{"_index":669,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":1666,"title":{},"body":{"components/MatchComponent.html":{}}}],["2px",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.1",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2285,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["3.30.19",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2335,"title":{},"body":{"overview.html":{}}}],["30000",{"_index":1862,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["304701",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["37",{"_index":2336,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1570,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.0.0",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["441313",{"_index":699,"title":{},"body":{"components/AppComponent.html":{}}}],["5.0.2",{"_index":2264,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":685,"title":{},"body":{"components/AppComponent.html":{}}}],["50vw",{"_index":508,"title":{},"body":{"components/AddteamComponent.html":{}}}],["6.0.2",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":2014,"title":{},"body":{"components/TableComponent.html":{}}}],["7",{"_index":1470,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["7.0.0",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2267,"title":{},"body":{"dependencies.html":{}}}],["7.2.9",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["89ff00",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["8ch",{"_index":1108,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["9px",{"_index":693,"title":{},"body":{"components/AppComponent.html":{}}}],["__schema",{"_index":1384,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["__typename",{"_index":156,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["_currentseason",{"_index":1916,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_currentseason(season",{"_index":1933,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_subscriptionclient",{"_index":1223,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["_team",{"_index":250,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["a.email.tolowercase",{"_index":2195,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.length",{"_index":1370,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercase",{"_index":1493,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a.number",{"_index":2145,"title":{},"body":{"components/TournamentComponent.html":{}}}],["a.occurred_at",{"_index":1143,"title":{},"body":{"components/EventsComponent.html":{}}}],["a.state.tolocalelowercase",{"_index":1486,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["a[i",{"_index":1374,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1375,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1698,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["abff00",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["acc.concat(val",{"_index":1364,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["access_time",{"_index":1656,"title":{},"body":{"components/MatchComponent.html":{}}}],["accessors",{"_index":808,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["accesstoken",{"_index":809,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["activatedroute",{"_index":1849,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":2096,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_component",{"_index":486,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["add",{"_index":344,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["addkickoffdatetopitch",{"_index":1671,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":1316,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatch",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addmatch'},{'name",{"_index":429,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["addnewseason",{"_index":1434,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addnewseason(seasonname",{"_index":1446,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addnewteam",{"_index":491,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamname",{"_index":495,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addteam",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addteam'},{'name",{"_index":428,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["addteam.component.css",{"_index":488,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam.component.html",{"_index":489,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam/addteam.component",{"_index":581,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteam/rename",{"_index":594,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteamcomponent",{"_index":427,"title":{"components/AddteamComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addteamgql",{"_index":1444,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addteamtoseason",{"_index":171,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason($season_id",{"_index":132,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(season_id",{"_index":134,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(teamid",{"_index":1449,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addteamtoseasongql",{"_index":124,"title":{"injectables/AddTeamToSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addtournamentround.component.html",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addtournamentround/addtournamentround.component",{"_index":1573,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcomponent",{"_index":55,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtypename",{"_index":1211,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["addusercomponent",{"_index":335,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adm",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":147,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":432,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["admin.component",{"_index":578,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":540,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":541,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.guard",{"_index":600,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["admincomponent",{"_index":431,"title":{"components/AdminComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":545,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":558,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":568,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplete",{"_index":973,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["afterwarelink.concat(auth).concat(http",{"_index":1210,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["aizasybo4ktasyvs6hxw6pv7njib0k9musx8ym0",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":403,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["alert(`${matchday.id",{"_index":1351,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["aliases",{"_index":2352,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_matchdays",{"_index":1797,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_teams",{"_index":1534,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["allpitches",{"_index":203,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasons",{"_index":208,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allseasons.fragment",{"_index":209,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasonsfragment",{"_index":265,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allseasonslist",{"_index":207,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["allseasonslist.allseasons",{"_index":1931,"title":{},"body":{"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{}}}],["allseasonslistgql",{"_index":328,"title":{"injectables/AllSeasonsListGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["allteams",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allteamsgql",{"_index":329,"title":{"injectables/AllTeamsGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentlist",{"_index":210,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["alltournamentlistgql",{"_index":39,"title":{"injectables/AllTournamentListGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentqgl",{"_index":2123,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournaments",{"_index":211,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alltournaments.fragment",{"_index":212,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["alltournamentsfragment",{"_index":266,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alltournamentsqgl",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["allusers",{"_index":218,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allusersgql",{"_index":333,"title":{"injectables/AllUsersGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["aname",{"_index":1490,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["angular",{"_index":253,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/de",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":379,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":18,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1820,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":1824,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1822,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1826,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1818,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1816,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":724,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":554,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"interfaces/Credentials.html":{},"modules/EventsRoutingModule.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":2054,"title":{},"body":{"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["api/graphql",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":252,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["apollo.mutation",{"_index":276,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.query",{"_index":313,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.subscription",{"_index":1388,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["apollo_options",{"_index":1160,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink",{"_index":1171,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollomodule",{"_index":1159,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["app.component",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":726,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":433,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodule",{"_index":702,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":712,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":718,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1213,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["array",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1593,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["astate",{"_index":1485,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["async",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{}}}],["auth",{"_index":1191,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth.interceptor",{"_index":737,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticateduser",{"_index":216,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationservice",{"_index":358,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authinterceptor",{"_index":721,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":357,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"miscellaneous/functions.html":{}}}],["authservice.accesstoken",{"_index":1193,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice.logout",{"_index":1188,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice.setaccesstoken",{"_index":1190,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice.user.first_name",{"_index":1865,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":678,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{}}}],["available",{"_index":2332,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1269,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["b",{"_index":1142,"title":{},"body":{"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["b.email.tolowercase",{"_index":2196,"title":{},"body":{"components/UserListComponent.html":{}}}],["b.name.tolowercase",{"_index":1494,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.state.tolocalelowercase",{"_index":1488,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["background",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["base64",{"_index":849,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercase",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercase",{"_index":889,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["based",{"_index":1204,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["basic",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":799,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/GraphQLModule.html":{}}}],["behaviorsubject",{"_index":1925,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":1926,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.23",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["betweenmatchdaysoffset",{"_index":1428,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["bname",{"_index":1489,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["body",{"_index":1050,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.label",{"_index":1052,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_latitude",{"_index":1054,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_longitude",{"_index":1055,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["boolean",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"guards/TeamadminGuard.html":{}}}],["boolean(this.accesstoken",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":667,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1509,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["browse",{"_index":2330,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":728,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":727,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":723,"title":{},"body":{"modules/AppModule.html":{}}}],["bstate",{"_index":1487,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.add_user",{"_index":418,"title":{},"body":{"components/AddUserComponent.html":{}}}],["button.back",{"_index":1083,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.cancel",{"_index":1084,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_result",{"_index":1106,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":664,"title":{},"body":{"components/AppComponent.html":{}}}],["button.close",{"_index":921,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["button.create_pitch",{"_index":1077,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.create_season",{"_index":1532,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.create_team",{"_index":510,"title":{},"body":{"components/AddteamComponent.html":{}}}],["button.create_tournament",{"_index":1596,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1662,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1661,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1597,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_time",{"_index":1663,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":657,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":665,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":1081,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.ok",{"_index":912,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.save",{"_index":1085,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/TeamadminComponent.html":{}}}],["button.send_user_mail",{"_index":420,"title":{},"body":{"components/AddUserComponent.html":{}}}],["button.set_day",{"_index":1536,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.set_time",{"_index":536,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":538,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["button.start_season",{"_index":1540,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["c1",{"_index":1924,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c1.id",{"_index":1940,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2",{"_index":1922,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2.id",{"_index":1941,"title":{},"body":{"injectables/SeasonService.html":{}}}],["cache",{"_index":1177,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["cacheredirects",{"_index":1212,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["calls",{"_index":2053,"title":{},"body":{"injectables/TeamService.html":{}}}],["canactivate",{"_index":548,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":2095,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":967,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"todo.html":{}}}],["canload",{"_index":549,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":1305,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["card",{"_index":1664,"title":{},"body":{"components/MatchComponent.html":{}}}],["case",{"_index":1504,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["catch",{"_index":114,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["cdref",{"_index":991,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changedetectorref",{"_index":992,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":1270,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":1275,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":801,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'name",{"_index":436,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["changepassword(newpassword",{"_index":819,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":894,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":895,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordcomponent",{"_index":435,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordqgl",{"_index":816,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changeuserpassword",{"_index":168,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["changeuserpassword(new_password",{"_index":289,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["checknewpitchname",{"_index":982,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["class",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["client",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["cluster_adminmodule",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":566,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule",{"_index":945,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declarations",{"_index":946,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_imports",{"_index":947,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1146,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":1147,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":1149,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1148,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1156,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1157,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule",{"_index":1807,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declarations",{"_index":1808,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_imports",{"_index":1809,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule",{"_index":1869,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declarations",{"_index":1870,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_imports",{"_index":1871,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1965,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1966,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1968,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1967,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodule",{"_index":2035,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declarations",{"_index":2036,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":2037,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule",{"_index":2102,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declarations",{"_index":2103,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_imports",{"_index":2104,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":2176,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":2177,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":2178,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codacy",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":2273,"title":{},"body":{"dependencies.html":{}}}],["codegen",{"_index":2276,"title":{},"body":{"dependencies.html":{}}}],["color",{"_index":681,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":2280,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":1874,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["component",{"_index":19,"title":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsRoutingModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":426,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["components",{"_index":336,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["components/admin#adminmodule",{"_index":776,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.component",{"_index":627,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodule",{"_index":775,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":626,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodule",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodule",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/contact",{"_index":1978,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/contact/contact.component",{"_index":1971,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.pitch.component",{"_index":1975,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.result.component",{"_index":1973,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.time.component",{"_index":1974,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/match/match.component",{"_index":1970,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/seasonchooser/seasonchooser.component",{"_index":1972,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/snackbar/snackbar.component",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["components/table#tablemodule",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodule",{"_index":778,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodule",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["conceded_goals",{"_index":246,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1224,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["connecttodevtools",{"_index":1220,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.error('iwas",{"_index":1358,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":405,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["console.error(result.errors",{"_index":2009,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('connected",{"_index":1250,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log('connecting",{"_index":1252,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log('error",{"_index":1254,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(error",{"_index":116,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"interfaces/RoundTeam.html":{}}}],["console.log(match",{"_index":1366,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log(message.data",{"_index":1257,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(result",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["console.log(this.data",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["console.log(this.possiblekickoffs",{"_index":1327,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["const",{"_index":258,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"modules/TeamadminRoutingModule.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["constructor(allseasonslistgql",{"_index":1917,"title":{},"body":{"injectables/SeasonService.html":{}}}],["constructor(alltournamentsqgl",{"_index":514,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["constructor(allusersgql",{"_index":2189,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(authservice",{"_index":550,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1980,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1556,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":916,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["constructor(formbuilder",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(i18service",{"_index":2122,"title":{},"body":{"components/TournamentComponent.html":{}}}],["constructor(latesteventsgql",{"_index":1133,"title":{},"body":{"components/EventsComponent.html":{}}}],["constructor(match",{"_index":988,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(pitchesqgl",{"_index":1880,"title":{},"body":{"injectables/PitchService.html":{}}}],["constructor(pitchservice",{"_index":1674,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(private",{"_index":793,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(redis",{"_index":1225,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["constructor(router",{"_index":813,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(seasonservice",{"_index":1441,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(submitresultgql",{"_index":1705,"title":{},"body":{"injectables/MatchService.html":{}}}],["constructor(teamservice",{"_index":354,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamsql",{"_index":2049,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(translateservice",{"_index":1273,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservice",{"_index":959,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["contact",{"_index":228,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":438,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contact.component.css",{"_index":914,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":915,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":936,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_name",{"_index":931,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.fragment",{"_index":229,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["contact.last_name",{"_index":932,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phone",{"_index":934,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.component",{"_index":1636,"title":{},"body":{"components/MatchComponent.html":{}}}],["contact_mail",{"_index":935,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_phone",{"_index":933,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactcomponent",{"_index":437,"title":{"components/ContactComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactfragment",{"_index":259,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactlist",{"_index":939,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'name",{"_index":440,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contactlist.component",{"_index":950,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":940,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":941,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcomponent",{"_index":439,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodule",{"_index":944,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodule",{"_index":948,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncomponent",{"_index":441,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts",{"_index":774,"title":{},"body":{"modules/AppRoutingModule.html":{},"todo.html":{}}}],["context",{"_index":831,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":2265,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2268,"title":{},"body":{"dependencies.html":{}}}],["core.module",{"_index":1154,"title":{},"body":{"modules/EventsModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.ts",{"_index":704,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverage",{"_index":2202,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["create",{"_index":2055,"title":{},"body":{"injectables/TeamService.html":{}}}],["createapollo",{"_index":1221,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createapollo(httplink",{"_index":2319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["created_at",{"_index":230,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["createform",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematchdays",{"_index":1435,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["creatematchdays(startdate",{"_index":1451,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["creatematchesforseason",{"_index":173,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseason(season_id",{"_index":297,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseasongql",{"_index":296,"title":{"injectables/CreateMatchesForSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createnewpitch",{"_index":983,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createnewtournament",{"_index":1551,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(name",{"_index":1558,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createpitchbody",{"_index":1051,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createpitches",{"_index":2344,"title":{},"body":{"todo.html":{}}}],["createround",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundgql",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundnr",{"_index":1545,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseason",{"_index":169,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason($id",{"_index":291,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(id",{"_index":292,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(seasonname",{"_index":1919,"title":{},"body":{"injectables/SeasonService.html":{}}}],["createseasongql",{"_index":290,"title":{"injectables/CreateSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteam",{"_index":177,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam(id",{"_index":303,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament",{"_index":184,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament($id",{"_index":309,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament(id",{"_index":310,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentgql",{"_index":308,"title":{"injectables/CreateTournamentGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createtournamentround",{"_index":185,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentroundgql",{"_index":37,"title":{"injectables/CreateTournamentRoundGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createuser",{"_index":187,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createusergql",{"_index":311,"title":{"injectables/CreateUserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["cred",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cred.token",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["credentials",{"_index":836,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["currentlang",{"_index":1272,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":1914,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchanged",{"_index":1946,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(event",{"_index":1952,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":706,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d",{"_index":1520,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["d').todate",{"_index":1344,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.name",{"_index":1696,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":407,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["data",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["data.allpitches",{"_index":1885,"title":{},"body":{"injectables/PitchService.html":{}}}],["data.allseasons.filter(s",{"_index":1960,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["data.allseasons.sort",{"_index":1484,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["data.allteams.sort((a",{"_index":2059,"title":{},"body":{"injectables/TeamService.html":{}}}],["data.alltournaments",{"_index":1578,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["data.allusers.sort((a",{"_index":2194,"title":{},"body":{"components/UserListComponent.html":{}}}],["data.latestevents.sort((a",{"_index":1141,"title":{},"body":{"components/EventsComponent.html":{}}}],["data.message",{"_index":1984,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.round",{"_index":532,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["data.season",{"_index":1495,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.match_days.find(x",{"_index":1793,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams",{"_index":1491,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.teams.find(x",{"_index":1794,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.sort((a",{"_index":1492,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.tournament.rounds",{"_index":2143,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds.sort((a",{"_index":2144,"title":{},"body":{"components/TournamentComponent.html":{}}}],["date",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["date(dp.from",{"_index":1515,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date(list[0].kickofftime).getutchours",{"_index":1346,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminutes",{"_index":1348,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(startdate.value",{"_index":1511,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date.setutchours(new",{"_index":1345,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutcminutes(new",{"_index":1347,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.toisostring",{"_index":1349,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.value",{"_index":1528,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1657,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'medium':'':i18service.currentlang",{"_index":2032,"title":{},"body":{"components/TableComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":1126,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate",{"_index":1699,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1798,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1658,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1667,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'medium\\':\\'\\':i18service.currentlang",{"_index":2033,"title":{},"body":{"components/TableComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":1128,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate",{"_index":1701,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1805,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1668,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["dateperiod",{"_index":140,"title":{"interfaces/DatePeriod.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["dates",{"_index":174,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["datetime",{"_index":28,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeadapter",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["daysoffset",{"_index":1297,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":1278,"title":{},"body":{"injectables/I18Service.html":{}}}],["debug",{"_index":1218,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["declarations",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":523,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"components/SnackbarComponent.html":{}}}],["default",{"_index":128,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":1288,"title":{},"body":{"injectables/I18Service.html":{}}}],["defined",{"_index":136,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["delete",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"interfaces/RoundTeam.html":{},"todo.html":{}}}],["dependencies",{"_index":560,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["description",{"_index":2043,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":662,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":490,"title":{},"body":{"components/AddteamComponent.html":{},"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1643,"title":{},"body":{"components/MatchComponent.html":{}}}],["directive",{"_index":424,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["directives",{"_index":485,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["displaypitch",{"_index":984,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":997,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":127,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["document.body.appendchild(tag",{"_index":649,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":640,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":639,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2203,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":150,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["dom",{"_index":338,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["done",{"_index":2350,"title":{},"body":{"todo.html":{}}}],["dp.from",{"_index":1510,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.from.setdate(dp.from.getdate",{"_index":1512,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.to",{"_index":1514,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.to.setdate(dp.to.getdate",{"_index":1516,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["draws",{"_index":243,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{}}}],["dynamic",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1695,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftime",{"_index":1694,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1693,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":509,"title":{},"body":{"components/AddteamComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["edit_round",{"_index":531,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":2092,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editmatch.pitch",{"_index":970,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'name",{"_index":444,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":971,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":972,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":1088,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":1089,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.time",{"_index":1110,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'name",{"_index":448,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.time.component.css",{"_index":1111,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":1112,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.component",{"_index":1639,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.result.component",{"_index":1637,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.time.component",{"_index":1638,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatchpitchcomponent",{"_index":443,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":1087,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'name",{"_index":446,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatchresultcomponent",{"_index":445,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecomponent",{"_index":447,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editround",{"_index":1552,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["element",{"_index":423,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["email",{"_index":163,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["emailformcontrol",{"_index":2072,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["en",{"_index":1279,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":334,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["end_date",{"_index":195,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":145,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":2341,"title":{},"body":{"todo.html":{}}}],["englisch",{"_index":663,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycomponents",{"_index":575,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enum",{"_index":141,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["enumerations",{"_index":2314,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googlemapsapikey",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.graphqlurl",{"_index":1182,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["environment.graphqlwsurl",{"_index":1197,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.production",{"_index":1219,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":1172,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["err",{"_index":891,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":115,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["error('empty",{"_index":2064,"title":{},"body":{"injectables/TeamService.html":{}}}],["errorcode",{"_index":1999,"title":{},"body":{"components/TableComponent.html":{}}}],["errors.enter_valid_email",{"_index":411,"title":{},"body":{"components/AddUserComponent.html":{}}}],["errors.enter_valid_password",{"_index":414,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{}}}],["errors.password_token_invalid",{"_index":1867,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pitch_exist",{"_index":1079,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["errors.username_password_wrong",{"_index":911,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["event",{"_index":191,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event($id",{"_index":314,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["event(id",{"_index":315,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["event.fragment",{"_index":192,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["event.index",{"_index":1503,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["event.occurred_at",{"_index":1144,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.type",{"_index":1145,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.value",{"_index":118,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{}}}],["eventcomponent",{"_index":2345,"title":{},"body":{"todo.html":{}}}],["eventemitter",{"_index":1621,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventfragment",{"_index":269,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventgql",{"_index":312,"title":{"injectables/EventGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["events",{"_index":595,"title":{},"body":{"modules/AdminModule.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{}}}],["events'},{'name",{"_index":450,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["events.component",{"_index":1153,"title":{},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{}}}],["events.component.css",{"_index":1131,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1132,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":449,"title":{"components/EventsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsgql",{"_index":1228,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["eventsmodule",{"_index":569,"title":{"modules/EventsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsroutingmodule",{"_index":1150,"title":{"modules/EventsRoutingModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["everything",{"_index":2046,"title":{},"body":{"injectables/TeamService.html":{}}}],["example",{"_index":2048,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":2270,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["exports",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["extends",{"_index":275,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["f00",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":883,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["filter_list",{"_index":1800,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteractive",{"_index":1742,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitches",{"_index":974,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filtermatchdays",{"_index":1736,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatchdays(matchdays",{"_index":1744,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches",{"_index":1737,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches(matches",{"_index":1746,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filterstate",{"_index":1947,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["finale",{"_index":2170,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["first_name",{"_index":179,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["first_name_required",{"_index":412,"title":{},"body":{"components/AddUserComponent.html":{}}}],["firstname",{"_index":348,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["flex",{"_index":1804,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["flexlayoutmodule",{"_index":730,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["forgot_password",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuilder",{"_index":993,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":370,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{}}}],["formgroup",{"_index":1012,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodule",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["forward(operation).map(response",{"_index":1183,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["fragment",{"_index":219,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fragmentname",{"_index":1724,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["fragments",{"_index":257,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["fromtooffset",{"_index":1429,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["full",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":2316,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":1599,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1591,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["generator",{"_index":2274,"title":{},"body":{"dependencies.html":{}}}],["genrounds",{"_index":1553,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["get_currentseason",{"_index":1927,"title":{},"body":{"injectables/SeasonService.html":{}}}],["getaccesstoken",{"_index":840,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcachekey",{"_index":1214,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getcurrentlang",{"_index":1281,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteractive",{"_index":1768,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["gethideplayed",{"_index":1756,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":844,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthenticated",{"_index":842,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmaindefinition",{"_index":1166,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getmaindefinition(query",{"_index":1207,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getmatchdaylength",{"_index":1691,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getranking",{"_index":1990,"title":{},"body":{"components/TableComponent.html":{}}}],["getround(round[0].match_day_id).end_date",{"_index":2173,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).number",{"_index":2171,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).start_date",{"_index":2172,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getselectedmatchdayid",{"_index":1760,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getselectedteamid",{"_index":1764,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getsubscriptionclient",{"_index":1235,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["getting",{"_index":2322,"title":{"index.html":{},"todo.html":{}},"body":{}}],["gettournamentid",{"_index":2132,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getwinner",{"_index":2120,"title":{},"body":{"components/TournamentComponent.html":{}}}],["googelmapsscript",{"_index":648,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplete",{"_index":1014,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeelement",{"_index":1042,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["googlemapsapikey",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapsjs",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["gql",{"_index":130,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":2331,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":255,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["graphql.module",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule",{"_index":719,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlsubscriptionservice",{"_index":615,"title":{"injectables/GraphqlSubscriptionService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlurl",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlwsurl",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphsubscription",{"_index":614,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":677,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":544,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":546,"title":{},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_score",{"_index":155,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team",{"_index":221,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team_id",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["guestscore",{"_index":1244,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["guestteam",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["halbfinale",{"_index":2169,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerjs",{"_index":2282,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatches",{"_index":1738,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["headers",{"_index":797,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('authorization",{"_index":1195,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headers.get('authorization",{"_index":1194,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headers.get('x",{"_index":1189,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["height",{"_index":668,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["hermes",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["hi",{"_index":1864,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played_matches",{"_index":1801,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplayed",{"_index":1614,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplayed",{"_index":1739,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideplayed(value",{"_index":1771,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["history",{"_index":2346,"title":{},"body":{"todo.html":{}}}],["home_score",{"_index":154,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team",{"_index":220,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team_id",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["homescore",{"_index":1243,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["hometeam",{"_index":46,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["html",{"_index":422,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["http",{"_index":1164,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["http://192.168.178.23/api",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http:/192.168.178.23/api/graphql",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":735,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":734,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":792,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":788,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":848,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["httpheaders().set('authorization",{"_index":888,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpinterceptor",{"_index":791,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httplink",{"_index":1162,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["httplinkmodule",{"_index":1161,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httprequest",{"_index":786,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://manager.wildeligabremen.de/api",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://manager.wildeligabremen.de/api/graphql",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2327,"title":{},"body":{"index.html":{}}}],["i18n/de",{"_index":1283,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":1284,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18service",{"_index":29,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactory",{"_index":753,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provider",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icons",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":111,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":2339,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["implenet",{"_index":2343,"title":{},"body":{"todo.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":576,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["init",{"_index":1271,"title":{},"body":{"injectables/I18Service.html":{}}}],["inject",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SnackbarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["inject(mat_snack_bar_data",{"_index":1381,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectable",{"_index":123,"title":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":125,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"overview.html":{}}}],["inmemory",{"_index":1178,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":1176,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["input",{"_index":930,"title":{},"body":{"components/ContactPersonComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputs",{"_index":927,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputsize",{"_index":1107,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["inset",{"_index":691,"title":{},"body":{"components/AppComponent.html":{}}}],["int",{"_index":277,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["intercept",{"_index":783,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":785,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":780,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":781,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{},"overview.html":{}}}],["introspection",{"_index":2278,"title":{},"body":{"dependencies.html":{}}}],["introspectionresultdata",{"_index":1382,"title":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipossiblekickoffs",{"_index":1294,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["isadmin",{"_index":811,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isauthenticated",{"_index":810,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isemailvalidorempty",{"_index":2073,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":2076,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isloading",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{}}}],["ismatchplayed",{"_index":1703,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1708,"title":{},"body":{"injectables/MatchService.html":{}}}],["isnackbardata",{"_index":1376,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnumber",{"_index":1609,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(val",{"_index":1622,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":812,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":802,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isvalidresult",{"_index":1704,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(score",{"_index":1710,"title":{},"body":{"injectables/MatchService.html":{}}}],["iteamcanplayatdate",{"_index":1300,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["j",{"_index":1372,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jquery",{"_index":2284,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":2286,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoffs",{"_index":1331,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(localstorage.getitem('access_token",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.parse(localstorage.getitem('hide_played",{"_index":1770,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["json.parse(localstorage.getitem('selected_season",{"_index":1932,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.parse(message.data.redisevent.payload",{"_index":1262,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["json.stringify(season",{"_index":1935,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.stringify(value",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["karma",{"_index":2288,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":1217,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["kickoff",{"_index":159,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["kickoffset",{"_index":1114,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(event",{"_index":1116,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftime",{"_index":1298,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["kind",{"_index":1206,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["konnte",{"_index":1354,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["label",{"_index":225,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/RoundTeam.html":{}}}],["language",{"_index":661,"title":{},"body":{"components/AppComponent.html":{}}}],["last_name",{"_index":180,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["last_name_required",{"_index":413,"title":{},"body":{"components/AddUserComponent.html":{}}}],["last_updated_at",{"_index":2030,"title":{},"body":{"components/TableComponent.html":{}}}],["lastname",{"_index":349,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["latestevent",{"_index":193,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latestevent($start_date",{"_index":317,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventgql",{"_index":316,"title":{"injectables/LatestEventGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["latestevents",{"_index":196,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["latestevents(start_date",{"_index":318,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventsgql",{"_index":1135,"title":{},"body":{"components/EventsComponent.html":{}}}],["launcher",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":1198,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["led",{"_index":666,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":421,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["length",{"_index":1452,"title":{},"body":{"components/ManageseasonComponent.html":{},"modules/MaterialModule.html":{}}}],["libraries=places",{"_index":644,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2324,"title":{},"body":{"index.html":{}}}],["line",{"_index":1829,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1828,"title":{},"body":{"modules/MaterialModule.html":{}}}],["link",{"_index":1163,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["list",{"_index":484,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["list.component",{"_index":593,"title":{},"body":{"modules/AdminModule.html":{}}}],["list.component.css",{"_index":2187,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":2188,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2186,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":2190,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:19",{"_index":2191,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.filter(x",{"_index":1338,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list/user",{"_index":592,"title":{},"body":{"modules/AdminModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list[0",{"_index":1340,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":1350,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":1342,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["literal",{"_index":1385,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"miscellaneous/typealiases.html":{}}}],["load/save",{"_index":2045,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadalltournaments",{"_index":1554,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadchildren",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["loaduser",{"_index":803,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localede",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage.getitem('lang",{"_index":1289,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.getitem('selected_matchday",{"_index":1776,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.getitem('selected_team",{"_index":1777,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.getitem('selected_tournament",{"_index":2136,"title":{},"body":{"components/TournamentComponent.html":{}}}],["localstorage.setitem('access_token",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localstorage.setitem('hide_played",{"_index":1772,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('lang",{"_index":1292,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.setitem('selected_matchday",{"_index":1775,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_season",{"_index":1934,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage.setitem('selected_team",{"_index":1779,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_tournament",{"_index":2138,"title":{},"body":{"components/TournamentComponent.html":{}}}],["locatematch",{"_index":160,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch($match_id",{"_index":282,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(match_id",{"_index":283,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(matchid",{"_index":1713,"title":{},"body":{"injectables/MatchService.html":{}}}],["locatematchgql",{"_index":281,"title":{"injectables/LocateMatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["locatematchqgl",{"_index":1706,"title":{},"body":{"injectables/MatchService.html":{}}}],["location",{"_index":1893,"title":{},"body":{"components/PitchesComponent.html":{}}}],["location_latitude",{"_index":227,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_longitude",{"_index":226,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_off",{"_index":1070,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":1074,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["login",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":452,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["login.component.css",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":804,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":828,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["logincomponent",{"_index":451,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":829,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":805,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["losses",{"_index":244,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":2078,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["manager",{"_index":2325,"title":{},"body":{"index.html":{}}}],["manageseason",{"_index":1309,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'name",{"_index":454,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageseason.component.css",{"_index":1426,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseason.component.html",{"_index":1427,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseason/manageseason.component",{"_index":582,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":586,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasonchanged",{"_index":1436,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseasonchanged(event",{"_index":1456,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseasoncomponent",{"_index":453,"title":{"components/ManageseasonComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageseasonid",{"_index":1430,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["managetournament",{"_index":1542,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'name",{"_index":456,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managetournament.component.css",{"_index":1543,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1544,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.component",{"_index":585,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.component",{"_index":584,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcomponent",{"_index":455,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentid",{"_index":1546,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentroundcount",{"_index":1547,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentrounds",{"_index":1548,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageusers",{"_index":1601,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'name",{"_index":458,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageusers.component.css",{"_index":1602,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1603,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/add",{"_index":589,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/manageusers.component",{"_index":583,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/user",{"_index":591,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscomponent",{"_index":457,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["map(({data",{"_index":1884,"title":{},"body":{"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["map(value",{"_index":1028,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(x",{"_index":1032,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["margin",{"_index":672,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["mat_snack_bar_data",{"_index":1378,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":744,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":1833,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1819,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":197,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["match'},{'name",{"_index":460,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["match($id",{"_index":320,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["match(id",{"_index":321,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["match.component.css",{"_index":1607,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1608,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.fragment",{"_index":198,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["match.guest_score",{"_index":1653,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":2155,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.id).canplay",{"_index":1339,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team.name",{"_index":1069,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":2160,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_score",{"_index":1654,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":2154,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.id).canplay",{"_index":1337,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team.name",{"_index":1068,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":2162,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":1125,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":1341,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":1073,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1700,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match:${matchid",{"_index":1725,"title":{},"body":{"injectables/MatchService.html":{}}}],["match_days",{"_index":231,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["match_id",{"_index":153,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchcomponent",{"_index":459,"title":{"components/MatchComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchday",{"_index":223,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["matchday.end_date",{"_index":1508,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.fragment",{"_index":233,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchday.from",{"_index":1537,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchday.matches.foreach",{"_index":1332,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.number",{"_index":1539,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_date",{"_index":1507,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.to",{"_index":1538,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchdayfragment",{"_index":263,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchdaylength",{"_index":1313,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdays",{"_index":232,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchdays.filter(x",{"_index":1784,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcher",{"_index":2277,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":224,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches.filter(x",{"_index":1787,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matches.foreach",{"_index":1365,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchesgql",{"_index":1735,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchesinseason",{"_index":1431,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchesql",{"_index":1442,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matcheventpayload",{"_index":1241,"title":{"interfaces/MatchEventPayload.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["matchfragment",{"_index":262,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchgql",{"_index":319,"title":{"injectables/MatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchid",{"_index":1242,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matching",{"_index":121,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchkickoff",{"_index":1113,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"injectables/MatchService.html":{}}}],["matchkickoff.toisostring",{"_index":1728,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchplan",{"_index":199,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan'},{'name",{"_index":462,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["matchplan($id",{"_index":323,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan.component",{"_index":1812,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1733,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1734,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.season",{"_index":1310,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchplancomponent",{"_index":461,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplangql",{"_index":322,"title":{"injectables/MatchPlanGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchplanmodule",{"_index":1806,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodule",{"_index":1810,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchqgl",{"_index":1229,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["matchschedulingcomponent",{"_index":463,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservice",{"_index":990,"title":{"injectables/MatchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"coverage.html":{}}}],["matchupdated",{"_index":1616,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matchupdated(matchid",{"_index":1749,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matchviewmodel",{"_index":2158,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matdatepickermodule",{"_index":1837,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":493,"title":{},"body":{"components/AddteamComponent.html":{},"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["matdialogmodule",{"_index":1830,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["matdividermodule",{"_index":1823,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["material.module",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodule",{"_index":720,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1589,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1373,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodule",{"_index":1821,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1832,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1836,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1835,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":1838,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":1841,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1844,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectchange",{"_index":367,"title":{},"body":{"components/AddUserComponent.html":{},"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodule",{"_index":1825,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":1817,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1842,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1843,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":356,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["matsnackbarmodule",{"_index":1840,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":1831,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabchangeevent",{"_index":1462,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["mattabsmodule",{"_index":1834,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1815,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1839,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maybe",{"_index":138,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["memberof",{"_index":2062,"title":{},"body":{"injectables/TeamService.html":{}}}],["menu.admin",{"_index":656,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contacts",{"_index":654,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":652,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.table",{"_index":651,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tournament",{"_index":653,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":400,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["message.data",{"_index":1256,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["message.data.redisevent.type.split",{"_index":1260,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["metadata",{"_index":343,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["methods",{"_index":351,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["minwidth",{"_index":507,"title":{},"body":{"components/AddteamComponent.html":{}}}],["miscellaneous",{"_index":2313,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":557,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":559,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1303,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentjs",{"_index":1302,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":1343,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["msgtype",{"_index":1259,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["msgtype[0",{"_index":1263,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["mt.number",{"_index":1598,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["multi",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["mutation",{"_index":131,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":170,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":151,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["nbsp",{"_index":1799,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1655,"title":{},"body":{"components/MatchComponent.html":{}}}],["network",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{}}}],["new",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["new_kickoff_time",{"_index":1127,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_name",{"_index":183,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["new_password",{"_index":167,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["new_pitch",{"_index":1075,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":1082,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_label",{"_index":1078,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newelement",{"_index":1317,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchdays",{"_index":1432,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["newmatchpitch",{"_index":975,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.value.label",{"_index":1076,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newname",{"_index":1907,"title":{},"body":{"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{}}}],["newpassword",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'name",{"_index":466,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["newpassword.component",{"_index":1875,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1846,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1847,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcomponent",{"_index":465,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodule",{"_index":1868,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodule",{"_index":1872,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":976,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchformcontrol",{"_index":977,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchlabelexist",{"_index":978,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplace",{"_index":1025,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplaceformgroup",{"_index":979,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newroundplandatefrom",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newroundplandateto",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newwinner(match",{"_index":2157,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":787,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["next.handle(req",{"_index":795,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req.clone",{"_index":796,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":577,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchanges",{"_index":1315,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1355,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":937,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":1071,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1659,"title":{},"body":{"components/MatchComponent.html":{}}}],["no_tournament_rounds_yet",{"_index":2164,"title":{},"body":{"components/TournamentComponent.html":{}}}],["nswag",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":139,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":34,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["occurred_at",{"_index":236,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["occurredat",{"_index":1387,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["offset",{"_index":1319,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old",{"_index":2348,"title":{},"body":{"todo.html":{}}}],["old_kickoff_time",{"_index":1124,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":1072,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldmatchdays",{"_index":1453,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["oldpassword",{"_index":820,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":896,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchanges",{"_index":1301,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":352,"title":{},"body":{"components/AddUserComponent.html":{}}}],["onchangeteamselect(event",{"_index":366,"title":{},"body":{"components/AddUserComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["onlangselect",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["onpitchselect",{"_index":985,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":1001,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclicked",{"_index":986,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["onshowcreatenewpitch",{"_index":987,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["ontournamentselected",{"_index":1555,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openchangepassworddialog",{"_index":612,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmodal",{"_index":1610,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog",{"_index":1611,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1612,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1613,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["openrenameteamdialog",{"_index":492,"title":{},"body":{"components/AddteamComponent.html":{}}}],["openrenameteamdialog(team",{"_index":499,"title":{},"body":{"components/AddteamComponent.html":{}}}],["operation",{"_index":1205,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operation.getcontext",{"_index":1184,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operationdefinition",{"_index":1208,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["optional",{"_index":361,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":573,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1635,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["outputs",{"_index":1615,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2333,"title":{"overview.html":{}},"body":{"overview.html":{},"todo.html":{}}}],["owldatetimeintl",{"_index":705,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodule",{"_index":1976,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodule",{"_index":1977,"title":{},"body":{"modules/SharedModule.html":{}}}],["ownservice",{"_index":2320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ownservice.subscriptionclient",{"_index":1196,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["p.label",{"_index":1063,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["package",{"_index":2233,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":402,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["param",{"_index":2061,"title":{},"body":{"injectables/TeamService.html":{}}}],["parameters",{"_index":360,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1856,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["params['token",{"_index":1857,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["passt",{"_index":1359,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":188,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["password_forgot_text",{"_index":1866,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_required",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordchange",{"_index":166,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchange($new_password",{"_index":288,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchangegql",{"_index":287,"title":{"injectables/PasswordChangeGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["passwordforgot",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordreset",{"_index":162,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordreset($email",{"_index":285,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordresetgql",{"_index":284,"title":{"injectables/PasswordResetGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["path",{"_index":601,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1261,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{}}}],["payload.matchid",{"_index":1265,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["penalties",{"_index":239,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["perm_contact_calendar",{"_index":1660,"title":{},"body":{"components/MatchComponent.html":{}}}],["persist",{"_index":1180,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["persistcache",{"_index":1179,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["person",{"_index":660,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'name",{"_index":442,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["person.component",{"_index":1979,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":925,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":926,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts",{"_index":924,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":928,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":929,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":923,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":181,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pitch",{"_index":222,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pitch.fragment",{"_index":204,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["pitch.id",{"_index":1731,"title":{},"body":{"injectables/MatchService.html":{}}}],["pitch.label",{"_index":1037,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["pitch_contact",{"_index":1894,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":161,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["pitch_required",{"_index":1080,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitches",{"_index":202,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/ContactlistModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{}}}],["pitches'},{'name",{"_index":468,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["pitches.component.css",{"_index":1888,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":1889,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitchescomponent",{"_index":467,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchesgql",{"_index":325,"title":{"injectables/PitchesGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["pitchesqgl",{"_index":1882,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitchexist",{"_index":1065,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchfragment",{"_index":261,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pitchid",{"_index":1057,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid.id",{"_index":1059,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchservice",{"_index":989,"title":{"injectables/PitchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["place",{"_index":1044,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lat",{"_index":1047,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lng",{"_index":1049,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["places",{"_index":980,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["plan_date_from",{"_index":535,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":537,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["points",{"_index":247,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["popper.js",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_goals",{"_index":2028,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draws",{"_index":2025,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.losses",{"_index":2026,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.matches",{"_index":2023,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.number",{"_index":2021,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.points",{"_index":2029,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_goals",{"_index":2027,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.team.name",{"_index":2022,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.wins",{"_index":2024,"title":{},"body":{"components/TableComponent.html":{}}}],["positions",{"_index":238,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["possiblekickoffs",{"_index":1311,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":1334,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possibletypes",{"_index":1390,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["preparation",{"_index":143,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["production",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":144,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["provide",{"_index":710,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["providedin",{"_index":272,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["provider",{"_index":2321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.init",{"_index":750,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["public",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["query",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["queueing",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["radius",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["ranking",{"_index":205,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ranking($id",{"_index":327,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["ranking.fragment",{"_index":206,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["ranking.updated_at",{"_index":2031,"title":{},"body":{"components/TableComponent.html":{}}}],["rankingfragment",{"_index":270,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rankinggql",{"_index":326,"title":{"injectables/RankingGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rankingpenalty",{"_index":248,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{}}}],["rankingposition",{"_index":240,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingqgl",{"_index":1227,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/TableComponent.html":{}}}],["reactiveformsmodule",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["reason",{"_index":249,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["reconnect",{"_index":1199,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["reconnectionattempts",{"_index":1200,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["red",{"_index":697,"title":{},"body":{"components/AppComponent.html":{}}}],["redirectto",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redis",{"_index":1232,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["redisevent",{"_index":1386,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["rediseventgql",{"_index":1226,"title":{"injectables/RedisEventGQL.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{}}}],["refetch",{"_index":1795,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["refetchqueries",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["refresh",{"_index":1991,"title":{},"body":{"components/TableComponent.html":{}}}],["registerlocaledata",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(new",{"_index":2063,"title":{},"body":{"injectables/TeamService.html":{}}}],["related",{"_index":2047,"title":{},"body":{"injectables/TeamService.html":{}}}],["remove",{"_index":1697,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_eye",{"_index":910,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1672,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":1322,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removeteam",{"_index":511,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(tupel",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["removeteamfromseason",{"_index":172,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason($season_id",{"_index":294,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(season_id",{"_index":295,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(teamid",{"_index":1459,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["removeteamfromseasongql",{"_index":293,"title":{"injectables/RemoveTeamFromSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["removeteamgql",{"_index":1443,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["rename",{"_index":470,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["renameteam",{"_index":182,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam($team_id",{"_index":306,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(newname",{"_index":1905,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["renameteam(team_id",{"_index":307,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(teamid",{"_index":2056,"title":{},"body":{"injectables/TeamService.html":{}}}],["renameteamcomponent",{"_index":469,"title":{"components/RenameTeamComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renameteamgql",{"_index":305,"title":{"injectables/RenameTeamGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["req",{"_index":790,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('authorization",{"_index":794,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":798,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["require",{"_index":2231,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["reschedulematchday",{"_index":2340,"title":{},"body":{"todo.html":{}}}],["reset",{"_index":572,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resetpasswordqgl",{"_index":817,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["resolve",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(result.data.authenticateduser",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["resolve(true",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response",{"_index":890,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["response.errors",{"_index":1185,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["response.errors.some(x",{"_index":1186,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["result",{"_index":120,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.data.authenticateduser",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["result.data.season",{"_index":2011,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.season.ranking",{"_index":2012,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.tournament.rounds",{"_index":1584,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.length",{"_index":1586,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.errors",{"_index":2008,"title":{},"body":{"components/TableComponent.html":{}}}],["result.ts",{"_index":1392,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":122,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":555,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["returns",{"_index":363,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["rgba(0",{"_index":687,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":700,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":676,"title":{},"body":{"components/AppComponent.html":{}}}],["rimraf",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":189,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":273,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["root'},{'name",{"_index":434,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["round.number",{"_index":2168,"title":{},"body":{"components/TournamentComponent.html":{}}}],["rounds",{"_index":235,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roundteam",{"_index":45,"title":{"interfaces/RoundTeam.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["roundteams",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["router",{"_index":814,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["routermodule",{"_index":599,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":602,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":779,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2097,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routes",{"_index":598,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":579,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":597,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxjs",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["s.state",{"_index":1961,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["save",{"_index":964,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{}}}],["savecontact",{"_index":2074,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":2080,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematches",{"_index":1360,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematch",{"_index":158,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch($match_id",{"_index":279,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(match_id",{"_index":280,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(matchid",{"_index":1715,"title":{},"body":{"injectables/MatchService.html":{}}}],["schedulematches",{"_index":1326,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchgql",{"_index":278,"title":{"injectables/ScheduleMatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["scheduling",{"_index":1306,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling'},{'name",{"_index":464,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["scheduling.component",{"_index":588,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":1308,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":1307,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts",{"_index":1296,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:116",{"_index":1682,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:131",{"_index":1684,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:31",{"_index":1676,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1689,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1685,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1687,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1690,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1692,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1675,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1688,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1686,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:48",{"_index":1680,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:60",{"_index":1679,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1678,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1677,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:80",{"_index":1681,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:84",{"_index":1683,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":587,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1712,"title":{},"body":{"injectables/MatchService.html":{}}}],["scored_goals",{"_index":245,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1642,"title":{},"body":{"components/MatchComponent.html":{}}}],["season",{"_index":200,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["season(id",{"_index":324,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["season.fragment",{"_index":201,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["season.match_days",{"_index":1505,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season.match_days.map((matchday",{"_index":1506,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season.name",{"_index":1530,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["season.service",{"_index":1240,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["season.state",{"_index":1531,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season_id",{"_index":135,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonchanged",{"_index":1948,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser",{"_index":1943,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'name",{"_index":473,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["seasonchooser.component.css",{"_index":1944,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":1945,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoosercomponent",{"_index":472,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompare",{"_index":1915,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":1921,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonfragment",{"_index":264,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonlist",{"_index":1433,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["seasonname",{"_index":1448,"title":{},"body":{"components/ManageseasonComponent.html":{},"injectables/SeasonService.html":{}}}],["seasons",{"_index":2349,"title":{},"body":{"todo.html":{}}}],["seasonservice",{"_index":1230,"title":{"injectables/SeasonService.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"components/ManageseasonComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonstate",{"_index":142,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["seasonstate.progress",{"_index":1950,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["selectedmatchdayid",{"_index":1740,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedmatchdayid(value",{"_index":1774,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedtabchanged",{"_index":1437,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["selectedtabchanged(event",{"_index":1461,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["selectedteamid",{"_index":1741,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid(value",{"_index":1778,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selector",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["sendmatchdays",{"_index":1438,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["sendpasswordmail",{"_index":806,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sendpasswordmail(email",{"_index":833,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["sendpasswordresetmail",{"_index":165,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["sendpasswordresetmail(email",{"_index":286,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["sendusermail",{"_index":353,"title":{},"body":{"components/AddUserComponent.html":{}}}],["server",{"_index":2281,"title":{},"body":{"dependencies.html":{}}}],["serverurl",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":2044,"title":{},"body":{"injectables/TeamService.html":{}}}],["services",{"_index":271,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["services/authentication.service",{"_index":380,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/i18.service",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.service",{"_index":1021,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["services/pitch.service",{"_index":1020,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.service",{"_index":1480,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.service",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["set",{"_index":1247,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["set('authorization",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["set_currentseason(season",{"_index":1929,"title":{},"body":{"injectables/SeasonService.html":{}}}],["setaccesstoken",{"_index":807,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setaccesstoken(value",{"_index":835,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["setcontext",{"_index":1165,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":1192,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["sethideplayed(value",{"_index":1758,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setmatchdayfromdate",{"_index":1439,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdayfromdate(index",{"_index":1465,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdaytodate",{"_index":1440,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdaytodate(index",{"_index":1467,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setplandatefrom",{"_index":512,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(event",{"_index":117,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setplandateto",{"_index":513,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(event",{"_index":119,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setselectedmatchdayid(value",{"_index":1762,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setselectedteamid(value",{"_index":1766,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setsubscriptionclient(value",{"_index":1237,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["settournamentid(t",{"_index":2134,"title":{},"body":{"components/TournamentComponent.html":{}}}],["settournamentround",{"_index":186,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["shadow",{"_index":686,"title":{},"body":{"components/AppComponent.html":{}}}],["shared.module",{"_index":580,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["shared/snackbar/snackbar.component",{"_index":382,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["sharedmodule",{"_index":570,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":2347,"title":{},"body":{"todo.html":{}}}],["showcreatenewpitch",{"_index":981,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["showerrorsnackbar",{"_index":1992,"title":{},"body":{"components/TableComponent.html":{}}}],["showerrorsnackbar(errorcode",{"_index":1997,"title":{},"body":{"components/TableComponent.html":{}}}],["shuffle",{"_index":1673,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1369,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":355,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["snackbar'},{'name",{"_index":474,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["snackbar.component.css",{"_index":1380,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1379,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.component",{"_index":1097,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{}}}],["snackbarcomponent",{"_index":381,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort_index",{"_index":241,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["spacer",{"_index":1803,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["spec\\.ts",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":1353,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":1352,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["split",{"_index":1170,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/.../app.module.ts",{"_index":2318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.app.local.ts",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.ts",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.module.ts",{"_index":2317,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":2315,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphqlsubs.ts",{"_index":2353,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../introspection",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/graphql",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["src/api/graphql.ts",{"_index":126,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphql.ts:1016",{"_index":1911,"title":{},"body":{"injectables/RenameTeamGQL.html":{}}}],["src/api/graphql.ts:1029",{"_index":955,"title":{},"body":{"injectables/CreateTournamentGQL.html":{}}}],["src/api/graphql.ts:1042",{"_index":956,"title":{},"body":{"injectables/CreateTournamentRoundGQL.html":{}}}],["src/api/graphql.ts:1065",{"_index":957,"title":{},"body":{"injectables/CreateUserGQL.html":{}}}],["src/api/graphql.ts:1091",{"_index":1129,"title":{},"body":{"injectables/EventGQL.html":{}}}],["src/api/graphql.ts:1108",{"_index":1393,"title":{},"body":{"injectables/LatestEventGQL.html":{}}}],["src/api/graphql.ts:1122",{"_index":1669,"title":{},"body":{"injectables/MatchGQL.html":{}}}],["src/api/graphql.ts:1139",{"_index":1670,"title":{},"body":{"injectables/MatchPlanGQL.html":{}}}],["src/api/graphql.ts:1153",{"_index":1895,"title":{},"body":{"injectables/PitchesGQL.html":{}}}],["src/api/graphql.ts:1167",{"_index":1896,"title":{},"body":{"injectables/RankingGQL.html":{}}}],["src/api/graphql.ts:1184",{"_index":603,"title":{},"body":{"injectables/AllSeasonsListGQL.html":{}}}],["src/api/graphql.ts:1201",{"_index":604,"title":{},"body":{"injectables/AllTeamsGQL.html":{}}}],["src/api/graphql.ts:1218",{"_index":605,"title":{},"body":{"injectables/AllTournamentListGQL.html":{}}}],["src/api/graphql.ts:1235",{"_index":2174,"title":{},"body":{"injectables/TournamentGQL.html":{}}}],["src/api/graphql.ts:1249",{"_index":2184,"title":{},"body":{"injectables/UserGQL.html":{}}}],["src/api/graphql.ts:1266",{"_index":606,"title":{},"body":{"injectables/AllUsersGQL.html":{}}}],["src/api/graphql.ts:840",{"_index":1986,"title":{},"body":{"injectables/SubmitResultGQL.html":{}}}],["src/api/graphql.ts:861",{"_index":1912,"title":{},"body":{"injectables/ScheduleMatchGQL.html":{}}}],["src/api/graphql.ts:874",{"_index":1394,"title":{},"body":{"injectables/LocateMatchGQL.html":{}}}],["src/api/graphql.ts:887",{"_index":1878,"title":{},"body":{"injectables/PasswordResetGQL.html":{}}}],["src/api/graphql.ts:900",{"_index":1877,"title":{},"body":{"injectables/PasswordChangeGQL.html":{}}}],["src/api/graphql.ts:913",{"_index":954,"title":{},"body":{"injectables/CreateSeasonGQL.html":{}}}],["src/api/graphql.ts:926",{"_index":137,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{}}}],["src/api/graphql.ts:939",{"_index":1898,"title":{},"body":{"injectables/RemoveTeamFromSeasonGQL.html":{}}}],["src/api/graphql.ts:952",{"_index":953,"title":{},"body":{"injectables/CreateMatchesForSeasonGQL.html":{}}}],["src/api/graphql.ts:968",{"_index":1985,"title":{},"body":{"injectables/StartSeasonGQL.html":{}}}],["src/api/graphql.ts:978",{"_index":2116,"title":{},"body":{"injectables/TeamsGQL.html":{}}}],["src/api/graphql.ts:991",{"_index":2183,"title":{},"body":{"injectables/UpdateTeamContactGQL.html":{}}}],["src/api/graphqlsubs",{"_index":1239,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["src/api/graphqlsubs.ts",{"_index":1383,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphqlsubs.ts:52",{"_index":1897,"title":{},"body":{"injectables/RedisEventGQL.html":{}}}],["src/api/introspection",{"_index":1391,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":703,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["src/app/app.component.ts",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":722,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.interceptor.ts",{"_index":782,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth.interceptor.ts:12",{"_index":789,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:8",{"_index":784,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts",{"_index":487,"title":{},"body":{"components/AddteamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:12",{"_index":494,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:15",{"_index":502,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:16",{"_index":501,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:21",{"_index":498,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:24",{"_index":496,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:32",{"_index":500,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/rename",{"_index":1899,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin",{"_index":596,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":539,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":543,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":542,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.ts",{"_index":547,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":552,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":553,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":551,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.ts",{"_index":574,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/events/events",{"_index":1155,"title":{},"body":{"modules/EventsRoutingModule.html":{}}}],["src/app/components/admin/events/events.component.ts",{"_index":1130,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/events/events.component.ts:15",{"_index":1134,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:19",{"_index":1137,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:22",{"_index":1136,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.module.ts",{"_index":1151,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts",{"_index":1425,"title":{},"body":{"components/ManageseasonComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:120",{"_index":1460,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:143",{"_index":1463,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:153",{"_index":1454,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:168",{"_index":1464,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:202",{"_index":1469,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:23",{"_index":1475,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:233",{"_index":1466,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:240",{"_index":1468,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:25",{"_index":1476,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:26",{"_index":1472,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:27",{"_index":1471,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:29",{"_index":1477,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:30",{"_index":1474,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:31",{"_index":1445,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:34",{"_index":1478,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:35",{"_index":1479,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:36",{"_index":1473,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:72",{"_index":1458,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:75",{"_index":1447,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:83",{"_index":1457,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:97",{"_index":1450,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":1295,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts",{"_index":6,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25",{"_index":527,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":526,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":522,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:29",{"_index":529,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":528,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":515,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:35",{"_index":525,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":530,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:42",{"_index":524,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:51",{"_index":518,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:55",{"_index":516,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:66",{"_index":519,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:70",{"_index":517,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:95",{"_index":520,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:99",{"_index":521,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts",{"_index":1541,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":1572,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":1567,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":1568,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":1571,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:20",{"_index":1565,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:21",{"_index":1569,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:22",{"_index":1557,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:25",{"_index":1566,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1563,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:35",{"_index":1562,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:41",{"_index":1559,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:53",{"_index":1564,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:72",{"_index":1561,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:83",{"_index":1560,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/add",{"_index":340,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts",{"_index":1600,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:14",{"_index":1605,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:8",{"_index":1604,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/user",{"_index":2185,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts",{"_index":893,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":901,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":902,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":897,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":900,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":899,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":898,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":952,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.ts",{"_index":938,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":943,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":942,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.ts",{"_index":949,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts",{"_index":1887,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":1892,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:15",{"_index":1891,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:9",{"_index":1890,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts",{"_index":2109,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":2114,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:15",{"_index":2113,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:9",{"_index":2112,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1813,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.ts",{"_index":1732,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:15",{"_index":1753,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:17",{"_index":1757,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1759,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1763,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:28",{"_index":1761,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:32",{"_index":1765,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:36",{"_index":1767,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:40",{"_index":1769,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:42",{"_index":1743,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:45",{"_index":1755,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:46",{"_index":1752,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:47",{"_index":1754,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:52",{"_index":1751,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:58",{"_index":1745,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:64",{"_index":1747,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:72",{"_index":1748,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:90",{"_index":1750,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.ts",{"_index":1811,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1876,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.ts",{"_index":1845,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:16",{"_index":1854,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:17",{"_index":1850,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:20",{"_index":1853,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:31",{"_index":1851,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:47",{"_index":1852,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.ts",{"_index":1873,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/contact",{"_index":922,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts",{"_index":913,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:10",{"_index":917,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:13",{"_index":919,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:14",{"_index":920,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:16",{"_index":918,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts",{"_index":969,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:17",{"_index":1008,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:18",{"_index":1006,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":1016,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:21",{"_index":1009,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:22",{"_index":1010,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:23",{"_index":1013,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:24",{"_index":1011,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:26",{"_index":1015,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:27",{"_index":994,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:30",{"_index":1007,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:43",{"_index":1000,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:55",{"_index":998,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:59",{"_index":1002,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:63",{"_index":1003,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:72",{"_index":1004,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:82",{"_index":996,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:97",{"_index":995,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts",{"_index":1086,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:15",{"_index":1093,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:16",{"_index":1090,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:19",{"_index":1094,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:22",{"_index":1095,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:23",{"_index":1096,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:29",{"_index":1091,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:33",{"_index":1092,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts",{"_index":1109,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":1115,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":1121,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":1120,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":1118,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":1117,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":1119,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.ts",{"_index":1606,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:107",{"_index":1623,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:21",{"_index":1619,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:22",{"_index":1620,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1618,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1617,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:28",{"_index":1630,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1629,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1631,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1633,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1632,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1634,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:36",{"_index":1624,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:39",{"_index":1627,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:59",{"_index":1626,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:78",{"_index":1628,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:97",{"_index":1625,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts",{"_index":1942,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":1951,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:15",{"_index":1955,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":1956,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:17",{"_index":1949,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:20",{"_index":1957,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:24",{"_index":1954,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:37",{"_index":1953,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component",{"_index":2004,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts",{"_index":1377,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:12",{"_index":1981,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:15",{"_index":1983,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:19",{"_index":1982,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/table",{"_index":2041,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.ts",{"_index":1987,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:18",{"_index":2001,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:19",{"_index":1993,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:22",{"_index":2002,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":2000,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:24",{"_index":2003,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:30",{"_index":1995,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:36",{"_index":1994,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:56",{"_index":1996,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:60",{"_index":1998,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.ts",{"_index":2039,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":2108,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts",{"_index":2069,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:17",{"_index":2082,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:18",{"_index":2075,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":2084,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":2083,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:24",{"_index":2085,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:29",{"_index":2079,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:32",{"_index":2081,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:65",{"_index":2077,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts",{"_index":2093,"title":{},"body":{"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":2099,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":2098,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":2094,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.ts",{"_index":2106,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tournament",{"_index":2182,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.ts",{"_index":2117,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/tournament/tournament.component.ts:14",{"_index":2131,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:15",{"_index":2130,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:17",{"_index":2133,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:20",{"_index":2135,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:22",{"_index":2124,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:25",{"_index":2129,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":2127,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:39",{"_index":2126,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:47",{"_index":2128,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:73",{"_index":2125,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.ts",{"_index":2180,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/graphql.module.ts",{"_index":1158,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/material.module.ts",{"_index":1814,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":800,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:100",{"_index":825,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:104",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:127",{"_index":834,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:22",{"_index":839,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:24",{"_index":837,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:28",{"_index":841,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:33",{"_index":843,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:35",{"_index":818,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:45",{"_index":830,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:71",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:86",{"_index":832,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":845,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/graphql",{"_index":630,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["src/app/services/i18.service",{"_index":1138,"title":{},"body":{"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{}}}],["src/app/services/i18.service.ts",{"_index":1268,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{}}}],["src/app/services/i18.service.ts:11",{"_index":1280,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:13",{"_index":1282,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:15",{"_index":1274,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":1277,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:33",{"_index":1276,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":707,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts",{"_index":958,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":960,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service",{"_index":1304,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/services/match.service.ts",{"_index":1702,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:117",{"_index":1714,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:20",{"_index":1709,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:24",{"_index":1711,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:28",{"_index":1718,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:73",{"_index":1716,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:9",{"_index":1707,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/pitch.service.ts",{"_index":1879,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:11",{"_index":1886,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:13",{"_index":1881,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service.ts",{"_index":1913,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{}}}],["src/app/services/season.service.ts:11",{"_index":1928,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:15",{"_index":1930,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:21",{"_index":1918,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:36",{"_index":1920,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:61",{"_index":1923,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.service",{"_index":1481,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/TeamsComponent.html":{}}}],["src/app/services/team.service.ts",{"_index":2042,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:17",{"_index":2060,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:19",{"_index":2050,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:34",{"_index":2052,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:62",{"_index":2057,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared.module",{"_index":1152,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/shared.module.ts",{"_index":1969,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["src/environments/environment.app.local.ts",{"_index":2226,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.ts",{"_index":2227,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2228,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":251,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["start_date",{"_index":194,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["start_season_date",{"_index":1535,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["startdate",{"_index":1455,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["started",{"_index":2323,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1588,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":1312,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startseason",{"_index":175,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason($id",{"_index":299,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(season_id",{"_index":300,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseasongql",{"_index":298,"title":{"injectables/StartSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["startteamcount",{"_index":1549,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":1018,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":234,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":1215,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["store",{"_index":1723,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["store.readfragment",{"_index":1726,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["store.writefragment",{"_index":1727,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["styles",{"_index":337,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":345,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["subject",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["submit",{"_index":1848,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":157,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["submitmatchresult(matchid",{"_index":1717,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitresult",{"_index":152,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["submitresultgql",{"_index":274,"title":{"injectables/SubmitResultGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["subscribe",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["subscription",{"_index":1209,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.service",{"_index":631,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{}}}],["subscription.service.ts",{"_index":1222,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["subscription.service.ts:20",{"_index":1234,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:21",{"_index":1236,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:24",{"_index":1238,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:43",{"_index":1231,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:55",{"_index":1233,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient",{"_index":1173,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptionclient(value",{"_index":1248,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptions",{"_index":1174,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["success",{"_index":404,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["super",{"_index":962,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2328,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2329,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1502,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["switchmapto",{"_index":1019,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["switchmapto(this.pitchservice.allpitches",{"_index":1031,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["t",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["t.guestteam.id",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.hometeam.id",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.id",{"_index":886,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["table",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":476,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["table.component",{"_index":2040,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":1989,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1988,"title":{},"body":{"components/TableComponent.html":{}}}],["table.games",{"_index":2017,"title":{},"body":{"components/TableComponent.html":{}}}],["table.place",{"_index":2015,"title":{},"body":{"components/TableComponent.html":{}}}],["table.points",{"_index":2020,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":2016,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tore",{"_index":2019,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":2018,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":475,"title":{"components/TableComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":2034,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodule",{"_index":2038,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":256,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tag.id",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.type",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["target_path",{"_index":164,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team'},{'name",{"_index":471,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["team.component",{"_index":504,"title":{},"body":{"components/AddteamComponent.html":{},"modules/AdminModule.html":{}}}],["team.component.css",{"_index":1901,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.html",{"_index":1902,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts",{"_index":1900,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team.component.ts:11",{"_index":1903,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:14",{"_index":1908,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:16",{"_index":1909,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:19",{"_index":1904,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:23",{"_index":1906,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.fragment",{"_index":47,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["team.name",{"_index":417,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["team/rename",{"_index":503,"title":{},"body":{"components/AddteamComponent.html":{},"modules/AdminModule.html":{},"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team:${teamid",{"_index":2068,"title":{},"body":{"injectables/TeamService.html":{}}}],["team_contact",{"_index":2115,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_id",{"_index":133,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_id_pairs",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_ids",{"_index":190,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_manager",{"_index":149,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamadmin",{"_index":777,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'name",{"_index":478,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teamadmin.component",{"_index":2107,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":2070,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":2071,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincomponent",{"_index":477,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":761,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["teamadminmodule",{"_index":2101,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodule",{"_index":2105,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamfragment",{"_index":260,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamid",{"_index":826,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamidpair",{"_index":38,"title":{"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teammanager",{"_index":148,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamname",{"_index":497,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":176,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teams'},{'name",{"_index":480,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teams($id",{"_index":302,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["teams.component.css",{"_index":2110,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":2111,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.component",{"_index":951,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teams_in_season",{"_index":1533,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["teamscanplay",{"_index":1299,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscomponent",{"_index":479,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamservice",{"_index":23,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/ManageseasonComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamsgql",{"_index":301,"title":{"injectables/TeamsGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teamsql",{"_index":2051,"title":{},"body":{"injectables/TeamService.html":{}}}],["template",{"_index":254,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["templateurl",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["terminiert",{"_index":1356,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["text",{"_index":1665,"title":{},"body":{"components/MatchComponent.html":{}}}],["text/javascript",{"_index":646,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":1937,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this._subscriptionclient",{"_index":1246,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":1855,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.addteamgql.mutate",{"_index":1498,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.allseasonslistgql.document",{"_index":1939,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allseasonslistgql.watch().valuechanges.pipe",{"_index":1483,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.allteamsgql.document",{"_index":2066,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.allteamsgql.watch().valuechanges.pipe",{"_index":2058,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.alltournamentqgl.watch().valuechanges.pipe",{"_index":2139,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.alltournamentsqgl.document",{"_index":108,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.alltournamentsqgl.watch().valuechanges.pipe",{"_index":1577,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.allusers",{"_index":2192,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.watch().valuechanges.pipe",{"_index":2193,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.apiclient.createpitch(body).subscribe",{"_index":1056,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.authenticationservice.loginasync(this.loginform.value",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.sendpasswordmail(email",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":633,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.authservice.changepassword(this.loginform.value.password",{"_index":1860,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.newpassword.value",{"_index":905,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":556,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":2100,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loaduser",{"_index":634,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":908,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.sendpasswordmail(this.email.value.tolowercase",{"_index":408,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.authservice.setaccesstoken",{"_index":1858,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.user",{"_index":2086,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.betweenmatchdaysoffset",{"_index":1513,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.cancelbtnlabel",{"_index":968,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cdref.detectchanges",{"_index":1040,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.changelang(defaultlang",{"_index":1291,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.changepasswordqgl.mutate",{"_index":887,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.createform",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createroundgql.mutate",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.createroundnr",{"_index":1587,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createseasongql.mutate",{"_index":1938,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.createtournament.mutate",{"_index":1579,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createusergql.mutate",{"_index":393,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.currentseason.subscribe",{"_index":1936,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.data.tournamentid",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.dialog.open(changepasswordcomponent",{"_index":637,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcomponent",{"_index":1650,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchpitchcomponent",{"_index":1646,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcomponent",{"_index":1640,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecomponent",{"_index":1648,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(logincomponent",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(renameteamcomponent",{"_index":506,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.dialogref.close",{"_index":909,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{}}}],["this.dialogref.close(true",{"_index":113,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.email",{"_index":385,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.email.value.tolowercase",{"_index":394,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":2091,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.error",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{},"components/TableComponent.html":{}}}],["this.eventsgql.fetch(null",{"_index":1258,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.filteredpitches",{"_index":1026,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterstate",{"_index":1962,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.firstname",{"_index":388,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.firstname.value",{"_index":396,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.formbuilder.group",{"_index":1024,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.fromtooffset",{"_index":1517,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.getranking",{"_index":2005,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getround(m.match_day_id).number",{"_index":2146,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinner",{"_index":2149,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.graphsubscription.connect",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guest_score",{"_index":1100,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteam",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.handlegetmatches",{"_index":1782,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplayed",{"_index":1780,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_score",{"_index":1098,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeam",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.i18service.changelang(lang",{"_index":650,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloading",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isteamadmin",{"_index":884,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_score",{"_index":1720,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.isvalidresult(match.home_score",{"_index":1719,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.lastname",{"_index":389,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.lastname.value",{"_index":397,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.latestevents",{"_index":1139,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.latesteventsgql.watch().valuechanges.pipe",{"_index":1140,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadalltournaments",{"_index":1575,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadgooglemapsscript",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1594,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.locatematchqgl.mutate",{"_index":1730,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.loginform",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls['username'].seterrors",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.manageseason",{"_index":1497,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.manageseason.match_days.filter",{"_index":1328,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days.map(x",{"_index":1361,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days[0].matches.length",{"_index":1314,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.teams.map(x",{"_index":1320,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseasonid",{"_index":1499,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.managetournamentid",{"_index":1582,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentroundcount",{"_index":1585,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds",{"_index":1580,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1641,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.guest_score",{"_index":1101,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team",{"_index":1652,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_score",{"_index":1099,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team",{"_index":1651,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":1038,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matches",{"_index":2147,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches.reverse",{"_index":2148,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":2151,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":2152,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesgql",{"_index":1790,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchesql.mutate",{"_index":1519,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.matchkickoff",{"_index":1122,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchplangql.document",{"_index":1500,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.matchplangql.fetch({id",{"_index":1266,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchplangql.watch",{"_index":1791,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchqgl.fetch",{"_index":1264,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchservice.isvalidresult(this.guest_score",{"_index":1103,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_score",{"_index":1102,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.locatematch(match.id",{"_index":1367,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.locatematch(this.match.id",{"_index":1039,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchservice.schedulematch(match.id",{"_index":1368,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.schedulematch(this.match.id",{"_index":1123,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":1104,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchupdated.emit(this.match.id",{"_index":1645,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchdays",{"_index":1496,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays.push(dp",{"_index":1518,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index",{"_index":1526,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index].from",{"_index":1527,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index].to",{"_index":1529,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchpitch.setvalue(this.newpitch",{"_index":1060,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.value",{"_index":1033,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.valuechanges.pipe",{"_index":1027,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":903,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch.id",{"_index":1058,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.label",{"_index":1053,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_latitude",{"_index":1046,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_longitude",{"_index":1048,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol",{"_index":1022,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors",{"_index":1064,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors(null",{"_index":1066,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalidity",{"_index":1067,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":1023,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newroundplandatefrom",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.newroundplandateto",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.oldpassword",{"_index":904,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpassword.value",{"_index":906,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":907,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":390,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.password.value",{"_index":395,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.pitchesqgl.watch().valuechanges.pipe",{"_index":1883,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.pitchadded.next(null",{"_index":1061,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.find(p",{"_index":1062,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places",{"_index":1041,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.addlistener('place_changed",{"_index":1043,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.getplace",{"_index":1045,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.possiblekickoffs",{"_index":1323,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":1324,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":1318,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newelement",{"_index":1321,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.ranking.watch",{"_index":2007,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankinggql.watch",{"_index":1796,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.rankingqgl",{"_index":2006,"title":{},"body":{"components/TableComponent.html":{}}}],["this.redis.subscribe().subscribe",{"_index":1255,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.removeteamgql.mutate",{"_index":1501,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.renameteamgql.mutate",{"_index":2067,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.resetpasswordqgl.mutate",{"_index":892,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.rounds",{"_index":1590,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1592,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.roundteams",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.filter(t",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.map((t",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.push",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.router.navigatebyurl",{"_index":881,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.schedulematchgql.mutate",{"_index":1729,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.season",{"_index":1959,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonchanged.emit(event.value",{"_index":1964,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonlist",{"_index":1482,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.getvalue",{"_index":1781,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id",{"_index":1792,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id}).topromise",{"_index":1267,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.seasonservice.currentseason.next(event.value",{"_index":1963,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.subscribe",{"_index":1958,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchdayid",{"_index":1783,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1786,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.setaccesstoken(null",{"_index":880,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setbtnlabel",{"_index":965,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.showerrorsnackbar",{"_index":2010,"title":{},"body":{"components/TableComponent.html":{}}}],["this.shuffle(possiblekickoffs",{"_index":1333,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":399,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.startmatchday).foreach",{"_index":1330,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.startseasongql.mutate",{"_index":1523,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.submitresultgql.mutate",{"_index":1721,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.subscriptionclient.onconnected",{"_index":1249,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onconnecting",{"_index":1251,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onerror",{"_index":1253,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.teamservice.addnewteam(teamname",{"_index":505,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.teamservice.renameteam(this.team.id",{"_index":1910,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.teamsql.mutate",{"_index":2065,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.token",{"_index":1859,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tournament",{"_index":2142,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentchanged",{"_index":2141,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentid",{"_index":2140,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentqgl.document",{"_index":109,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.tournamentqgl.watch",{"_index":1581,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments",{"_index":1576,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1285,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":1290,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('common_error",{"_index":2013,"title":{},"body":{"components/TableComponent.html":{}}}],["this.translateservice.instant('create_match_days_error",{"_index":1522,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('create_match_days_success",{"_index":1521,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('create_user_error",{"_index":406,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.translateservice.instant('create_user_success",{"_index":401,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.translateservice.instant('edit_result_error",{"_index":1105,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.translateservice.instant('password_changed_error",{"_index":1863,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('password_changed_success",{"_index":1861,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('pitch_save_success",{"_index":1647,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_save_success",{"_index":1644,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_error",{"_index":410,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_success",{"_index":409,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.instant('start_season_error",{"_index":1525,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('start_season_success",{"_index":1524,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('team_contact_save_error",{"_index":2090,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('team_contact_save_success",{"_index":2089,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('time_save_success",{"_index":1649,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.onlangchange.subscribe",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.translateservice.settranslation('de",{"_index":1286,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":1287,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":1293,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscribe",{"_index":966,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscribe",{"_index":963,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.updateteamcontact.mutate",{"_index":2087,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.user",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.role",{"_index":882,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":885,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.document",{"_index":2088,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.userqgl.fetch",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.fetch().subscribe",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userrole",{"_index":398,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.userteamlist",{"_index":392,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.winnerlastround",{"_index":2150,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":2159,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":2163,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_score",{"_index":2153,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":2161,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":2156,"title":{},"body":{"components/TournamentComponent.html":{}}}],["todo",{"_index":2338,"title":{"todo.html":{}},"body":{}}],["token",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["topromise",{"_index":112,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["tournament",{"_index":213,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tournament'},{'name",{"_index":482,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["tournament($id",{"_index":330,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament(id",{"_index":331,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament.component",{"_index":2181,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":2119,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":2118,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.fragment",{"_index":214,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["tournament.name",{"_index":1595,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament_id",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournamentchanged",{"_index":2121,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcomponent",{"_index":481,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentfragment",{"_index":267,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentgql",{"_index":40,"title":{"injectables/TournamentGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["tournamentid",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentid(t",{"_index":2137,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentmodule",{"_index":2175,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentqgl",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentroutingmodule",{"_index":2179,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":1550,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["translate",{"_index":419,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["translate/core",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1802,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodule",{"_index":708,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":709,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["translation",{"_index":2342,"title":{},"body":{"todo.html":{}}}],["translationservice",{"_index":961,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["transport",{"_index":1175,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["tree",{"_index":339,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["tslint:disable",{"_index":1827,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tupel",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["tupel.guestteam.name",{"_index":534,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["tupel.hometeam.name",{"_index":533,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2351,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1029,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{}}}],["types",{"_index":1389,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["types/googlemaps",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2279,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2326,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":999,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["update",{"_index":1722,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{},"todo.html":{}}}],["updated_at",{"_index":237,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["updateteamcontact",{"_index":178,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontactgql",{"_index":304,"title":{"injectables/UpdateTeamContactGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["uri",{"_index":1181,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":711,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["useexisting",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{}}}],["usefactory",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["user",{"_index":215,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":430,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["user.authenticateduser",{"_index":838,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["user.component",{"_index":590,"title":{},"body":{"modules/AdminModule.html":{}}}],["user.component.css",{"_index":346,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.html",{"_index":347,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts",{"_index":342,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:18",{"_index":377,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:20",{"_index":375,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:22",{"_index":376,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":371,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":372,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":373,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":359,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":374,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:45",{"_index":364,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:47",{"_index":368,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:51",{"_index":362,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:81",{"_index":369,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":2198,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.first_name",{"_index":2199,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.fragment",{"_index":217,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["user.last_name",{"_index":2200,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":2201,"title":{},"body":{"components/UserListComponent.html":{}}}],["user/add",{"_index":341,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["user_role",{"_index":2197,"title":{},"body":{"components/UserListComponent.html":{}}}],["userfragment",{"_index":268,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergql",{"_index":332,"title":{"injectables/UserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["userid",{"_index":1245,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["userlistcomponent",{"_index":483,"title":{"components/UserListComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/UserListComponent.html":{}}}],["username_required",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{}}}],["userqgl",{"_index":815,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"components/TeamadminComponent.html":{}}}],["userrole",{"_index":146,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/Credentials.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":415,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userrole.teammanager",{"_index":416,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userteamlist",{"_index":350,"title":{},"body":{"components/AddUserComponent.html":{}}}],["usevalue",{"_index":757,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":1167,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["uuid",{"_index":383,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":384,"title":{},"body":{"components/AddUserComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["uuidv4",{"_index":1574,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["val",{"_index":1363,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["validators",{"_index":378,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.email",{"_index":387,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.minlength(6",{"_index":391,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{}}}],["validators.required",{"_index":386,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["value",{"_index":129,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":1030,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["value.tostring",{"_index":1773,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["valuechanges.pipe",{"_index":1583,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["var",{"_index":425,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["variable",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":110,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2266,"title":{},"body":{"dependencies.html":{}}}],["viertelfinale",{"_index":2167,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":1017,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplete",{"_index":1005,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["void",{"_index":365,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["websocketlink",{"_index":1168,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["websocketlink(ownservice.subscriptionclient",{"_index":1203,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["websockets",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["werden",{"_index":1357,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["width",{"_index":670,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{}}}],["window.localstorage",{"_index":1216,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["winner.name",{"_index":2166,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":2165,"title":{},"body":{"components/TournamentComponent.html":{}}}],["wins",{"_index":242,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ws",{"_index":1169,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["ws://${window.location.hostname}:4000",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://192.168.178.23:3001/ws",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://localhost:4000",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wsclient",{"_index":1202,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["wss://manager.wildeligabremen.de/ws",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":1036,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.filter(y",{"_index":1034,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.guest_team.id",{"_index":1788,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.home_team.id",{"_index":1789,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.id",{"_index":1785,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.index",{"_index":1325,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.matches).reduce((acc",{"_index":1362,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.message.includes('unauthenticated",{"_index":1187,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["x.number",{"_index":1329,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(y",{"_index":1335,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.label.tolowercase().includes(this.newmatchpitch.value.tolowercase",{"_index":1035,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":1336,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["yes",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TableComponent.html":{}}}],["zip",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":571,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddTeamToSeasonGQL.html":{"url":"injectables/AddTeamToSeasonGQL.html","title":"injectable - AddTeamToSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddTeamToSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:926\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                ./add-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                userRole\n                            \n                            \n                                UserRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                            \n                                    Async\n                                sendUsermail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, translateService: TranslateService, snackBar: MatSnackBar, authService: AuthenticationService, createUserGQL: CreateUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserGQL\n                                                  \n                                                        \n                                                                        CreateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeTeamSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeTeamSelect(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUsermail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUsermail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRole, CreateUserGQL } from 'src/api/graphql';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TeamService } from '../../../../services/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSelectChange } from '@angular/material';\nimport { AuthenticationService } from '../../../../services/authentication.service';\nimport { SnackbarComponent } from '../../../shared/snackbar/snackbar.component';\nimport * as uuid from 'uuid/v4';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  userTeamList: string[] = new Array();\n\n  userRole: UserRole;\n\n  UserRole = UserRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    public teamService: TeamService,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    private authService: AuthenticationService,\n    private createUserGQL: CreateUserGQL\n  ) {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6)\n    ]);\n  }\n\n  ngOnInit() {\n  }\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  async createUser() {\n    try {\n      await this.createUserGQL.mutate(\n        {\n          id: uuid(),\n          email: this.email.value.toLowerCase(),\n          password: this.password.value,\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('CREATE_USER_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('CREATE_USER_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  async sendUsermail() {\n    try {\n      await this.authService.sendPasswordMail(this.email.value.toLowerCase());\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_EMAIL\n      \n    \n  \n  \n    \n      \n        \n        FIRST_NAME_REQUIRED\n      \n      \n        \n        LAST_NAME_REQUIRED\n      \n    \n  \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_PASSWORD\n      \n    \n  \n  \n    \n      \n        \n          \n            {{ UserRole.Admin }}\n          \n          \n            {{ UserRole.TeamManager }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n  \n  \n    \n      \n        {{ 'BUTTON.ADD_USER' | translate}}\n      \n    \n    \n      \n        {{ 'BUTTON.SEND_USER_MAIL' | translate}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./add-user.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ERRORS.ENTER_VALID_EMAIL                                        FIRST_NAME_REQUIRED                            LAST_NAME_REQUIRED                                        ERRORS.ENTER_VALID_PASSWORD                                                      {{ UserRole.Admin }}                                {{ UserRole.TeamManager }}                                                                        {{team.name}}                                                  {{ \\'BUTTON.ADD_USER\\' | translate}}                            {{ \\'BUTTON.SEND_USER_MAIL\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddteamComponent.html":{"url":"components/AddteamComponent.html","title":"component - AddteamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddteamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/addteam.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addteam\n            \n\n            \n                styleUrls\n                ./addteam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./addteam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openRenameTeamDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/addteam.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openRenameTeamDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenRenameTeamDialog(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from 'src/api/graphql';\nimport { MatDialog } from '@angular/material';\nimport { RenameTeamComponent } from './rename-team/rename-team.component';\n\n@Component({\n  selector: 'app-addteam',\n  templateUrl: './addteam.component.html',\n  styleUrls: ['./addteam.component.css']\n})\nexport class AddteamComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService,\n    public dialog: MatDialog\n  ) {\n\n  }\n\n  async ngOnInit() {\n  }\n\n  async addNewTeam(teamName: string) {\n    try {\n      await this.teamService.addNewTeam(teamName);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  openRenameTeamDialog(team: Team.Fragment) {\n    this.dialog.open(RenameTeamComponent, { data: team, minWidth: '50vw' });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              edit\n            \n          \n          {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./addteam.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        edit                                {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddteamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeam\n                            \n                            \n                                homeTeam\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                roundTeams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                    Async\n                                createRound\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allTournamentsQGL: AllTournamentListGQL, dialogRef: MatDialogRef, teamService: TeamService, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, createRoundGQL: CreateTournamentRoundGQL, tournamentQGL: TournamentGQL, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createRoundGQL\n                                                  \n                                                        \n                                                                        CreateTournamentRoundGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTeam(tupel: TeamIdPair)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tupel\n                                    \n                                                TeamIdPair\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateFrom\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateFrom(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateTo\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateTo(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roundTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoundTeam[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{ tupel.homeTeam.name }}\n      \n      \n        -\n      \n      \n        {{ tupel.guestTeam.name }}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        -\n      \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n        {{ 'PLAN_DATE_TO'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{ tupel.homeTeam.name }}                    -                    {{ tupel.guestTeam.name }}                              -                                                                        {{team.name}}                                                  -                                                        {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                            {{ \\'PLAN_DATE_TO\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                                {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddUserComponent->AdminModule\n\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddUserComponent\n                        \n                        \n                            AddteamComponent\n                        \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            AdminComponent\n                        \n                        \n                            ManageseasonComponent\n                        \n                        \n                            ManagetournamentComponent\n                        \n                        \n                            ManageusersComponent\n                        \n                        \n                            MatchSchedulingComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddteamComponent } from './addteam/addteam.component';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\nimport { AddUserComponent } from './manageusers/add-user/add-user.component';\nimport { UserListComponent } from './manageusers/user-list/user-list.component';\nimport { RenameTeamComponent } from './addteam/rename-team/rename-team.component';\nimport { EventsModule } from './events';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule,\n    EventsModule\n  ],\n  declarations: [\n    AdminComponent,\n    AddteamComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent,\n    MatchSchedulingComponent,\n    AddUserComponent,\n    UserListComponent,\n    RenameTeamComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent,\n    RenameTeamComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllSeasonsListGQL.html":{"url":"injectables/AllSeasonsListGQL.html","title":"injectable - AllSeasonsListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllSeasonsListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1184\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTeamsGQL.html":{"url":"injectables/AllTeamsGQL.html","title":"injectable - AllTeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1201\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTournamentListGQL.html":{"url":"injectables/AllTournamentListGQL.html","title":"injectable - AllTournamentListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTournamentListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1218\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllUsersGQL.html":{"url":"injectables/AllUsersGQL.html","title":"injectable - AllUsersGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllUsersGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1266\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, dialog: MatDialog, graphSubscription: GraphqlSubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphSubscription\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGoogleMapsScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadGoogleMapsScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLangSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLangSelect(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openChangePasswordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenChangePasswordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private graphSubscription: GraphqlSubscriptionService) {\n  }\n\n  async ngOnInit() {\n    this.graphSubscription.connect();\n    if (this.authService.accessToken) {\n      this.authService.loadUser();\n    }\n    this.loadGoogleMapsScript();\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n        \n       -->\n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .led-box {\n    height: 25px;\n    width: 25%;\n    margin: 10px 0;\n    float: right;\n  }\n  .led-green {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #ABFF00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;\n  }\n  .led-red {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #F00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                           -->              {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                          Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { GraphQLModule } from './graphql.module';\nimport { AuthenticationService } from './services/authentication.service';\n\nregisterLocaleData(localeDe);\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthenticationService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 2500 }\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'matchplan',\n    pathMatch: 'full'\n  },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './services/authentication.service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthenticationService) {\n    }\n    public intercept(req: HttpRequest,\n        next: HttpHandler): Observable> {\n\n        if (req.headers.get('Authorization')) {\n            return next.handle(req);\n        }\n\n        if (this.authService.accessToken) {\n            return next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n            }));\n        }\n\n        return next.handle(req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                sendPasswordMail\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userQGL: UserGQL, changePasswordQGL: PasswordChangeGQL, resetPasswordQGL: PasswordResetGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswordQGL\n                                                  \n                                                        \n                                                                        PasswordChangeGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPasswordQGL\n                                                  \n                                                        \n                                                                        PasswordResetGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string, oldPassword?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTeamAdminForTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeamAdminForTeam(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAsync(context: LoginContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                LoginContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAccessToken(value: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User.AuthenticatedUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nexport interface Credentials {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            console.log(result);\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                ./changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      try {\n        await this.authService.changePassword(this.newPassword.value, this.oldPassword.value);\n        this.oldPasswordWrong = false;\n        this.authService.logout();\n        this.dialogRef.close();\n      } catch (error) {\n          console.error(error);\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./changepassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teams: Team.Fragment[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    Team.Fragment[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact/contact.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public teams: Team.Fragment[]) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n    \n\n    \n        \n   {{ 'CONTACT' | translate }}\n  \n    \n      \n        \n          {{ team.name }}\n        \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CLOSE' | translate }}\n  \n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'CONTACT\\' | translate }}                              {{ team.name }}                                                    {{ \\'BUTTON.CLOSE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                ./contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n                \n                    ./contact-person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                ./contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./contactlist.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactlistComponent\n                        \n                        \n                            PitchesComponent\n                        \n                        \n                            TeamsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactlistRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMatchesForSeasonGQL.html":{"url":"injectables/CreateMatchesForSeasonGQL.html","title":"injectable - CreateMatchesForSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMatchesForSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:952\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateSeasonGQL.html":{"url":"injectables/CreateSeasonGQL.html","title":"injectable - CreateSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:913\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentGQL.html":{"url":"injectables/CreateTournamentGQL.html","title":"injectable - CreateTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1029\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentRoundGQL.html":{"url":"injectables/CreateTournamentRoundGQL.html","title":"injectable - CreateTournamentRoundGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentRoundGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1042\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserGQL.html":{"url":"injectables/CreateUserGQL.html","title":"injectable - CreateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1065\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nexport interface Credentials {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            console.log(result);\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OwlDateTimeIntl\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePeriod.html":{"url":"interfaces/DatePeriod.html","title":"interface - DatePeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatePeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        from\n                                \n                                \n                                            Optional\n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                ./editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                createNewPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                            \n                                onShowCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, pitchService: PitchService, matchService: MatchService, cdRef: ChangeDetectorRef, formBuilder: FormBuilder, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkNewPitchName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckNewPitchName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPitchSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonPitchSelect(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onShowCreateNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \nonShowCreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('adressAutoComplete')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Pitch.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreateNewPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { map, startWith, switchMapTo } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Match, Pitch } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n  showCreateNewPitch: boolean;\n\n  newPitch: Pitch.Fragment;\n  newPitchFormControl: FormControl;\n  newPitchPlaceFormGroup: FormGroup;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private pitchService: PitchService,\n    private matchService: MatchService,\n    private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch.Fragment) {\n    this.match.pitch = pitch;\n  }\n\n  async onSaveClicked() {\n    try {\n      await this.matchService.locateMatch(this.match.id, this.newMatchPitch.value);\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  onShowCreateNewPitch() {\n    this.cdRef.detectChanges();\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n\n  createNewPitch() {\n    // if (this.newPitch.location_latitude && this.newPitch.location_longitude) {\n    //   const body: CreatePitchBody = new CreatePitchBody();\n    //   body.label = this.newPitch.label;\n    //   body.location_latitude = this.newPitch.location_latitude;\n    //   body.location_longitude = this.newPitch.location_longitude;\n    //   this.apiClient.createPitch(body).subscribe(\n    //     async (pitchId) => {\n    //       this.newPitch.id = pitchId.id;\n    //       this.newMatchPitch.setValue(this.newPitch);\n    //       this.pitchService.pitchAdded.next(null);\n    //     }\n    //   );\n    // }\n  }\n  checkNewPitchName() {\n    // const pitch = this.pitchService.pitches.find(p => p.label === this.newPitch.label);\n    // if (pitch) {\n    //   this.newPitchFormControl.setErrors({ pitchexist: true });\n    // } else {\n    //   this.newPitchFormControl.setErrors(null);\n    //   this.newPitchFormControl.updateValueAndValidity();\n    // }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.value.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n     -->\n    \n      \n        \n          {{ 'NEW_PITCH_LABEL' | translate }}\n          \n            \n            ERRORS.PITCH_EXIST\n            PITCH_REQUIRED\n          \n          \n            \n          \n          \n            {{'BUTTON.NEXT' | translate}}\n          \n        \n        \n          \n            {{ 'NEW_PITCH_ADRESS' | translate}}\n            \n              \n            \n            \n              {{'BUTTON.BACK' | translate}}\n              {{'BUTTON.CREATE_PITCH' | translate}}\n            \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.pitch.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.value.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                             -->                            {{ \\'NEW_PITCH_LABEL\\' | translate }}                                  ERRORS.PITCH_EXIST            PITCH_REQUIRED                                                                {{\\'BUTTON.NEXT\\' | translate}}                                                {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                                                {{\\'BUTTON.BACK\\' | translate}}              {{\\'BUTTON.CREATE_PITCH\\' | translate}}                                                {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                ./editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, matchService: MatchService, dialogRef: MatDialogRef, snackBar: MatSnackBar, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { MatchService } from '../../../services/match.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService\n  ) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score)\n        .then( () => {\n          this.dialogRef.close(true);\n        })\n        .catch( (error) => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('EDIT_RESULT_ERROR')\n            },\n            panelClass: ['alert', 'alert-danger'],\n          });\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.result.component.css\n                \n                .inputsize {\n    width: 8ch;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                ./editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            kickoffSet\n                        \n                        \n                    \n                \n            \n            \n                \nkickoffSet(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\nimport { MatchService } from '../../../services/match.service';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private matchService: MatchService\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.matchService.scheduleMatch(this.match.id, this.matchKickoff)\n      .then(\n        () => {\n          this.dialogRef.close(true);\n        }\n      )\n      .catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n                \n                    ./editmatch.time.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventGQL.html":{"url":"injectables/EventGQL.html","title":"injectable - EventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1091\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                latestEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(latestEventsGQL: LatestEventGQL, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latestEventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/events/events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { LatestEventGQL, Event } from 'src/api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  latestEvents: Observable;\n\n  constructor(\n    private latestEventsGQL: LatestEventGQL,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.latestEvents = this.latestEventsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.latestEvents.sort((a, b) => a.occurred_at \n    \n\n    \n        \n  \n    \n      {{ event.occurred_at | date:'short':'':i18Service.currentLang}}\n    \n    \n      {{ event.type }}\n    \n  \n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.occurred_at | date:\\'short\\':\\'\\':i18Service.currentLang}}              {{ event.type }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nEventsComponent\n\nEventsComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            EventsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { SharedModule } from 'src/app/shared.module';\nimport { EventsComponent } from './events.component';\nimport { AppCoreModule } from 'src/app/app-core.module';\n\n@NgModule({\n  imports: [\n    EventsRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    EventsComponent\n  ],\n  exports: [\n    EventsComponent\n  ]\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsRoutingModule.html":{"url":"modules/EventsRoutingModule.html","title":"module - EventsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class EventsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\n\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { AuthenticationService } from './services/authentication.service';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split, ApolloLink } from 'apollo-link';\nimport { environment } from '../environments/environment';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\n\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { persistCache } from 'apollo-cache-persist';\n\nconst uri = environment.graphqlUrl; //  {\n    return forward(operation).map(response => {\n      const { response: { headers } } = operation.getContext();\n      if (response.errors && response.errors.some(x => x.message.includes('Unauthenticated')) ) {\n        authService.logout();\n      }\n      if (headers) {\n        const token = headers.get('x-token');\n        if (token) {\n          authService.setAccessToken({ token: token });\n        }\n      }\n      return response;\n    });\n  });\n\n  const auth = setContext((_, { headers }) => {\n    if (!headers) {\n      headers = new HttpHeaders();\n    }\n    const token = authService.accessToken;\n    if (token) {\n      return {\n        headers: headers.get('Authorization') ? null : headers.append('Authorization', `Bearer ${token}`)\n      };\n    } else {\n      return {};\n    }\n  });\n\n  ownService.subscriptionClient = new SubscriptionClient(\n    environment.graphqlWsUrl,\n    {\n      lazy: true,\n      reconnect: true,\n      reconnectionAttempts: 2\n    });\n  const wsClient = new WebSocketLink(ownService.subscriptionClient);\n\n  const link = split(\n    // split based on operation type\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsClient,\n    afterwareLink.concat(auth).concat(http),\n  );\n\n  const cache = new InMemoryCache(\n    {\n      addTypename: true,\n      cacheRedirects: {\n        Query: {\n          allSeasons: (t, args, { getCacheKey }) => {\n            return getCacheKey({ __typename: 'Season' });\n          }\n        },\n      }\n    }\n  );\n  persistCache({\n    cache,\n    storage: window.localStorage,\n    key: 'graphql-cache',\n    debug: !environment.production\n  });\n  return {\n    link: link,\n    cache: cache,\n    connectToDevTools: !environment.production\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    GraphqlSubscriptionService,\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [\n        HttpLink,\n        AuthenticationService,\n        GraphqlSubscriptionService\n      ],\n    },\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlSubscriptionService.html":{"url":"injectables/GraphqlSubscriptionService.html","title":"injectable - GraphqlSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptionClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptionClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisEventGQL, rankingQGL: RankingGQL, eventsGQL: LatestEventGQL, matchQGL: MatchGQL, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql-subscription.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchQGL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql-subscription.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptionClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptionClient\n                    \n                \n\n                \n                    \n                        getsubscriptionClient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:21\n                                \n                            \n\n                \n                    \n                        setsubscriptionClient(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: GraphqlSubscriptionService\n})\nexport class GraphqlSubscriptionService {\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connecting');\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('error', error);\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            // await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    let defaultLang = localStorage.getItem('LANG');\n    if (!defaultLang) {\n      defaultLang = this.translateService.getBrowserLang();\n    }\n    if (!defaultLang) {\n      defaultLang = 'de';\n    }\n    this.changeLang(defaultLang);\n  }\n\n  changeLang(lang: string) {\n    localStorage.setItem('LANG', lang);\n    this.translateService.use(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:         ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData.html":{"url":"interfaces/IntrospectionResultData.html","title":"interface - IntrospectionResultData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData-1.html":{"url":"interfaces/IntrospectionResultData-1.html","title":"interface - IntrospectionResultData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/introspection-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatestEventGQL.html":{"url":"injectables/LatestEventGQL.html","title":"injectable - LatestEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LatestEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1108\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateMatchGQL.html":{"url":"injectables/LocateMatchGQL.html","title":"injectable - LocateMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocateMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:874\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordForgot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordForgot(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PasswordResetGQL } from '../../../api/graphql';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isLoading: boolean;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    this.isLoading = true;\n    if (await this.authenticationService.loginAsync(this.loginForm.value)) {\n      this.loginForm.markAsPristine();\n      this.isLoading = false;\n      this.dialogRef.close();\n    } else {\n      this.isLoading = false;\n      this.error = true;\n    }\n  }\n\n  async passwordForgot(email: string) {\n    if (email) {\n      try {\n        await this.authenticationService.sendPasswordMail(email);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      } catch (error) {\n        console.error(error);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    } else {\n      this.loginForm.controls['username'].setErrors({ required: true });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          ERRORS.USERNAME_PASSWORD_WRONG\n        \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.LOGIN' | translate}}\n        \n      \n    \n    \n      FORGOT_PASSWORD\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              ERRORS.USERNAME_PASSWORD_WRONG                                                USERNAME_REQUIRED                                                          PASSWORD_REQUIRED                                remove_red_eye                                                        {{ \\'BUTTON.LOGIN\\' | translate}}                            FORGOT_PASSWORD      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nexport interface Credentials {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            console.log(result);\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageseasonComponent.html":{"url":"components/ManageseasonComponent.html","title":"component - ManageseasonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageseasonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manageseason.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageseason\n            \n\n            \n                styleUrls\n                ./manageseason.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageseason.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                betweenMatchDaysOffset\n                            \n                            \n                                fromToOffset\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                manageSeason\n                            \n                            \n                                manageSeasonId\n                            \n                            \n                                matchesInSeason\n                            \n                            \n                                newMatchDays\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewSeason\n                            \n                            \n                                    Async\n                                addTeamToSeason\n                            \n                            \n                                createMatchDays\n                            \n                            \n                                manageSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                removeTeamFromSeason\n                            \n                            \n                                selectedTabChanged\n                            \n                            \n                                sendMatchDays\n                            \n                            \n                                setMatchDayFromDate\n                            \n                            \n                                setMatchDayToDate\n                            \n                            \n                                    Async\n                                startSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, teamService: TeamService, i18Service: I18Service, snackBar: MatSnackBar, translateService: TranslateService, matchesQL: CreateMatchesForSeasonGQL, matchPlanGQL: MatchPlanGQL, removeTeamGQL: RemoveTeamFromSeasonGQL, addTeamGQL: AddTeamToSeasonGQL, startSeasonGQL: StartSeasonGQL, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manageseason.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchesQL\n                                                  \n                                                        \n                                                                        CreateMatchesForSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeTeamGQL\n                                                  \n                                                        \n                                                                        RemoveTeamFromSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addTeamGQL\n                                                  \n                                                        \n                                                                        AddTeamToSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startSeasonGQL\n                                                  \n                                                        \n                                                                        StartSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTeamToSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTeamToSeason(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMatchDays(startDate: any, length: number, oldMatchDays: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldMatchDays\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            manageSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \nmanageSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeTeamFromSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTeamFromSeason(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectedTabChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectedTabChanged(event: MatTabChangeEvent, season: MatchPlan.Season)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                MatTabChangeEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    season\n                                    \n                                            MatchPlan.Season\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nsendMatchDays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMatchDayFromDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetMatchDayFromDate(index: number, date: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMatchDayToDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetMatchDayToDate(index: number, date: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startSeason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            betweenMatchDaysOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 7\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromToOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageSeasonId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchesInSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePeriod[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange, MatTabChangeEvent, MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TeamService } from 'src/app/services/team.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {\n  AllSeasonsList, Match,\n  MatchPlan, MatchPlanGQL, CreateMatchesForSeasonGQL, RemoveTeamFromSeasonGQL,\n  AddTeamToSeasonGQL, DatePeriod, StartSeasonGQL, AllSeasonsListGQL\n} from '../../../../api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n@Component({\n  selector: 'app-manageseason',\n  templateUrl: './manageseason.component.html',\n  styleUrls: ['./manageseason.component.css']\n})\nexport class ManageseasonComponent implements OnInit {\n\n  matchesInSeason: Match.Fragment[];\n\n  newMatchDays: DatePeriod[];\n  fromToOffset = 2;\n  betweenMatchDaysOffset = 7;\n\n  seasonList: Observable;\n  manageSeason: Observable;\n  manageSeasonId: string;\n\n  constructor(\n    public seasonService: SeasonService,\n    public teamService: TeamService,\n    public i18Service: I18Service,\n    private snackBar: MatSnackBar,\n    private translateService: TranslateService,\n    private matchesQL: CreateMatchesForSeasonGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private removeTeamGQL: RemoveTeamFromSeasonGQL,\n    private addTeamGQL: AddTeamToSeasonGQL,\n    private startSeasonGQL: StartSeasonGQL,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) {\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => {\n          return data.allSeasons.sort(\n            (a, b) => {\n              const aState = a.state.toLocaleLowerCase();\n              const bState = b.state.toLocaleLowerCase();\n              if (aState > bState) {\n                return 1;\n              }\n              if (aState  bName) {\n                return 1;\n              }\n              if (aName  {\n        if (data.season.teams) {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n        }\n        return data.season;\n      })\n    );\n    delete this.newMatchDays;\n  }\n\n  async addTeamToSeason(teamId: string) {\n    if (this.manageSeason) {\n      try {\n        await this.addTeamGQL.mutate(\n          {\n            season_id: this.manageSeasonId,\n            team_id: teamId\n          },\n          {\n            refetchQueries: [\n              {\n                query: this.matchPlanGQL.document,\n                variables: { id: this.manageSeasonId }\n              }\n            ]\n          }\n        ).toPromise();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  async removeTeamFromSeason(teamId: string) {\n    if (this.manageSeason) {\n      try {\n        await this.removeTeamGQL.mutate(\n          {\n            season_id: this.manageSeasonId,\n            team_id: teamId\n          },\n          {\n            refetchQueries: [\n              {\n                query: this.matchPlanGQL.document,\n                variables: { id: this.manageSeasonId }\n              }\n            ]\n          }\n        ).toPromise();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  selectedTabChanged(event: MatTabChangeEvent, season: MatchPlan.Season) {\n    switch (event.index) {\n      case 1:\n        if (season.match_days) {\n          this.newMatchDays = season.match_days.map((matchDay) => ({ from: matchDay.start_date, to: matchDay.end_date }));\n        }\n        break;\n    }\n  }\n\n  createMatchDays(startDate: any, length: number, oldMatchDays: any) {\n    this.newMatchDays = new Array();\n    if (length % 2 !== 0) {\n      length += 1;\n    }\n    for (let i = 0; i {};\n      dp.from = new Date(startDate.value);\n      dp.from.setDate(dp.from.getDate() + (i * this.betweenMatchDaysOffset));\n      dp.to = new Date(dp.from);\n      dp.to.setDate(dp.to.getDate() + this.fromToOffset);\n      this.newMatchDays.push(dp);\n    }\n  }\n\n  sendMatchDays() {\n    this.matchesQL.mutate(\n      {\n        season_id: this.manageSeasonId,\n        dates: this.newMatchDays\n      },\n      {\n        refetchQueries: [\n          {\n            query: this.matchPlanGQL.document,\n            variables: { id: this.manageSeasonId }\n          }\n        ]\n      }\n    ).subscribe(\n      (d) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_MATCH_DAYS_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_MATCH_DAYS_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n\n  async startSeason() {\n    try {\n      await this.startSeasonGQL.mutate(\n        {\n          id: this.manageSeasonId\n        },\n        {\n          refetchQueries: [\n            {\n              query: this.matchPlanGQL.document,\n              variables: { id: this.manageSeasonId }\n            }\n          ]\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('START_SEASON_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('START_SEASON_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  setMatchDayFromDate(index: number, date: any) {\n    if (!this.newMatchDays[index]) {\n      this.newMatchDays[index] = {};\n    }\n    this.newMatchDays[index].from = date.value;\n  }\n\n  setMatchDayToDate(index: number, date: any) {\n    if (!this.newMatchDays[index]) {\n      this.newMatchDays[index] = {};\n    }\n    this.newMatchDays[index].to = date.value;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ season.name }} | {{ season.state }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_SEASON' | translate\n        }}\n      \n    \n  \n  \n    \n      \n        \n          \n            TEAMS_IN_SEASON\n            \n              \n                {{team.name}}\n                \n                  ->\n                \n              \n            \n          \n          \n            ALL_TEAMS\n            \n              \n                \n                  \n                    {{team.name}}\n                    \n              \n            \n          \n        \n      \n      \n        \n          \n            {{ 'START_SEASON_DATE' | translate}}:\n            \n            {{ 'BUTTON.SET_DAY' | translate }}\n            \n          \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n        \n        \n          \n            {{ i + 1 }}. Spieltag\n          \n          \n            {{ matchDay.from | date:'short':'':i18Service.currentLang }}\n          \n          \n            {{ 'BUTTON.SET_TIME' | translate }}\n            \n            \n          \n          \n            {{ matchDay.to | date:'short':'':i18Service.currentLang }}\n          \n          \n            {{ 'BUTTON.SET_TIME' | translate }}\n            \n            \n          \n        \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n      \n        \n          \n            \n              \n                {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{matchDay.start_date | date }}-{{matchDay.end_date\n                  | date}})\n              \n            \n            \n              \n                {{ match.home_team.name }} - {{ match.guest_team.name }}\n              \n            \n          \n          \n            \n              {{ 'BUTTON.START_SEASON' | translate}}\n            \n          \n        \n      \n      \n          \n        \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./manageseason.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ season.name }} | {{ season.state }}                                                                  {{ \\'BUTTON.CREATE_SEASON\\' | translate        }}                                                      TEAMS_IN_SEASON                                          {{team.name}}                                  ->                                                                          ALL_TEAMS                                                                                {{team.name}}                                                                                                          {{ \\'START_SEASON_DATE\\' | translate}}:                        {{ \\'BUTTON.SET_DAY\\' | translate }}                                                                                                                                                                                {{ i + 1 }}. Spieltag                                {{ matchDay.from | date:\\'short\\':\\'\\':i18Service.currentLang }}                                {{ \\'BUTTON.SET_TIME\\' | translate }}                                                        {{ matchDay.to | date:\\'short\\':\\'\\':i18Service.currentLang }}                                {{ \\'BUTTON.SET_TIME\\' | translate }}                                                            {{ \\'BUTTON.OK\\' | translate }}                                                                                {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{matchDay.start_date | date }}-{{matchDay.end_date                  | date}})                                                                    {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                        {{ \\'BUTTON.START_SEASON\\' | translate}}                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageseasonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                ./managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournamentId\n                            \n                            \n                                manageTournamentRoundCount\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, allTournamentsQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL, createTournament: CreateTournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTournament\n                                                  \n                                                        \n                                                                        CreateTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewTournament\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTournament(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editRound\n                        \n                        \n                    \n                \n            \n            \n                \neditRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genRounds\n                        \n                        \n                    \n                \n            \n            \n                \ngenRounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllTournaments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onTournamentSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTournamentSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRoundCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, MatchDay, CreateTournamentGQL } from '../../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport * as uuidv4 from 'uuid/v4';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  manageTournamentId: string;\n  manageTournamentRounds: Observable;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRoundCount: number;\n\n  constructor(\n    public dialog: MatDialog,\n    private allTournamentsQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private createTournament: CreateTournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.tournaments = this.allTournamentsQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n  }\n\n  async createNewTournament(name: string) {\n    await this.createTournament.mutate({\n      id: uuidv4(),\n      name: name\n    },\n      {\n        refetchQueries: [\n          {query: this.allTournamentsQGL.document}\n        ]\n      }).toPromise();\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = this.tournamentQGL.watch(\n      {\n        id: this.manageTournamentId\n      }\n    ).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.data.tournament.rounds) {\n            this.manageTournamentRoundCount = result.data.tournament.rounds.length;\n          } else {\n            this.manageTournamentRoundCount = 0;\n          }\n          this.createRoundNr = this.manageTournamentRoundCount;\n          return result.data.tournament.rounds;\n        })\n    );\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT'\n        | translate}}\n    \n  \n  \n    \n      \n        \n          \n        \n      \n      \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n    \n    \n      \n        {{ mt.number }}. {{ 'ROUND' | translate }}\n        \n          \n            {{ match.home_team.name }} - {{ match.guest_team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n   -->\n\n    \n\n    \n                \n                    ./managetournament.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\'        | translate}}                                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                {{ mt.number }}. {{ \\'ROUND\\' | translate }}                              {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                          {{ \\'MATCH\\' | translate }} {{ game }}       -->'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                ./manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  constructor(\n  ) {\n  }\n\n  async ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n      \n    \n\n    \n\n    \n                \n                    ./manageusers.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                ./match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                matchUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, matchService: MatchService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :     Match.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        matchUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openContactModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenContactModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditPitchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditPitchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditResultDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditResultDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditTimeDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditTimeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: Match.Fragment;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n\n  @Output() matchUpdated = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    public matchService: MatchService,\n    public translateService: TranslateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog() {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: this.match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('RESULT_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openEditPitchDialog() {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('PITCH_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openEditTimeDialog() {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('TIME_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openContactModal() {\n    this.dialog.open(ContactComponent, {\n      data: [\n        this.match.home_team,\n        this.match.guest_team\n      ],\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    access_time\n                \n                \n                    \n                        {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                        {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                    \n                    {{ 'NO_TIME_SET' | translate }}\n                \n                \n                    location_off\n                    location_on\n                \n                \n                    {{ 'NO_PTICH_SET' | translate }}\n                \n                \n                    \n                        {{ match.pitch.label }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n\n    \n\n    \n                \n                    ./match.component.css\n                \n                .card-text {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                            access_time                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                         {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                        {{ \\'NO_TIME_SET\\' | translate }}                                                    location_off                    location_on                                                    {{ \\'NO_PTICH_SET\\' | translate }}                                                                            {{ match.pitch.label }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchEventPayload.html":{"url":"interfaces/MatchEventPayload.html","title":"interface - MatchEventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchEventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestScore\n                                \n                                \n                                        homeScore\n                                \n                                \n                                        matchId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestScore\n                                    \n                                \n                                \n                                    \n                                        guestScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeScore\n                                    \n                                \n                                \n                                    \n                                        homeScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: GraphqlSubscriptionService\n})\nexport class GraphqlSubscriptionService {\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connecting');\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('error', error);\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            // await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchGQL.html":{"url":"injectables/MatchGQL.html","title":"injectable - MatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1122\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPlanGQL.html":{"url":"injectables/MatchPlanGQL.html","title":"injectable - MatchPlanGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchPlanGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1139\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                ./match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                    Public\n                                pitchService\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                \n                \n                    \n                        Type :     MatchPlan.Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addKickoffDateToPitch\n                        \n                        \n                    \n                \n            \n            \n                \naddKickoffDateToPitch(offset: number, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePair\n                        \n                        \n                    \n                \n            \n            \n                \nremovePair(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveMatches\n                        \n                        \n                    \n                \n            \n            \n                \nsaveMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatches\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(a)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n    \n      scheduleMatches\n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      \n        {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:'short':'':i18Service.currentLang}}\n          - {{ matchDay.end_date | date:'shortDate'}})\n      \n    \n    \n      \n        {{ match.home_team.name }} - {{ match.guest_team.name }}\n      \n      \n        {{ match.kickoff | date:'short':'':i18Service.currentLang}}\n      \n      \n        ({{ match.pitch?.label }})\n      \n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./match-scheduling.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                    scheduleMatches                  {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove                  ab Spieltag:                                {{ matchDay.number }}                                        {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:\\'short\\':\\'\\':i18Service.currentLang}}          - {{ matchDay.end_date | date:\\'shortDate\\'}})                            {{ match.home_team.name }} - {{ match.guest_team.name }}                    {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}}                    ({{ match.pitch?.label }})                        save      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                locateMatch\n                            \n                            \n                                scheduleMatch\n                            \n                            \n                                submitMatchResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submitResultGQL: SubmitResultGQL, rankingQGL: RankingGQL, scheduleMatchGQL: ScheduleMatchGQL, locateMatchQGL: LocateMatchGQL, seasonService: SeasonService, matchPlanGQL: MatchPlanGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submitResultGQL\n                                                  \n                                                        \n                                                                        SubmitResultGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleMatchGQL\n                                                  \n                                                        \n                                                                        ScheduleMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locateMatchQGL\n                                                  \n                                                        \n                                                                        LocateMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMatchPlayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPlayed(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidResult(score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locateMatch\n                        \n                        \n                    \n                \n            \n            \n                \nlocateMatch(matchId: string, pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatch\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatch(matchId: string, matchKickoff: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchKickoff\n                                    \n                                                Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    homeScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubmitResultGQL, RankingGQL, MatchFragment, ScheduleMatchGQL, LocateMatchGQL, MatchPlanGQL, Match, Pitch } from '../../api/graphql';\nimport { SeasonService } from './season.service';\nimport { Apollo } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  constructor(\n    private submitResultGQL: SubmitResultGQL,\n    private rankingQGL: RankingGQL,\n    private scheduleMatchGQL: ScheduleMatchGQL,\n    private locateMatchQGL: LocateMatchGQL,\n    private seasonService: SeasonService,\n    private matchPlanGQL: MatchPlanGQL\n  ) { }\n\n  public isMatchPlayed(match: Match.Fragment): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    const result = { home_score: homeScore, guest_score: guestScore };\n    return new Promise(\n      (resolve, reject) => {\n        this.submitResultGQL.mutate(\n          {\n            match_id: matchId,\n            ...result\n          },\n          {\n            update: (store, { data }) => {\n              const fragment = {\n                fragmentName: 'Match',\n                fragment: MatchFragment,\n                id: `Match:${matchId}`\n              };\n              const match: any = store.readFragment(\n                {\n                  ...fragment\n                }\n              );\n              store.writeFragment(\n                {\n                  ...fragment,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    ...result\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  scheduleMatch(matchId: string, matchKickoff: Date | string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const kickoff = typeof matchKickoff === 'string' ? matchKickoff : matchKickoff.toISOString();\n        this.scheduleMatchGQL.mutate(\n          {\n            match_id: matchId,\n            kickoff: kickoff\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    kickoff: matchKickoff\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  locateMatch(matchId: string, pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.locateMatchQGL.mutate(\n          {\n            match_id: matchId,\n            pitch_id: pitch.id\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    pitch: pitch\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                ./matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchesGQL\n                            \n                            \n                                    Public\n                                matchPlanGQL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMatchDays\n                            \n                            \n                                filterMatches\n                            \n                            \n                                handleGetMatches\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidePlayed\n                                \n                                \n                                    selectedMatchDayId\n                                \n                                \n                                    selectedTeamId\n                                \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, matchPlanGQL: MatchPlanGQL, rankingGQL: RankingGQL, matchGQL: MatchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchGQL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatchDays(matchDays: MatchDay.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchDays\n                                    \n                                            MatchDay.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatchDay.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatches\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatches(matches: Match.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            Match.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Match.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGetMatches\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGetMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchesGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchPlanGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchPlanGQL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidePlayed\n                    \n                \n\n                \n                    \n                        gethidePlayed()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:17\n                                \n                            \n\n                \n                    \n                        sethidePlayed(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMatchDayId\n                    \n                \n\n                \n                    \n                        getselectedMatchDayId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:28\n                                \n                            \n\n                \n                    \n                        setselectedMatchDayId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeamId\n                    \n                \n\n                \n                    \n                        getselectedTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:32\n                                \n                            \n\n                \n                    \n                        setselectedTeamId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { I18Service } from '../../services/i18.service';\nimport { Observable } from 'rxjs';\nimport { MatchPlanGQL, MatchPlan, Match, MatchDay, RankingGQL, MatchGQL } from '../../../api/graphql';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matchesGQL: Observable;\n\n  public get hidePlayed(): boolean {\n    return JSON.parse(localStorage.getItem('HIDE_PLAYED'));\n  }\n  public set hidePlayed(value: boolean) {\n    localStorage.setItem('HIDE_PLAYED', value.toString());\n  }\n\n  public set selectedMatchDayId(value: string) {\n    localStorage.setItem('SELECTED_MATCHDAY', value);\n  }\n\n  public get selectedMatchDayId(): string {\n    return localStorage.getItem('SELECTED_MATCHDAY') || '0';\n  }\n\n  public get selectedTeamId(): string {\n    return localStorage.getItem('SELECTED_TEAM') || '0';\n  }\n\n  public set selectedTeamId(value: string) {\n    localStorage.setItem('SELECTED_TEAM', value);\n  }\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public matchPlanGQL: MatchPlanGQL,\n    private rankingGQL: RankingGQL,\n    private matchGQL: MatchGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.handleGetMatches();\n    }\n  }\n\n  filterMatchDays(matchDays: MatchDay.Fragment[]): MatchDay.Fragment[] {\n\n    return this.selectedMatchDayId !== '0' ? matchDays.filter(x => x.id === this.selectedMatchDayId) : matchDays;\n\n  }\n\n  filterMatches(matches: Match.Fragment[]): Match.Fragment[] {\n\n    return this.selectedTeamId !== '0' ?\n      matches.filter(x => x.guest_team.id === this.selectedTeamId || x.home_team.id === this.selectedTeamId) :\n      matches;\n\n  }\n\n  handleGetMatches() {\n    this.matchesGQL = this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id } ).valueChanges.pipe(\n      map(\n        ({ data }) => {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n          if (this.selectedMatchDayId && !data.season.match_days.find(x => x.id === this.selectedMatchDayId)) {\n            this.selectedMatchDayId = '0';\n          }\n          if (this.selectedTeamId && !data.season.teams.find(x => x.id === this.selectedTeamId)) {\n            this.selectedTeamId = '0';\n          }\n          return data.season;\n        }\n      )\n    );\n  }\n\n  matchUpdated(matchId: string) {\n    this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id }).refetch();\n    this.rankingGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id }).refetch();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ 'ALL_MATCHDAYS' | translate }}\n            \n            \n              {{ matchDay.number }}\n              \n                {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ 'ALL_TEAMS' | translate }}\n            \n            \n              {{ team.name }}\n            \n          \n        \n      \n      \n        \n          filter_list\n          filter_list\n        \n        \n          \n            {{ 'HIDE_PLAYED_MATCHES' | translate }}\n          \n        \n      \n    \n  \n  \n    \n        \n          {{ 'MATCHDAY' | translate:{matchDay: matchDay.number} }}\n        \n        \n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./matchplan.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ \\'ALL_MATCHDAYS\\' | translate }}                                      {{ matchDay.number }}                              {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                      {{ team.name }}                                                            filter_list          filter_list                                      {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                                      {{ \\'MATCHDAY\\' | translate:{matchDay: matchDay.number} }}                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchplanComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            MatchplanRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                ./newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, activatedRoute: ActivatedRoute, formBuilder: FormBuilder, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.setAccessToken({ token: params['token'] });\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.setAccessToken({ token: null });\n          }\n        }\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      await this.authService.changePassword(this.loginForm.value.password);\n      this.authService.logout();\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success'],\n          duration: 30000\n        });\n    } catch (error) {\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('PASSWORD_CHANGED_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger'],\n        duration: 30000\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n                \n                    ./newpassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewpasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NewpasswordRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordChangeGQL.html":{"url":"injectables/PasswordChangeGQL.html","title":"injectable - PasswordChangeGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordChangeGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:900\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetGQL.html":{"url":"injectables/PasswordResetGQL.html","title":"injectable - PasswordResetGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:887\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPitches\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchesQGL: PitchesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchesQGL\n                                                  \n                                                        \n                                                                        PitchesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.pitchesQGL.watch().valueChanges.pipe(\n    map(({data}) => data.allPitches)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pitch, PitchesGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  allPitches: Observable = this.pitchesQGL.watch().valueChanges.pipe(\n    map(({data}) => data.allPitches)\n  );\n\n  constructor(\n    private pitchesQGL: PitchesGQL\n  ) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                ./pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./pitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchesGQL.html":{"url":"injectables/PitchesGQL.html","title":"injectable - PitchesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1153\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingGQL.html":{"url":"injectables/RankingGQL.html","title":"injectable - RankingGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RankingGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1167\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisEventGQL.html":{"url":"injectables/RedisEventGQL.html","title":"injectable - RedisEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RedisEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphqlsubs.ts:52\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveTeamFromSeasonGQL.html":{"url":"injectables/RemoveTeamFromSeasonGQL.html","title":"injectable - RemoveTeamFromSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveTeamFromSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:939\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenameTeamComponent.html":{"url":"components/RenameTeamComponent.html","title":"component - RenameTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RenameTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/rename-team/rename-team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rename-team\n            \n\n            \n                styleUrls\n                ./rename-team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rename-team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, team: Team.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    Team.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, RenameTeamGQL, TeamFragment } from 'src/api/graphql';\nimport { TeamService } from '../../../../services/team.service';\n\n@Component({\n  selector: 'app-rename-team',\n  templateUrl: './rename-team.component.html',\n  styleUrls: ['./rename-team.component.css']\n})\nexport class RenameTeamComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private teamService: TeamService,\n    @Inject(MAT_DIALOG_DATA) public team: Team.Fragment\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async renameTeam(newName: string) {\n    try {\n      await this.teamService.renameTeam(this.team.id, newName);\n      this.dialogRef.close();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ 'TEAM' | translate }} {{team.name}}\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          save\n        \n      \n    \n  \n\n\n  {{'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./rename-team.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'TEAM\\' | translate }} {{team.name}}                                                          save                      {{\\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenameTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenameTeamGQL.html":{"url":"injectables/RenameTeamGQL.html","title":"injectable - RenameTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RenameTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1016\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoundTeam.html":{"url":"interfaces/RoundTeam.html","title":"interface - RoundTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoundTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeam\n                                \n                                \n                                        homeTeam\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeam\n                                    \n                                \n                                \n                                    \n                                        guestTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeam\n                                    \n                                \n                                \n                                    \n                                        homeTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleMatchGQL.html":{"url":"injectables/ScheduleMatchGQL.html","title":"injectable - ScheduleMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:861\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSeason\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _currentSeason\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allSeasonsListGQL: AllSeasonsListGQL, createSeasonGQL: CreateSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSeasonGQL\n                                                  \n                                                        \n                                                                        CreateSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seasonCompare\n                        \n                        \n                    \n                \n            \n            \n                \nseasonCompare(c1: any, c2: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _currentSeason\n                    \n                \n\n                \n                    \n                        get_currentSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:11\n                                \n                            \n\n                \n                    \n                        set_currentSeason(season)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            season\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AllSeasonsList, AllSeasonsListGQL, CreateSeasonGQL } from '../../api/graphql';\nimport * as uuid from 'uuid/v4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  private get _currentSeason(): AllSeasonsList.AllSeasons {\n    return JSON.parse(localStorage.getItem('SELECTED_SEASON')) || '';\n  }\n\n  private set _currentSeason(season: AllSeasonsList.AllSeasons) {\n    if (season) {\n      localStorage.setItem('SELECTED_SEASON', JSON.stringify(season));\n    }\n  }\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n\n  constructor(\n    private allSeasonsListGQL: AllSeasonsListGQL,\n    private createSeasonGQL: CreateSeasonGQL\n  ) {\n    this.currentSeason.subscribe(\n      (season) => {\n        if (season) {\n          this._currentSeason = season;\n        }\n      }\n    );\n  }\n\n  public async createSeason(seasonName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.createSeasonGQL.mutate(\n          {\n            id: uuid(),\n            name: seasonName\n          },\n          {\n            refetchQueries: [\n              {query: this.allSeasonsListGQL.document}\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: any, c2: any) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                ./seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterState\n                    \n                \n                \n                    \n                        Default value : SeasonState.Progress\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\nimport { AllSeasonsList, SeasonState, AllSeasonsListGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  @Input() filterState = SeasonState.Progress;\n  season: AllSeasonsList.AllSeasons;\n  seasonList: Observable;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  constructor(\n    public seasonService: SeasonService,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => data.allSeasons.filter(s => s.state === this.filterState)\n      )\n    );\n  }\n\n  currentSeasonChanged(event: MatSelectChange) {\n    this.seasonService.currentSeason.next(event.value);\n    this.seasonChanged.emit(event.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ season.name }}\n    \n  \n\n    \n\n    \n                \n                    ./seasonchooser.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nContactComponent\n\nContactComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            SeasonchooserComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ContactComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContactPersonComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SeasonchooserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './components/shared/match/match.component';\nimport { MaterialModule } from './material.module';\nimport { ContactComponent } from './components/shared/contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './components/shared/seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './components/shared/editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './components/shared/editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './components/shared/editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { ContactPersonComponent } from './components/shared/contact-person/contact-person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.message }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartSeasonGQL.html":{"url":"injectables/StartSeasonGQL.html","title":"injectable - StartSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:968\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitResultGQL.html":{"url":"injectables/SubmitResultGQL.html","title":"injectable - SubmitResultGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmitResultGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:840\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                rankingQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRanking\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                showErrorSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, snackBar: MatSnackBar, ranking: RankingGQL, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRanking\n                        \n                        \n                    \n                \n            \n            \n                \ngetRanking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorSnackBar(errorCode?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rankingQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Ranking, RankingGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { I18Service } from '../../services/i18.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from 'src/app/components/shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  rankingQGL: Observable;\n  error: boolean;\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private ranking: RankingGQL,\n    private translateService: TranslateService\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.getRanking();\n    }\n  }\n\n  getRanking() {\n    this.error = false;\n    this.rankingQGL = this.ranking.watch({ id: this.seasonService.currentSeason.getValue().id }).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.errors) {\n            console.error(result.errors);\n            this.showErrorSnackBar();\n            return null;\n          } else {\n            if (!result.data.season) {\n              this.showErrorSnackBar();\n            }\n            return result.data.season.ranking;\n          }\n        }\n      )\n    );\n  }\n\n  refresh() {\n    this.ranking.watch({ id: this.seasonService.currentSeason.getValue().id }).refetch();\n  }\n\n  showErrorSnackBar(errorCode?: number) {\n    this.error = true;\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        message: this.translateService.instant('COMMON_ERROR'),\n        duration: 60000\n      },\n      panelClass: ['alert', 'alert-danger'],\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          refresh\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            TABLE.PLACE\n            TABLE.TEAM\n            TABLE.GAMES\n            TABLE.WIN_DRAW_LOST\n            TABLE.TORE:TORE\n            TABLE.POINTS\n          \n        \n        \n          \n            \n              {{ pos.number }}\n              {{ pos.team.name }}\n              {{ pos.matches }}\n              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n              {{ pos.points }}\n            \n          \n        \n      \n      \n        {{ 'LAST_UPDATED_AT' | translate }}: ({{ ranking.updated_at | date:'medium':'':i18Service.currentLang}})\n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            refresh                                                              TABLE.PLACE            TABLE.TEAM            TABLE.GAMES            TABLE.WIN_DRAW_LOST            TABLE.TORE:TORE            TABLE.POINTS                                                              {{ pos.number }}              {{ pos.team.name }}              {{ pos.matches }}              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})              {{ pos.points }}                                                  {{ \\'LAST_UPDATED_AT\\' | translate }}: ({{ ranking.updated_at | date:\\'medium\\':\\'\\':i18Service.currentLang}})                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TableRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TableRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamIdPair.html":{"url":"interfaces/TeamIdPair.html","title":"interface - TeamIdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeamIdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        guest_team_id\n                                \n                                \n                                            Optional\n                                        home_team_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guest_team_id\n                                    \n                                \n                                \n                                    \n                                        guest_team_id:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        home_team_id\n                                    \n                                \n                                \n                                    \n                                        home_team_id:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamsQL: TeamsGQL, allTeamsGQL: AllTeamsGQL, renameTeamGQL: RenameTeamGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamsQL\n                                                  \n                                                        \n                                                                        TeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTeamsGQL\n                                                  \n                                                        \n                                                                        AllTeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameTeamGQL\n                                                  \n                                                        \n                                                                        RenameTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:34\n                \n            \n\n\n            \n                \n                    Calls the API to create a new Team\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(teamId: string, newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/team.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TeamsGQL, Team, AllTeamsGQL, RenameTeamGQL, TeamFragment } from '../../api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuid from 'uuid/v4';\n\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  allTeams: Observable = this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private teamsQL: TeamsGQL,\n    private allTeamsGQL: AllTeamsGQL,\n    private renameTeamGQL: RenameTeamGQL\n  ) {\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamName) {\n          reject(new Error('Empty Teamname'));\n        }\n        this.teamsQL.mutate(\n          {\n            id: uuid(),\n            name: teamName\n          },\n          {\n            refetchQueries: [\n              {query: this.allTeamsGQL.document}\n            ]\n          }\n        ).subscribe(\n          async (result) => {\n            resolve();\n          },\n            (error) => {\n              reject(error);\n            }\n        );\n      }\n    );\n  }\n\n  async renameTeam(teamId: string, newName: string) {\n    try {\n      await this.renameTeamGQL.mutate(\n        {\n          team_id: teamId,\n          new_name: newName\n        },\n        {\n          update: (store, { data }) => {\n            const team: any = store.readFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${teamId}`\n              }\n            );\n            store.writeFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${teamId}`,\n                data: {\n                  __typename: 'Team',\n                  ...team,\n                  name: newName\n                }\n              }\n            );\n          },\n        }\n      ).toPromise();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                ./teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, teamService: TeamService, snackBar: MatSnackBar, translateService: TranslateService, updateTeamContact: UpdateTeamContactGQL, userQGL: UserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTeamContact\n                                                  \n                                                        \n                                                                        UpdateTeamContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmailValidOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmailValidOrEmpty(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveContact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(teamId: string, firstname: string, lastname: string, email: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.authService.user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { UpdateTeamContactGQL, UserGQL } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n  user = this.authService.user;\n\n  constructor(\n    private authService: AuthenticationService,\n    public teamService: TeamService,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private updateTeamContact: UpdateTeamContactGQL,\n    private userQGL: UserGQL\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async saveContact(teamId: string, firstname: string, lastname: string, email: string, phone: string) {\n    try {\n      await this.updateTeamContact.mutate(\n        {\n          team_id: teamId,\n          email: email,\n          first_name: firstname,\n          last_name: lastname,\n          phone: phone\n        },\n        {\n          refetchQueries: [\n            { query: this.userQGL.document }\n          ]\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('TEAM_CONTACT_SAVE_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      {{ 'BUTTON.SAVE' | translate }}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./teamadmin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ \\'BUTTON.SAVE\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamadminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamadminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../../shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/teams/teams.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./teams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsGQL.html":{"url":"injectables/TeamsGQL.html","title":"injectable - TeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:978\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                tournament\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWinner\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tournamentChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tournamentId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(i18Service: I18Service, allTournamentQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWinner\n                        \n                        \n                    \n                \n            \n            \n                \ngetWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tournamentId\n                    \n                \n\n                \n                    \n                        gettournamentId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:17\n                                \n                            \n\n                \n                    \n                        settournamentId(t: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { I18Service } from '../../services/i18.service';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, Tournament } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  tournament: Observable;\n\n  get tournamentId(): string {\n    return localStorage.getItem('SELECTED_TOURNAMENT');\n  }\n  set tournamentId(t: string) {\n    localStorage.setItem('SELECTED_TOURNAMENT', t);\n  }\n\n  constructor(\n    public i18Service: I18Service,\n    private allTournamentQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.tournaments = this.allTournamentQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n    if (this.tournamentId) {\n      this.tournamentChanged();\n    }\n  }\n\n  matchUpdated(matchId: string) {\n    this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).refetch();\n  }\n\n  tournamentChanged() {\n\n    this.tournament = this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).valueChanges.pipe(\n      map(({ data }) => {\n        if (data.tournament.rounds) {\n          data.tournament.rounds = data.tournament.rounds.sort((a, b) => a.number ();\n    // for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    // }\n    // this.matches = this.matches.reverse();\n    // this.getWinner();\n  }\n\n  getWinner() {\n    // this.winnerLastRound = new Array();\n    // if (this.matches[0]) {\n    //   this.matches[0].forEach(\n    //     (match) => {\n    //       if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n    //         this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n    //       }\n    //     });\n    //   this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    // }\n  }\n\n  // newWinner(match: MatchViewModel) {\n  //   if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n  //     if (match.home_score > match.guest_score) {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n  //       this.winnerLastRound.push(match.home_team);\n  //     } else {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n  //       this.winnerLastRound.push(match.guest_team);\n  //     }\n\n  //     this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n    \n  \n  \n    \n      {{ 'NO_TOURNAMENT_ROUNDS_YET' | translate}}\n    \n    \n      \n        \n          {{ 'WINNER_LAST_ROUND' | translate }}\n        \n        \n          \n            {{ winner.name }}\n          \n        \n       -->\n      \n        \n          {{ 'VIERTELFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'HALBFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'FINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ round.number + 1 }}. {{ 'ROUND' | translate }}\n        \n        \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          {{ 'VIERTELFINALE' | translate }}\n          {{ 'HALBFINALE' | translate }}\n          {{ 'FINALE' | translate }}\n          {{ getRound(round[0].match_day_id).number }}. {{ 'ROUND' | translate }}\n        \n        ({{ getRound(round[0].match_day_id).start_date | date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{\n          getRound(round[0].match_day_id).end_date | date:'shortDate':'':i18Service.currentLang }})\n      \n    \n    \n      \n        \n          \n        \n      \n    \n   -->\n\n    \n\n    \n                \n                    ./tournament.component.less\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                        {{ \\'NO_TOURNAMENT_ROUNDS_YET\\' | translate}}                                {{ \\'WINNER_LAST_ROUND\\' | translate }}                                      {{ winner.name }}                         -->                        {{ \\'VIERTELFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'HALBFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'FINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ round.number + 1 }}. {{ \\'ROUND\\' | translate }}                                                                            {{ \\'VIERTELFINALE\\' | translate }}          {{ \\'HALBFINALE\\' | translate }}          {{ \\'FINALE\\' | translate }}          {{ getRound(round[0].match_day_id).number }}. {{ \\'ROUND\\' | translate }}                ({{ getRound(round[0].match_day_id).start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{          getRound(round[0].match_day_id).end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                           -->'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentGQL.html":{"url":"injectables/TournamentGQL.html","title":"injectable - TournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1235\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../../shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTeamContactGQL.html":{"url":"injectables/UpdateTeamContactGQL.html","title":"injectable - UpdateTeamContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTeamContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:991\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGQL.html":{"url":"injectables/UserGQL.html","title":"injectable - UserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1249\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allUsersGQL: AllUsersGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allUsersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AllUsersGQL, User } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  allUsers: Observable;\n\n  constructor(\n    private allUsersGQL: AllUsersGQL\n  ) { }\n\n  ngOnInit() {\n    this.allUsers = this.allUsersGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allUsers.sort((a, b) => a.email.toLowerCase() > b.email.toLowerCase() ? 1 : -1))\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        USERNAME\n        FIRST_NAME\n        LAST_NAME\n        USER_ROLE\n        TEAMS\n        \n      \n    \n    \n      \n        \n          {{ user.email }}\n        \n        \n          {{ user.first_name }}\n        \n        \n          {{ user.last_name }}\n        \n        \n          {{ user.role }}\n        \n        \n          \n            {{ team.name }}\n          \n        \n        \n          \n            \n              edit\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./user-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    USERNAME        FIRST_NAME        LAST_NAME        USER_ROLE        TEAMS                                              {{ user.email }}                          {{ user.first_name }}                          {{ user.last_name }}                          {{ user.role }}                                      {{ team.name }}                                                              edit                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddTeamToSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllSeasonsListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTournamentListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllUsersGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateMatchesForSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentRoundGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LatestEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LocateMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchPlanGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordChangeGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordResetGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PitchesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RankingGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveTeamFromSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RenameTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            ScheduleMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            StartSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SubmitResultGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateTeamContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            DatePeriod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            TeamIdPair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllSeasonsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllTournamentsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            ContactFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            EventFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchDayFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PitchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            RankingFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            SeasonFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TeamFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TournamentFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            UserFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            injectable\n            RedisEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            i18ServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/addteam.component.ts\n            \n            component\n            AddteamComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/rename-team/rename-team.component.ts\n            \n            component\n            RenameTeamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            component\n            ManageseasonComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            component\n            MatchSchedulingComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            IPossibleKickoffs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            ITeamCanPlayAtDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            component\n            AddtournamentroundComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            AddMatchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            RoundTeam\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            component\n            ManagetournamentComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/add-user/add-user.component.ts\n            \n            component\n            AddUserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            component\n            ManageusersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            component\n            ChangepasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            component\n            ContactlistComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            component\n            PitchesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            component\n            MatchplanComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            component\n            NewpasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            component\n            ContactPersonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            component\n            EditmatchPitchComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            component\n            EditmatchResultComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            component\n            EditmatchTimeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            component\n            SeasonchooserComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            interface\n            ISnackBarData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            component\n            TeamadminComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n            guard\n            TeamadminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createApollo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            uri\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            Credentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            LoginContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            injectable\n            GraphqlSubscriptionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            interface\n            MatchEventPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            injectable\n            I18Service\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            injectable\n            CustomOwlDateTimeIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            injectable\n            PitchService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            injectable\n            SeasonService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.9\n        \n            @angular/cdk : ^7.3.4\n        \n            @angular/common : ^7.2.9\n        \n            @angular/compiler : ^7.2.9\n        \n            @angular/core : ^7.2.9\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.9\n        \n            @angular/http : ^7.2.9\n        \n            @angular/material : ^7.3.4\n        \n            @angular/platform-browser : ^7.2.9\n        \n            @angular/platform-browser-dynamic : ^7.2.9\n        \n            @angular/router : ^7.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/googlemaps : ^3.30.19\n        \n            adm-zip : >=0.4.13\n        \n            apollo-angular : ^1.5.0\n        \n            apollo-angular-link-http : ^1.5.0\n        \n            apollo-cache-hermes : ^0.8.8\n        \n            apollo-cache-inmemory : ^1.5.1\n        \n            apollo-cache-persist : ^0.1.1\n        \n            apollo-client : ^2.5.1\n        \n            apollo-link-context : ^1.0.17\n        \n            apollo-link-ws : ^1.0.17\n        \n            bootstrap : ^4.3.1\n        \n            codacy-coverage : ^3.4.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.4\n        \n            core-js : ^2.6.5\n        \n            exec : ^0.2.1\n        \n            graphql : ^14.1.1\n        \n            graphql-code-generator : ^0.18.0\n        \n            graphql-codegen-add : ^0.18.0\n        \n            graphql-codegen-fragment-matcher : ^0.18.0\n        \n            graphql-codegen-introspection : ^0.18.0\n        \n            graphql-codegen-typescript-apollo-angular : ^0.18.0\n        \n            graphql-codegen-typescript-client : ^0.18.0\n        \n            graphql-codegen-typescript-common : ^0.18.0\n        \n            graphql-codegen-typescript-server : ^0.18.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.5.1\n        \n            jslint : ^0.12.1\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-pick-datetime : ^7.0.0\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.7\n        \n            queueing-subject : ^0.3.0\n        \n            rimraf : ^2.6.3\n        \n            rxjs : ^6.4.0\n        \n            rxjs-websockets : ^6.0.2\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SeasonState   (src/.../graphql.ts)\n                        \n                        \n                            UserRole   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                Value : preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n                        \n                            \n                                Value : ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 TeamManager\n                            \n                        \n                        \n                            \n                                Value : team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createApollo   (src/.../graphql.module.ts)\n                        \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createApollo\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApollo(httpLink, authService, ownService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpLink\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            i18ServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \ni18ServiceFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddUserComponent->AdminModule\n\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    37 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nImplement rescheduleMatchDay()\nImplement RankingPenalty\nImplement endSeason()\nUpdate Translation\nImplenet CreatePitches\nImplement EventComponent\nImplement Edit User\nImplement Edit Pitches (Overview + Contacts + Delete)\nImplement Cancel Match\nImplement Season History (show old Seasons)\nImplement Rename Teams - done\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _Team   (src/.../graphql.ts)\n                        \n                        \n                            AllPitches   (src/.../graphql.ts)\n                        \n                        \n                            AllSeasons   (src/.../graphql.ts)\n                        \n                        \n                            AllTeams   (src/.../graphql.ts)\n                        \n                        \n                            AllTournaments   (src/.../graphql.ts)\n                        \n                        \n                            AllUsers   (src/.../graphql.ts)\n                        \n                        \n                            AuthenticatedUser   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Date   (src/.../graphql.ts)\n                        \n                        \n                            DateTime   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Event   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            GuestTeam   (src/.../graphql.ts)\n                        \n                        \n                            HomeTeam   (src/.../graphql.ts)\n                        \n                        \n                            LatestEvents   (src/.../graphql.ts)\n                        \n                        \n                            Match   (src/.../graphql.ts)\n                        \n                        \n                            MatchDays   (src/.../graphql.ts)\n                        \n                        \n                            Matches   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Maybe   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Pitch   (src/.../graphql.ts)\n                        \n                        \n                            Positions   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Redisevent   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Rounds   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Subscription   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Tournament   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    _Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllPitches\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllSeasons\n                \n            \n            \n                \n                        AllSeasons.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTeams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTournaments\n                \n            \n            \n                \n                        AllTournaments.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllUsers\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedUser\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Date\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Event\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuestTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HomeTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LatestEvents\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Match\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MatchDays\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Matches\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pitch\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Positions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Rounds\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Ranking.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Season.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tournament\n                \n            \n            \n                \n                        Tournament.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/api/graphqlsubs.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redisevent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllSeasonsFragment   (src/.../graphql.ts)\n                        \n                        \n                            AllTournamentsFragment   (src/.../graphql.ts)\n                        \n                        \n                            ContactFragment   (src/.../graphql.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EventFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchDayFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchFragment   (src/.../graphql.ts)\n                        \n                        \n                            PitchFragment   (src/.../graphql.ts)\n                        \n                        \n                            RankingFragment   (src/.../graphql.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            result   (src/.../graphqlsubs.ts)\n                        \n                        \n                            result   (src/.../introspection-result.ts)\n                        \n                        \n                            SeasonFragment   (src/.../graphql.ts)\n                        \n                        \n                            TeamFragment   (src/.../graphql.ts)\n                        \n                        \n                            TournamentFragment   (src/.../graphql.ts)\n                        \n                        \n                            uri   (src/.../graphql.module.ts)\n                        \n                        \n                            UserFragment   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllSeasonsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AllTournamentsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ContactFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchDayFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PitchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RankingFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TeamFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TournamentFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'https://manager.wildeligabremen.de/api',\n    graphqlUrl: 'https://manager.wildeligabremen.de/api/graphql',\n    graphqlWsUrl: 'wss://manager.wildeligabremen.de/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  graphqlUrl: 'api/graphql',\n  graphqlWsUrl: `ws://${window.location.hostname}:4000`\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'http://192.168.178.23/api',\n    graphqlUrl: 'http:/192.168.178.23/api/graphql',\n    graphqlWsUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  graphqlUrl: 'api/graphql',\n  graphqlWsUrl: 'ws://localhost:4000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/graphqlsubs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/introspection-result.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.graphqlUrl\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
